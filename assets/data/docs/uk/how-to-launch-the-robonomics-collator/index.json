{"hash":"5027d5d4988b79447b45f0fec9effc9302a6f384","data":{"doc":{"id":"7e185585d1b303b2f68e9dcd62a78d0d","title":"Як запустити колатор Robonomics","description":"","contributors":["dergudzon","Leemo94"],"headings":[],"subtitles":[{"depth":2,"value":"Що таке колатор","anchor":"#що-таке-колатор"},{"depth":2,"value":"Вимоги","anchor":"#вимоги"},{"depth":2,"value":"Важлива інформація","anchor":"#важлива-інформація"},{"depth":2,"value":"Легко вперше запустіть колатор Robonomics","anchor":"#легко-вперше-запустіть-колатор-robonomics"},{"depth":2,"value":"Запустіть колатор Robonomics як службу","anchor":"#запустіть-колатор-robonomics-як-службу"},{"depth":2,"value":"Прискорення процесу синхронізації за допомогою знімка Kusama","anchor":"#прискорення-процесу-синхронізації-за-допомогою-знімка-kusama"},{"depth":2,"value":"Усунення неполадок","anchor":"#усунення-неполадок"},{"depth":3,"value":"Помилка: \"State Database error: Too many sibling blocks inserted\"","anchor":"#помилка-state-database-error-too-many-sibling-blocks-inserted"},{"depth":3,"value":"Помилка: \"cannot create module: compilation settings are not compatible with the native host\"","anchor":"#помилка-cannot-create-module-compilation-settings-are-not-compatible-with-the-native-host"}],"content":"\n<robo-wiki-note type=\"note\" title=\"Note\">\n  У відео та знімках екрану цієї статті ми використовували версію 1.4.0 Robonomics. Вам потрібно використовувати ті ж команди, але замінити весію Robonomics на поточну.\n</robo-wiki-note>\n\nhttps://youtu.be/wUTDDLDbzTg\n\nНаразі мережу Robonomics в основному підтримують початкові розробники, але будь-хто може підтримати проект. Кожен додатковий повний вузол блокчейну допомагає йому стати більш стійким та відмовостійким. Бінарні файли вузлів Robonomics доступні в [релізі](https://github.com/airalab/robonomics/releases) або їх можна [побудувати з вихідних кодів](/docs/how-to-build-collator-node/).\n\n## Що таке колатор\n\nКолатор є частиною паралельної мережі Robonomics. Цей тип вузла створює нові блоки для ланцюжка Robonomics.\n\n>Колатори підтримують парачейни, збираючи транзакції парачейну від користувачів та створюючи докази переходу стану для перевіряючих ланцюжок ретрансляції. Іншими словами, колатори підтримують парачейни, агрегуючи транзакції парачейну в кандидати на блоки парачейну та створюючи докази переходу стану для перевіряючих на основі цих блоків.\n\nВи можете дізнатися більше про колатори на відповідній [сторінці вікі Polkadot](https://wiki.polkadot.network/docs/learn-collator)\n\nУ парачейні Robonomics кожен збирач отримує винагороду в розмірі (**0,001598184 XRT**) за кожен створений збиральником блок (винагороди виникають, коли блоки запечатані в ланцюжку).\nТакож колатор, який створює блок, отримує **50% комісійних з операцій**, що містяться у створеному блоку.\n\n## Вимоги\n\nРекомендується запускати колатор з використанням **стандартних апаратних вимог** для [валідаторів Polkadot](https://wiki.polkadot.network/docs/maintain-guides-how-to-validate-polkadot#standard-hardware):\n+ Сумісний з x86-64.\n+ Intel Ice Lake або новіший (Xeon або серія Core); AMD Zen3 або новіший (EPYC або Ryzen).\n+ 4 фізичні ядра @ 3.4GHz.\n+ Вимкнена одночасна багатопотоковість (Hyper-Threading на Intel, SMT на AMD).\n+ Зберігання - NVMe SSD об'ємом 1 ТБ (так як воно повинно бути розумно розміром для роботи з ростом блокчейну).\n+ Пам'ять - 32 ГБ DDR4 ECC\n\n\nУ цій статті ми використовуємо наступні специфікації:\n+ 4 vCPU\n+ 700 ГБ простору NVMe для баз даних колатора. Необхідна можливість розширення цього дискового простору.\n+ 8 ГБ ОЗУ\n\n\n## Важлива інформація\n1. Ми використовуємо деякі змінні в цих інструкціях, і вам потрібно замінити значення на власні в усіх командах:\n    + **%NODE_NAME%** - це назва вузла. Наприклад: *my-robonomics-kusama-collator*\n    + **%BASE_PATH%** - це шлях до підключеного тома. Наприклад: */mnt/HC_Volume_16056435/*\n    + **%POLKADOT_ACCOUNT_ADDRESS%** - це адреса облікового запису в екосистемі Polkadot у форматі SS58. Наприклад: *4Gp3QpacQhp4ZReGhJ47pzExQiwoNPgqTWYqEQca9XAvrYsu*\n\n2. Зверніть увагу, що ви повинні включити *--state-cache-size=0* при запуску служби колатора. Цей параметр важливий для стабільності колатора.\nВи можете побачити більше інформації в відповідному [запиті](https://github.com/airalab/robonomics/issues/234) на github.\n\n## Легко вперше запустіть колатор Robonomics\n\nВи можете легко запустити колатор безпосередньо з командного рядка, щоб перевірити наявність помилок.\nПісля цього настійно рекомендується запустити колатор Robonomics як службу (див. наступний крок).\n\n```\nroot@robokusama-collator-screencast:~# robonomics \\\n  --parachain-id=2048 \\\n  --name=\"%NODE_NAME%\" \\\n  --validator \\\n  --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n  --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n  --base-path=\"%BASE_PATH%\" \\\n  --state-cache-size=0 \\\n  -- \\\n  --database=RocksDb \n```\n\n\n## Запустіть колатор Robonomics як службу\n\n1. Створіть користувача для служби з домашнім каталогом\n    ```\n    root@robokusama-collator-screencast:~# useradd -m robonomics\n    ```\n\n2. Завантажте, розпакуйте та перемістіть бінарний файл Robonomics до каталогу */usr/local/bin/*. Ви повинні замінити *$ROBONOMICS_VERSION* на поточну версію Robonomics у командах цього озділу. Поточну версію можна знайти на [сторінці релізів репозиторію Robonomics на github](https://github.com/airalab/robonomics/releases).\n   ```\n   root@robokusama-collator-screencast:~# wget https://github.com/airalab/robonomics/releases/download/v$ROBONOMICS_VERSION/robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# tar -xf robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# mv robonomics /usr/local/bin/\n   ```\n   ![Download Robonomics 1.4.0 binary](../images/how-to-launch-the-robonomics-collator/wget_binary.png)\n\n\n3. Створіть файл служби systemd з назвою *robonomics.service*:\n    ```\n    root@robokusama-collator-screencast:~# nano /etc/systemd/system/robonomics.service\n    ```\n\n    І додайте наступні рядки у файл служби:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n      --parachain-id=2048 \\\n      --name=\"%NODE_NAME%\" \\\n      --validator \\\n      --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n      --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n      --base-path=\"%BASE_PATH%\" \\\n      --state-cache-size=0 \\\n      --execution=Wasm \\\n      -- \\\n      --database=RocksDb \\\n      --execution=Wasm\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n    ![Create Robonomics service file](../images/how-to-launch-the-robonomics-collator/nano_robonomics_service.png)\n\n\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%\n    ```\n\n\n4. Збережіть цей файл, потім активуйте та запустіть службу:\n    ```\n    root@robokusama-collator-screencast:~# systemctl enable robonomics.service \n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\nURL телеметрії: https://telemetry.parachain.robonomics.network/#/Robonomics\n\nЖурнали Collators можна відстежувати за допомогою: `journalctl -u robonomics.service -f`\n\nПісля запуску сортувальника Robonomics він почне синхронізуватися з ланцюгом ретрансляції Kusama. Це може зайняти значний проміжок часу, залежно від швидкості вашої мережі та характеристик системи, тому ми рекомендуємо завантажити знімок Kusama.\n\n\n## Прискорення процесу синхронізації за допомогою знімка Kusama\n\nМи рекомендуємо це зробити одразу після створення та запуску служби Robonomics. Більше інформації про знімки та інструкції з використання можна знайти на наступній сторінці: https://ksm-rocksdb.polkashots.io/\n\nІнструкції:\n\n1. Зупиніть службу Robonomics та видаліть поточний каталог бази даних Kusama:\n    ```\n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/polkadot/chains/ksmcc3/db/\n    ```\n2. Завантажте актуальний знімок та розпакуйте його:\n    ```\n    root@robokusama-collator-screencast:~# wget https://ksm-rocksdb.polkashots.io/snapshot -O kusama.RocksDb.tar.lz4\n    root@robokusama-collator-screencast:~# lz4 -c -d kusama.RocksDb.tar.lz4 | tar -x -C %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n    ![Download Kusama snapshot](../images/how-to-launch-the-robonomics-collator/wget_kusama_snapshot.png)\n\n    Ви можете видалити завантажений архів після успішного розпакування:\n    ```\n    root@robokusama-collator-screencast:~# rm -v kusama.RocksDb.tar.lz4\n    ```\n\n3. Встановлення правильної власності для папки бази даних:\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n4. Запустіть службу Robonomics знову:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n5. Перевірте журнали служби:\n    ```\n    root@robokusama-collator-screencast:~# journalctl -u robonomics.service -f\n    ```    \n    ![Check service logs](../images/how-to-launch-the-robonomics-collator/finish_journalctl.png)\n\n## Усунення неполадок\n### Помилка: \"State Database error: Too many sibling blocks inserted\"\nЩоб виправити цю помилку, ви можете просто запустити свій сортувальник у режимі архіву:\n\n1) Спочатку потрібно зупинити службу Robonomics: \n    \n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    \n\n2) Потім додайте параметр `--state-pruning=archive` до частини сервісного файлу парачейну. Приклад відредагованого сервісного файлу:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n    --parachain-id=2048 \\\n    --name=\"%NODE_NAME%\" \\\n    --validator \\\n    --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n    --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n    --base-path=\"%BASE_PATH%\" \\\n    --state-cache-size=0 \\\n    --execution=Wasm \\\n    --state-pruning=archive \\\n    -- \\\n    --database=RocksDb \\\n    --execution=Wasm \n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n3) Перезавантажте конфігурацію менеджера systemd:\n    ```\n    root@robokusama-collator-screencast:~# systemctl daemon-reload\n    ```\n\n4) Видалть існуючу базу даних парачейну:\n    ```\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/chains/robonomics/db/\n    ```\n\n5) Запустіть сервіс робономіки:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\n    Після цього потрібно зачекати синхронізацію бази даних парачейну.\n\n### Помилка: \"cannot create module: compilation settings are not compatible with the native host\"\nЦя помилка пов'язана з параметрами віртуалізації. Потрібно використовувати тип \"host-model\" емульованого процесора. Ви можете налаштувати це на хості віртуалізації.\n\nАле якщо ви зустрінете цю помилку на будь-якому хостингу, вам потрібно звернутися до служби підтримки з тільки цією проблемою.\n","tools":["Ubuntu 22.04.1 https://releases.ubuntu.com/22.04/","Robonomics 2.6.0 https://github.com/airalab/robonomics"],"fileInfo":{"path":"uk/how-to-launch-the-robonomics-collator.md","name":"how-to-launch-the-robonomics-collator"}}},"context":{}}
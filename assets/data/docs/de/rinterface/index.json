{"hash":"4837eab19522bd51a4e900b04399f243c7412046","data":{"doc":{"id":"6ee8d086b5f1bbd3871a01437013c2ea","title":"Python-Schnittstelle und Robonomics IO","description":"","contributors":["PaTara43"],"headings":[],"subtitles":[{"depth":2,"value":"robonomics-interface","anchor":"#robonomics-interface"},{"depth":3,"value":"Installieren","anchor":"#installieren"},{"depth":3,"value":"Beispielverwendung","anchor":"#beispielverwendung"},{"depth":2,"value":"CLI tool","anchor":"#cli-tool"}],"content":"\n**Einige Extrinsiken, die in Robonomics-Paletten implementiert sind, können nicht über die Polkadot-App übermittelt werden. Darüber hinaus besteht \ndie Notwendigkeit, mithilfe von Programmiersprachen mit dieser Funktionalität zu interagieren. Zu diesem Zweck wurde ein einfaches Python-Tool entwickelt\nnamens [robonomics-interface](https://github.com/Multi-Agent-io/robonomics-interface). Es ist ein Wrapper über Polkascan-gepflegt\n[py-substrate-interface](https://github.com/polkascan/py-substrate-interface).Nachfolgend finden Sie eine kurze Beschreibung dieses Pakets\nund einige nützliche Links und Beispiele. Auch CLI-Tools werden diskutiert.**\n\n## robonomics-interface\n\nAuf [PyPi](https://pypi.org/project/robonomics-interface/) steht ein Paket zum Download und zur Einrichtung bereit.\nEs gibt auch eine detaillierte durch Docstring generierte [Dokumentation](https://multi-agent-io.github.io/robonomics-interface/) zur Verfügung.\n\nAlles in allem handelt es sich um ein Werkzeug für Entwickler, die über Programmierungstools mit der Robonomics-Blockchain interagieren möchten. Fast \nalle Python-Projekte des Robonomics-Teams, die mit der Parachain interagieren, verwenden diese Schnittstelle.\n\n### Installieren\n\nDer Installationsprozess erfordert, dass der Benutzer mindestens Python 3.8 installiert hat. Weder `x86`, noch `arm7`, noch `arm8`\nArchitekturen erfordern einen Kompilierungsprozess. Alle Wheels werden von den Abhängigkeitsverwaltern erstellt und veröffentlicht.\n\n`pip` wird als Installationswerkzeug verwendet:\n\n```bash\n$ pip3 install robonomics_interface\n```\n\n### Beispielverwendung\n\nDie Hauptidee besteht darin, eine `Account`-Instanz zu erstellen und sie dann zu verwenden, um palettenbezogene Instanzen zu erstellen.\n\n\n```python\nfrom robonomicsinterface import Account, Datalog\naccount = Account()\ndatalog_ = Datalog(account)\ndatalog_.get_item(addr=\"4G1V6yyvrkd3Z57H1giUky8RTRX3SZieRvuDpQzK4knNRy5R\",index=2)\n\n>>> (1657226418528, 'blah')\n```\n\n<robo-wiki-note type=\"note\" title=\"Local node\">\n\n  Es ist auch möglich, benutzerdefinierte Endpunkte zu verwenden (z. B. einen lokalen Knoten zum Testen):\n\n  ```python\n  account = Account(remote_ws=\"ws://127.0.0.1:9944\")\n  ```\n\n</robo-wiki-note>\n\nExtrinsiken können ebenfalls übermittelt werden:\n\n```python\nfrom robonomicsinterface import Account, Datalog\naccount = Account(seed=\"one two three four five six seven eight nine ten eleven twelve\")\ndatalog_ = Datalog(account)\ndatalog_.record(\"Hello, Robonomics!\")\n\n>>> 0xb2f742b6164ffc14b75a21188b37287c2416e6617635805e0a77db12773f6068  # this is an extrinsic hash\n```\n\n<robo-wiki-note type=\"note\" title=\"Docs\">\n\n  Wie bereits erwähnt, sind weitere Beispiele auf der [Dokumentationsseite](https://multi-agent-io.github.io/robonomics-interface/) verfügbar.\n\n</robo-wiki-note>\n\n## CLI tool\n\n`robonomics-interface` enthält auch ein Python `click` CLI-Tool, das für Prototyping und schnelle Tests verwendet werden kann. Es wird\nmit dem Paket installiert und im Terminal verfügbar:\n\n```bash\n$ robomomics_interface --help\n\n#Usage: robonomics_interface [OPTIONS] COMMAND [ARGS]...\n#\n#Options:\n#  --help  Show this message and exit.\n#\n#Commands:\n#  read   Subscribe to datalog/launch events in the chain\n#  write  Send various extrinsics (launch commands or record datalogs)\n```\n\nSie können es mit einem lokalen Knoten ausprobieren. Die Pipeline-Philosophie wird übernommen:\n\n```bash\n$ echo \"Hello, Robonomics!\" | robonomics_interface write datalog -s \"//Alice\" --remote_ws \"ws://127.0.0.1:9944\"\n\n#0x22dbac7d25d2ee67c7d985f074163f674c8c9b4c554e545ca4c7186307e9023c  # this is an extrinsic hash\n```","tools":["Robonomics 2.3.0 https://github.com/airalab/robonomics","robonomics_interface 1.3.5 https://github.com/Multi-Agent-io/robonomics-interface"],"fileInfo":{"path":"de/rinterface.md","name":"rinterface"}}},"context":{}}
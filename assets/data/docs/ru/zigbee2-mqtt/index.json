{"hash":"6be843d740b0c93a891ccc2e5854c92ec77e047b","data":{"doc":{"id":"777cbed389d6fff60827a2e7a3ef3d24","title":"Zigbee2MQTT setup","description":"","contributors":["LoSk-p","dergudzon","Leemo94"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Pairing device","anchor":"#pairing-device"}],"content":"\nAfter installing [MQTT broker](/docs/mqtt-broker/) to the Raspberry Pi, we can now set up Zigbee2MQTT stick.\n\nIf you have the JetHome USB JetStick Z2 it will already have the necessary firmware so you don't need to flash it. However, if you have another adapter the first thing you need to flash it with zigbee2MQTT software. You can find instructions for your device [here](https://www.zigbee2mqtt.io/information/supported_adapters.html).\n\nNecessary ziqbee2mqtt software has already been installed on the  Raspberry PI on previous steps. \n\nFirst, Connect the adapter to Raspberry PI. Now we need to find the location of our stick. For this write next command:\n\n```bash\n$ ls -l /dev/serial/by-id\n```\n\nOutput should look like:\n\n<robo-wiki-picture src=\"home-assistant/devices.jpg\" alt=\"connected devices\" />\n\nIn example Stick connection place is - `ttyUSB0`.\n\nThen you need to configure it. Before start Zigbee2MQTT we need to edit the configuration.yaml file. This file contains the configuration which will be used by Zigbee2MQTT.:\n\n```bash\nnano /opt/zigbee2mqtt/data/configuration.yaml\n```\n\nFor a basic configuration, the default settings are probably good. We just need to change statements:\n - `homeassistant:` to `true`. It will automatically connect sensors to Home Assistant.\n - uncommit `user` and `password`statements on `mqtt` and fill them with our username and password from MQTT Broker.(You create it in the previous article.)\n - change port in `serial`-> `port` to `/dev/stick_connection_place>`. In example `/dev/ttyUSB0`.\n\nReady configuration file will look like:\n\n```shell\n# Home Assistant integration (MQTT discovery)\nhomeassistant: true\n\n# allow new devices to join\npermit_join: true\n\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n  # MQTT server authentication, uncomment if required:\n  user: <YOUR_USERNAME>\n  password: <YOUR_PASSWORD>\n\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/<YOUR_PORT> # /dev/ttyUSB0 for example\n```\n\nNow you can run zigbee2mqtt:\n\n```bash\ncd /opt/zigbee2mqtt\nnpm start\n```\n\nWhen started successfully, you will see something like:\n```shell\nBuilding Zigbee2MQTT... (initial build), finished\nZigbee2MQTT:info  2022-07-29 14:36:36: Logging to console and directory: '/opt/zigbee2mqtt/data/log/2022-07-29.14-36-36' filename: log.txt\nZigbee2MQTT:info  2022-07-29 14:36:36: Starting Zigbee2MQTT version 1.26.0 (commit #bc4ffc0)\nZigbee2MQTT:info  2022-07-29 14:36:36: Starting zigbee-herdsman (0.14.40)\nZigbee2MQTT:info  2022-07-29 14:36:49: zigbee-herdsman started (resumed)\nZigbee2MQTT:info  2022-07-29 14:36:49: Coordinator firmware version: '{\"meta\":{\"maintrel\":1,\"majorrel\":2,\"minorrel\":7,\"product\":1,\"revision\":20211219,\"transportrev\":2},\"type\":\"zStack3x0\"}'\nZigbee2MQTT:info  2022-07-29 14:36:49: Currently 0 devices are joined:\nZigbee2MQTT:warn  2022-07-29 14:36:49: `permit_join` set to  `true` in configuration.yaml.\nZigbee2MQTT:warn  2022-07-29 14:36:49: Allowing new devices to join.\nZigbee2MQTT:warn  2022-07-29 14:36:49: Set `permit_join` to `false` once you joined all devices.\nZigbee2MQTT:info  2022-07-29 14:36:49: Zigbee: allowing new devices to join.\nZigbee2MQTT:info  2022-07-29 14:36:49: Connecting to MQTT server at mqtt://localhost\nZigbee2MQTT:info  2022-07-29 14:36:49: Connected to MQTT server\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/state', payload 'online'\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/config', payload '{\"commit\":\"bc4ffc0\",\"coordinator\":{\"meta\":{\"maintrel\":1,\"majorrel\":2,\"minorrel\":7,\"product\":1,\"revision\":20211219,\"transportrev\":2},\"type\":\"zStack3x0\"},\"log_level\":\"info\",\"network\":{\"channel\":11,\"extendedPanID\":\"0x00124b0020cd133d\",\"panID\":6754},\"permit_join\":true,\"version\":\"1.26.0\"}'\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/state', payload 'online\n```\n\n\n## Pairing device\n\nThen you need to pair your sensor. Usually you need just long press the power button until it starts to blink (zigbee2MQTT must be launched). After sensor connects you will see the message like:\n```\nZigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\n```\nAnd a lot of additional data about this sensor. Remember ID of sensor - in example `0x00158d0003eeeacf`.\n\nNow you should see this sensor with ID in your Home Assistant WebUI. Go to `settings` -> `Devices & Services` -> `Devices`:\n\n<robo-wiki-picture src=\"home-assistant/mqtt-devices.jpg\" />\n\n\n> After adding all sensors, you could stop program and open configuration file again and set `permit_join: false`, if you don't want to give ability to add other sensors.\n\nThen lets make a service. Create the file:\n\n```bash\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n```\n\nAdd the following to this file:\n\n```\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\n# Or use StandardOutput=null if you don't want Zigbee2MQTT messages filling syslog, for more options see systemd.exec(5)\nStandardError=inherit\nRestart=always\nUser=pi\n\n[Install]\nWantedBy=multi-user.target\n```\n\nVerify that the configuration works:\n\n```bash\nsudo systemctl start zigbee2mqtt\n```\n\n```bash\nsystemctl status zigbee2mqtt.service\n```\n\nOutput should look like:\n```\npi@raspberry:/opt/zigbee2mqtt $ systemctl status zigbee2mqtt.service\n● zigbee2mqtt.service - zigbee2mqtt\n   Loaded: loaded (/etc/systemd/system/zigbee2mqtt.service; disabled; vendor preset: enabled)\n   Active: active (running) since Thu 2018-06-07 20:27:22 BST; 3s ago\n Main PID: 665 (npm)\n   CGroup: /system.slice/zigbee2mqtt.service\n           ├─665 npm\n           ├─678 sh -c node index.js\n           └─679 node index.js\n\nJun 07 20:27:22 raspberry systemd[1]: Started zigbee2mqtt.\nJun 07 20:27:23 raspberry npm[665]: > zigbee2mqtt@1.6.0 start /opt/zigbee2mqtt\nJun 07 20:27:23 raspberry npm[665]: > node index.js\nJun 07 20:27:24 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Logging to directory: '/opt/zigbee2mqtt/data/log/2019-11-09.14-04-01'\nJun 07 20:27:25 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Starting Zigbee2MQTT version 1.6.0 (commit #720e393)\n```\n\nNow that everything works, we want systemctl to start Zigbee2MQTT automatically on boot, this can be done by executing:\n\n```bash\nsudo systemctl enable zigbee2mqtt.service\n```\nThat's all. Go to the next article [\"IOT subscription setup\"](/docs/iot-sub-setup/) to create robonomics parachain's accounts and activate subscription.","tools":["Zigbee2MQTT 1.26.0"],"fileInfo":{"path":"ru/zigbee2-mqtt.md","name":"zigbee2-mqtt"}}},"context":{}}
{"hash":"27d6626b76dcb92dd3ddfe09b4010e2c0ab01932","data":{"doc":{"id":"993ecbb0ea7ea23d25951bc63eee693b","title":"Цифровые двойники","description":"","contributors":["nakata5321","PaTara43"],"headings":[],"subtitles":[{"depth":2,"value":"Обзор теории","anchor":"#обзор-теории"},{"depth":2,"value":"Создание Digital Twin","anchor":"#создание-digital-twin"},{"depth":3,"value":"1. Перейдите в Разработчик -> Экстрансики","anchor":"#1-перейдите-в-разработчик---экстрансики"},{"depth":3,"value":"2. Выберите digitalTwin -> create из выпадающего списка возможных экстрансиков","anchor":"#2-выберите-digitaltwin---create-из-выпадающего-списка-возможных-экстрансиков"},{"depth":2,"value":"Добавление темы","anchor":"#добавление-темы"},{"depth":3,"value":"Выберите digitalTwin -> setSource из выпадающего списка возможных экстрансиков","anchor":"#выберите-digitaltwin---setsource-из-выпадающего-списка-возможных-экстрансиков"},{"depth":2,"value":"Explore","anchor":"#explore"}],"content":"  \n**Представьте, что у вас есть сложное устройство или система, которая имеет несколько модулей для обслуживания и требует нескольких учетных записей для использования. Чтобы хранить все это в одном месте или кодировать некоторую функциональность с отдельными учетными записями или, например, устанавливать разные источники datalog для разных информационных потоков, используется модуль Digital Twin.**\n\n<robo-wiki-note type=\"warning\" title=\"Dev Node\">\n\n  Обратите внимание, что эти и следующие учебники демонстрируются на локальном экземпляре узла Robonomics. Настройте свой с помощью [этих инструкций](/docs/run-dev-node).\n\n</robo-wiki-note>\n\n## Обзор теории\nЛюбая учетная запись может создавать и управлять Digital Twin. Twin можно представить как своего рода таблицу со следующим содержимым:\n\n| DT id  | Topic Name \t| Source    \t|\n|--------|------------\t|-----------\t|\n| 0      | 0x00...000 \t| 4Gz...hQJ \t|\n| 1      | 0x00...001 \t| 4GVi...Bn \t|\n| \t      | 0x00...002 \t| 4Hm...vLS \t|\n| \t      | 0x00...... \t| 4HQ...RQY \t|\n| n\t  | 0xFF...FFF \t| 4Hw...CyK \t|\n\n\nГде:\n* **DT id** - это беззнаковый целочисленный уникальный индекс Digital Twin.\n* **Topic name** is a hex `H256` or ASCII data of 32 bytes length, same as [`Запуск`](/docs/launch) extrinsic parameter. \nНапример: `0x1234....FF` или `hello.parachain.robonomics.world`.\n* **Source** - это некоторый адрес учетной записи.\n\n<robo-wiki-note type=\"note\" title=\"Topics\">\n\n  Как обсуждалось ранее во внешнем обзоре Запуска, `H256` может быть представлен как закодированный CID IPFS (см. [Инструмент Python](https://multi-agent-io.github.io/robonomics-interface/modules.html#robonomicsinterface.utils.ipfs_qm_hash_to_32_bytes) for that). для этого).\n  Поэтому топики могут использоваться и как хранилище данных, например, описание модуля Twin.\n\n</robo-wiki-note>\n\n\n## Создание Digital Twin\n\n### 1. Перейдите в Разработчик -> Экстрансики\n\n<robo-wiki-picture src=\"digital-twin/extrinsics.jpg\" />\n\n### 2. Выберите digitalTwin -> create из выпадающего списка возможных экстрансиков\n\n<robo-wiki-picture src=\"digital-twin/twin-create.jpg\" />\n\nОтправьте транзакцию. Здесь не требуются параметры для создания Twin. Теперь только владелец Digital Twin может добавлять/изменять темы Twin.\n\nID Twin можно найти на странице обзора Explorer.\n\n<robo-wiki-picture src=\"digital-twin/create-log.jpg\" />\n\n## Добавление темы\n\n### Выберите digitalTwin -> setSource из выпадающего списка возможных экстрансиков\n\n<robo-wiki-picture src=\"digital-twin/set-topic.jpg\" />\n\n* `id` - ID Digital Twin, полученный на странице Explorer.\n* `topic` - ранее обсуждаемое имя темы `H256`. На этой картинке это строка из 32 символов.\n* `source` - адрес учетной записи, связанный с темой.\n\n<robo-wiki-note type=\"note\" title=\"Overwrite\">\n\n  Обратите внимание, что тема может быть перезаписана другим адресом источника при необходимости.\n\n</robo-wiki-note>\n\nПодпишите и отправьте экстрансик.\n\n## Explore\n\nВы можете найти всю информацию о существующих Цифровые двойники в хранилище `Developer -> Chain state` модуля хранения `digitalTwin`.\n\n- Общее количество Twins - `total()`;\n- Владелец Digital Twin - `owner(u32)`;\n- Информация о темах Digital Twin - `digitalTwin(u32)`.\n\n<robo-wiki-picture src=\"digital-twin/chain-state.jpg\" />","tools":["Robonomics 2.3.0 https://github.com/airalab/robonomics","robonomics_interface 1.3.6 https://github.com/Multi-Agent-io/robonomics-interface"],"fileInfo":{"path":"ru/digital-twins.md","name":"digital-twins"}}},"context":{}}
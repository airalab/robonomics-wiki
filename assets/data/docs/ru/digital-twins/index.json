{"hash":"fafc1a72b280365300824608799e28058e0a2c73","data":{"doc":{"id":"993ecbb0ea7ea23d25951bc63eee693b","title":"Digital Twins","description":"","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/digital-twins.0b85c65.7a83b320bb1bbbdc0b0dab2b25d1e788.png","size":{"width":1920,"height":1080},"sizes":"(max-width: 1920px) 100vw, 1920px","srcset":["/assets/static/digital-twins.1b91758.7a83b320bb1bbbdc0b0dab2b25d1e788.png 480w","/assets/static/digital-twins.3df3210.7a83b320bb1bbbdc0b0dab2b25d1e788.png 1024w","/assets/static/digital-twins.0b85c65.7a83b320bb1bbbdc0b0dab2b25d1e788.png 1920w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1920 1080' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-0e8209e6eb307673a2647e98124dc9e8'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-0e8209e6eb307673a2647e98124dc9e8)' width='1920' height='1080' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsSAAALEgHS3X78AAACnUlEQVRo3u2YS08TURTH%2bxEMoi7UWqoiaI2vxJXfwaUrY4xRo6KSsMBoFJWSVixYUGJQFoKK1IAiKpoYNT4D4kKFxCiP1LbUTh9M2%2bn0ETr9O/em01RoqwsWHb0n%2bWfunTN3Mvc3576OZmlZBYhKdetQsnIN9IZtCAsCiEmShIWyVCqFYjTNErnjRGUbts4DQMzpmsb45BTsDie%2bfvsOh9OFKfsPeDgvxicm4Zp2w%2b3xYCL9jN3hgD8QyLQhfp4PFi0EzWLtWtr5nbt2Q1uxCbr1W34D0H23F9W1p3D9xk3sOXAEV9o7cMZoxnmzBaamFpyuN%2bHkWSNO1NWjq9uG1qvXcG/gMQ4eq8E500U0XrqM98Mj9F3JZLL4AJSuKoe2cjMM23dgebkBOhlGNoBQOIyfHo7%2bcfI3PRwHzusDHwzC5XZjhufTfg5en1/2eSEIEfj9Afho3YdwWCjeCKDjX4ZQIkfCohWrod/4H84BBMIyfeW8OYB8NJEkKVcpcy%2b7LqWVKqCijgBFuQD868YAMAAMAAPAADAADEB%2bALk2M3PLhfyqBpC9FSadIYcZpYNKOZefXImU9tlQVAWAWDweR0QU874gFoshGAqp7gzw1wAGBp/C0toGW18/3g19QOftHnR03sLQyEd03bHh8%2bgYTBYrXr5%2bK/uH0ffgIW3z4tUbfPoyqv4I6Om9j7qGC1QkH7Dv8HE0NDbTHMHeQ0fpMfnJs%2bcwN7dgf1U1TE1WGGV/VU0trG3tmaGkWgAkHxCY4eVQj6P/0SDNBpGw54MhCJEIZmeTSCQSiMlDJSrfj0ajtC6KUVmiuiNgIfIBqp4D5i5zysye%2bsPZv9DSqMqNkFrXeLYTZAAYAAaAAWAAGAAGgAFgABgABoAByGO/AMKHu4lXgjiuAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"},"contributors":["nakata5321"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Digital Twins Schema","anchor":"#digital-twins-schema"},{"depth":2,"value":"Create Digital Twin","anchor":"#create-digital-twin"},{"depth":2,"value":"Add DT Topic","anchor":"#add-dt-topic"},{"depth":2,"value":"Chain State","anchor":"#chain-state"}],"content":"\n## Requirements\n- `robonomics` [executable][ln1]\n- Be familiar with [parachain.robonomics][ln2]\n\n## Digital Twins Schema\n\nDigital twins have the following structure:\n\n| DT id \t| Topic Name \t| Source    \t|\n|-------\t|------------\t|-----------\t|\n| 0     \t| 0x00...000 \t| 4Gz...hQJ \t|\n| 1     \t| 0x00...001 \t| 4GVi...Bn \t|\n|       \t| 0x00...002 \t| 4Hm...vLS \t|\n|       \t| 0x00...... \t| 4HQ...RQY \t|\n|       \t| 0xFF...FFF \t| 4Hw...CyK \t|\n| 2     \t| 0x00...000 \t| 4HJ...k3o \t|\n\n Where:\n* **DT id** - is unsigned integer unique number.\n* **Topic name** - is 0x prefixed `H256 hex` or `ascii data` with 32 bytes length. For example: `0x1234....FF` and  `hello.parachain.robonomics.world`.\n* **Source** - is Account address.\n\n## Create Digital Twin\nGo to ***Developer -> Extrinsics*** and choose `digitalTwin.create()` extrinsic.\n![digital Twin create][im1]\n\n Submit transaction and go to ***Network -> Explorer*** and in the **recent events** you will see information about digital twin.\n ![digital Twin create info][im2]\n\n## Add DT Topic\n\nYou can create multiple topics for one digital twin. for creating topic you need go to ***Developer -> Extrinsics*** and choose `digitalTwin.setSource(id,topic,source)` extrinsic. Fill in the fields and submit transaction.\n![DT topic fields][im3]\n\nAgain go to **Network -> Explorer*** and in the **recent events** you will see information about created topic.\n![info about topic][im4]\n\nYou can create several topics for one twin.\n![topics][im5]\n\n## Chain State\n\nYou can find all information about existing *digital twins in* ***Developer -> Chain state*** such as:\n- Total number of Digital twins - total()\n- Information about owner of digital twin - owner(u32)\n- Information about topics in digital twin - digitalTwin(u32)\n![chain info][im6]\n\n\n[ln1]: <https://github.com/airalab/robonomics/releases>\n[ln2]: </docs/create-account-in-dapp>\n[im1]: <../images/digital-twin/twin-create.jpg>\n[im2]: <../images/digital-twin/create-log.jpg>\n[im3]: <../images/digital-twin/fields.jpg>\n[im4]: <../images/digital-twin/topic.jpg>\n[im5]: <../images/digital-twin/topics.jpg>\n[im6]: <../images/digital-twin/chain-state.jpg>\n","tools":[]}},"context":{}}
{"hash":"0196e6eaf77d64aeb5e8bcaa4d983797efef2fe5","data":{"doc":{"id":"820531e1d4d216256374522bbb098579","title":"Как запустить коллатор Robonomics","description":"","contributors":["dergudzon","Leemo94"],"headings":[],"subtitles":[{"depth":2,"value":"Что такое коллатор","anchor":"#что-такое-коллатор"},{"depth":2,"value":"Требования","anchor":"#требования"},{"depth":2,"value":"Важная информация","anchor":"#важная-информация"},{"depth":2,"value":"Первый раз легко запустить Robonomics коллатор","anchor":"#первый-раз-легко-запустить-robonomics-коллатор"},{"depth":2,"value":"Запустите Robonomics коллатор как сервис","anchor":"#запустите-robonomics-коллатор-как-сервис"},{"depth":2,"value":"Ускорение процесса синхронизации с использованием снимка Kusama","anchor":"#ускорение-процесса-синхронизации-с-использованием-снимка-kusama"},{"depth":2,"value":"Устранение неполадок","anchor":"#устранение-неполадок"},{"depth":3,"value":"Ошибка: \"State Database error: Too many sibling blocks inserted\"","anchor":"#ошибка-state-database-error-too-many-sibling-blocks-inserted"},{"depth":3,"value":"Ошибка: \"cannot create module: compilation settings are not compatible with the native host\"","anchor":"#ошибка-cannot-create-module-compilation-settings-are-not-compatible-with-the-native-host"}],"content":"\n<robo-wiki-note type=\"note\" title=\"Note\">\n  В видео и скриншотах этой статьи мы использовали версию 1.4.0 Robonomics. Вам нужно использовать те же команды, но заменить версию Robonomics на текущую.\n</robo-wiki-note>\n\nhttps://youtu.be/wUTDDLDbzTg\n\nВ настоящее время сеть Robonomics в основном поддерживается начальными разработчиками, но любой может поддержать проект. Каждый дополнительный полный узел блокчейна помогает ему стать более устойчивым и устойчивым к сбоям. Бинарные файлы узла Robonomics доступны в [релизе](https://github.com/airalab/robonomics/releases) или их можно [собрать из исходного кода](/docs/how-to-build-collator-node/).\n\n## Что такое коллатор\n\nКоллатор является частью парачейна Robonomics. Этот тип узла создает новые блоки для цепи Robonomics.\n\n>Коллаторы поддерживают парачейны, собирая транзакции парачейна от пользователей и создавая доказательства перехода состояния для валидаторов цепи ретрансляции. Другими словами, коллаторы поддерживают парачейны, агрегируя транзакции парачейна в кандидаты на блоки парачейна и создавая доказательства перехода состояния для валидаторов на основе этих блоков.\n\nВы можете узнать больше о коллаторах на связанной [странице вики Polkadot](https://wiki.polkadot.network/docs/learn-collator)\n\nВ парачейне Robonomics каждый коллатор получает вознаграждение (**0.001598184 XRT**) за каждый блок, который коллатор строит (вознаграждения происходят при запечатывании блоков в цепь). \nТакже коллатор, который строит блок, получает **50% комиссии за транзакции**, содержащиеся в созданном им блоке.\n\n## Требования\n\nРекомендуется запускать коллатор с использованием **стандартных аппаратных требований** для [валидаторов Polkadot](https://wiki.polkadot.network/docs/maintain-guides-how-to-validate-polkadot#standard-hardware):\n+ совместимый с x86-64.\n+ Intel Ice Lake или новее (Xeon или Core серии); AMD Zen3 или новее (EPYC или Ryzen).\n+ 4 физических ядра @ 3.4GHz.\n+ Одновременная многопоточность отключена (Hyper-Threading на Intel, SMT на AMD).\n+ Хранение - NVMe SSD объемом 1 ТБ (так как он должен быть разумного размера для работы с ростом блокчейна).\n+ Память - 32 ГБ DDR4 ECC\n\n\nВ этой статье мы используем следующие спецификации:\n+ 4 vCPU\n+ 700 ГБ пространства NVMe для баз данных коллатора. Требуется возможность расширения этого дискового пространства.\n+ 8 ГБ ОЗУ\n\n\n## Важная информация\n1. Мы используем некоторые переменные в этих инструкциях, и вам нужно будет заменить значения на свои во всех командах:\n    + **%NODE_NAME%** это имя узла. Пример: *my-robonomics-kusama-collator*\n    + **%BASE_PATH%** это путь к примонтированному тому. Пример: */mnt/HC_Volume_16056435/*\n    + **%POLKADOT_ACCOUNT_ADDRESS%** это адрес учетной записи в экосистеме Polkadot в формате SS58. Пример: *4Gp3QpacQhp4ZReGhJ47pzExQiwoNPgqTWYqEQca9XAvrYsu*\n\n2. Обратите внимание, что в запуске службы коллатора необходимо включить *--state-cache-size=0*. Этот параметр важен для стабильности коллатора.\nВы можете увидеть больше информации в связанной [проблеме](https://github.com/airalab/robonomics/issues/234) на github.\n\n## Первый раз легко запустить Robonomics коллатор\n\nВы можете легко запустить коллатор напрямую в командной строке, чтобы проверить наличие ошибок.\nПосле этого настоятельно рекомендуется запустить Robonomics коллатор как сервис (смотрите следующий шаг).\n\n```\nroot@robokusama-collator-screencast:~# robonomics \\\n  --parachain-id=2048 \\\n  --name=\"%NODE_NAME%\" \\\n  --validator \\\n  --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n  --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n  --base-path=\"%BASE_PATH%\" \\\n  --state-cache-size=0 \\\n  -- \\\n  --database=RocksDb \n```\n\n\n## Запустите Robonomics коллатор как сервис\n\n1. Создайте пользователя для сервиса с домашним каталогом\n    ```\n    root@robokusama-collator-screencast:~# useradd -m robonomics\n    ```\n\n2. Скачайте, извлеките и переместите бинарный файл Robonomics в каталог */usr/local/bin/*. В командах в этом разделе необходимо заменить *$ROBONOMICS_VERSION* на текущую версию Robonomics. Вы можете найти текущую версию на [странице релизов репозитория Robonomics на github](https://github.com/airalab/robonomics/releases).\n   ```\n   root@robokusama-collator-screencast:~# wget https://github.com/airalab/robonomics/releases/download/v$ROBONOMICS_VERSION/robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# tar -xf robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# mv robonomics /usr/local/bin/\n   ```\n   ![Download Robonomics 1.4.0 binary](../images/how-to-launch-the-robonomics-collator/wget_binary.png)\n\n\n3. Создайте файл службы systemd с именем *robonomics.service*:\n    ```\n    root@robokusama-collator-screencast:~# nano /etc/systemd/system/robonomics.service\n    ```\n\n    And add the following lines in the service file:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n      --parachain-id=2048 \\\n      --name=\"%NODE_NAME%\" \\\n      --validator \\\n      --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n      --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n      --base-path=\"%BASE_PATH%\" \\\n      --state-cache-size=0 \\\n      --execution=Wasm \\\n      -- \\\n      --database=RocksDb \\\n      --execution=Wasm\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n    ![Create Robonomics service file](../images/how-to-launch-the-robonomics-collator/nano_robonomics_service.png)\n\n\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%\n    ```\n\n\n4. Сохраните этот файл, затем включите и запустите службу:\n    ```\n    root@robokusama-collator-screencast:~# systemctl enable robonomics.service \n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\nURL телеметрии: https://telemetry.parachain.robonomics.network/#/Robonomics\n\nЖурналы коллаторов можно отслеживать с помощью: `journalctl -u robonomics.service -f` \n\nПосле запуска Robonomics коллатора он начнет синхронизацию с Kusama Relay Chain, это может занять значительное время в зависимости от скорости вашей сети и системных характеристик, поэтому рекомендуется загрузить снимок Kusama. \n\n\n## Ускорение процесса синхронизации с использованием снимка Kusama\n\nМы рекомендуем сделать это сразу после создания и запуска службы Robonomics. Более подробную информацию о снимках и инструкции по использованию вы можете найти на следующей странице: https://ksm-rocksdb.polkashots.io/\n\nИнструкции:\n\n1. Остановите службу Robonomics и удалите текущий каталог базы данных Kusama:\n    ```\n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/polkadot/chains/ksmcc3/db/\n    ```\n2. Скачайте актуальный снимок и извлеките его:\n    ```\n    root@robokusama-collator-screencast:~# wget https://ksm-rocksdb.polkashots.io/snapshot -O kusama.RocksDb.tar.lz4\n    root@robokusama-collator-screencast:~# lz4 -c -d kusama.RocksDb.tar.lz4 | tar -x -C %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n    ![Download Kusama snapshot](../images/how-to-launch-the-robonomics-collator/wget_kusama_snapshot.png)\n\n    You can remove the downloaded archive after succesful unpacking:\n    ```\n    root@robokusama-collator-screencast:~# rm -v kusama.RocksDb.tar.lz4\n    ```\n\n3. Установите правильную собственность для папки базы данных:\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n4. Запустите службу Robonomics снова:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n5. Проверьте журналы службы:\n    ```\n    root@robokusama-collator-screencast:~# journalctl -u robonomics.service -f\n    ```    \n    ![Check service logs](../images/how-to-launch-the-robonomics-collator/finish_journalctl.png)\n\n## Устранение неполадок\n### Ошибка: \"State Database error: Too many sibling blocks inserted\"\nFor fix this error you can just launch your collator in archive mode: \n\n1) First, need to stop the Robonomics service: \n    \n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    \n\n2) Затем добавьте параметр `--state-pruning=archive` к части службы parachain. Пример отредактированного файла службы:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n    --parachain-id=2048 \\\n    --name=\"%NODE_NAME%\" \\\n    --validator \\\n    --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n    --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n    --base-path=\"%BASE_PATH%\" \\\n    --state-cache-size=0 \\\n    --execution=Wasm \\\n    --state-pruning=archive \\\n    -- \\\n    --database=RocksDb \\\n    --execution=Wasm \n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n3) Перезагрузите конфигурацию менеджера systemd:\n    ```\n    root@robokusama-collator-screencast:~# systemctl daemon-reload\n    ```\n\n4) Удалите существующую базу данных parachain:\n    ```\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/chains/robonomics/db/\n    ```\n\n5) Запустите службу robonomics:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\n    After that need to wait for the synchronization of the parahain database.\n\n### Ошибка: \"cannot create module: compilation settings are not compatible with the native host\"\nЭта ошибка связана с параметрами виртуализации. Необходимо использовать тип эмулируемого процессора \"host-model\". Вы можете настроить это на хосте виртуализации.\n\nНо, если вы заметили эту ошибку на каком-либо хостинге, вам нужно только обратиться с этой проблемой в техподдержку.\n","tools":["Ubuntu 22.04.1 https://releases.ubuntu.com/22.04/","Robonomics 2.6.0 https://github.com/airalab/robonomics"],"fileInfo":{"path":"ru/how-to-launch-the-robonomics-collator.md","name":"how-to-launch-the-robonomics-collator"}}},"context":{}}
{"hash":"cf2ee81a1fe6abd5ff501c85b37edf37fbdbe800","data":{"doc":{"id":"c6549682643fbda6e88f97e192546494","title":"Home Assistant x Robonomcis","description":"","contributors":["LoSk-p","dergudzon","Leemo94","PaTara43"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Install Home Assistant and Robonomics Integration from Scratch","anchor":"#install-home-assistant-and-robonomics-integration-from-scratch"},{"depth":3,"value":"1. Get image","anchor":"#1-get-image"},{"depth":3,"value":"2. Configure Image","anchor":"#2-configure-image"},{"depth":2,"value":"Add Robonomics integration to Existing Home Assistant Docker","anchor":"#add-robonomics-integration-to-existing-home-assistant-docker"},{"depth":3,"value":"1. Install","anchor":"#1-install"},{"depth":3,"value":"2. Verify","anchor":"#2-verify"},{"depth":2,"value":"Add Robonomics integration to Existing Home Assistant Core","anchor":"#add-robonomics-integration-to-existing-home-assistant-core"},{"depth":3,"value":"1. Install","anchor":"#1-install-1"},{"depth":3,"value":"2. Verify","anchor":"#2-verify-1"},{"depth":2,"value":"Add Robonomics integration to Existing Home Assistant OS","anchor":"#add-robonomics-integration-to-existing-home-assistant-os"}],"content":"\n**This article contains various installation methods to set up a Home Assistant with Robonomics services.** \n\n**If you don't have a Home Assistant instance, install it together with Robonomics following\n[these instructions](#install-home-assistant-and-robonomics-integration-from-scratch). \nTo upgrade your existing Home Assistant with Robonomics integration, check corresponding instructions for Home Assistant\n[Docker](#add-robonomics-integration-to-existing-home-assistant-docker), [Core](#add-robonomics-integration-to-existing-home-assistant-core)\nand [Home Assistant OS](#add-robonomics-integration-to-existing-home-assistant-os).**\n\n\n## Install Home Assistant and Robonomics Integration from Scratch\n\n<robo-wiki-note type=\"warning\" title=\"Clean set up\">\n\n  Pay attention that this method implies setting up a whole new OS on your Raspberry Pi. If you have one with some vital\n  information, please install Home Assistant **Docker** or **Core** following \n  [official guides](https://www.home-assistant.io/installation/raspberrypi) and then augment them with Robonomics.\n\n</robo-wiki-note>\n\n### 1. Get image\nTo simplify the installation process when starting from scratch, a pre-made image may be used. It contains Home Assistant\nCore with Robonomics integration and IPFS.\n\nTo download it, IPFS is to be used. [Install IPFS](https://docs.ipfs.tech/install/command-line/) and start the daemon \n(Don't forget to run `ipfs init` before the first start):\n```shell\nipfs daemon\n```\n\nIn other terminal download image with\n\n```shell\nipfs get Qmdca36xtJe86Mni9tAKNXpzihhNVRGKcJfb7xEeUdnfW6 -o rpi.img.xz\n```\n\n<robo-wiki-note type=\"Note\" title=\"Browser alternative\">\n\n  Alternatively, you can download it \n  [from url.](https://ipfs.io/ipfs/Qmdca36xtJe86Mni9tAKNXpzihhNVRGKcJfb7xEeUdnfW6?filename=rpi_hass.img.gz) \n  (**Only with IPFS Daemon started**)\n\n</robo-wiki-note>\n\n\nProceed to the next chapter to install the image.\n\n### 2. Configure Image\n\nInstall [balena etcher](https://www.balena.io/etcher/) on your computer. Then, insert the SD card and run the Imager program. \nSelect required image as the operating system and ensure to select your SD card from the storage dropdown, and then `flash` image.\n\n<robo-wiki-picture src=\"home-assistant/balena.jpg\" alt=\"Balena installer\" />\n\nOpen the SD card's storage and navigate inside the root folder of the card. The name of the folder should be something similar to `system-boot`.\n\nFind the file named `network-config` and open it in a text editor. Copy the text below and paste it into the file and insert your **wi-fi name** and **wi-fi password**:\n\n```\nversion: 2\nethernets: \n  eth0:\n    dhcp4: true\n    optional: true\nwifis:\n  wlan0:\n    dhcp4: true\n    optional: true\n    access-points:\n      YOUR_WIFI_NAME:\n        password: \"YOUR_WIFI_PASSWORD\"\n```\n\n<robo-wiki-note type=\"warning\">Make sure that you input your actual Wi-Fi name and your Wi-Fi password.</robo-wiki-note>\n\n<robo-wiki-note type=\"note\">This Wi-Fi settings available only on first boot setup.\nIf later you need to change settings, please edit configuration file in `/etc/netplan/` folder. \n</robo-wiki-note>\n\nThen you need to save the file, **safely eject the SD card**, and insert it into the Raspberry Pi and turn it on. It should connect to your wi-fi network. \n\nNow find the Raspberry Pi's IP address. To find address you can use [Fing mobile app](https://www.fing.com/products)\nor [nmap CLI tool](https://vitux.com/find-devices-connected-to-your-network-with-nmap/).  In this example the Raspberry Pi's address is `192.168.43.56`.\nConnect to it over `ssh`:\n\n```bash\nssh ubuntu@192.168.43.56\n```\n\n<robo-wiki-note type=\"note\"> User is \"ubuntu\". Password is \"ubuntu\". </robo-wiki-note>\n\n\nNow that you have a Raspberry Pi with Home Assistant, Robonomics and IPFS installed, proceed to the [MQTT Broker](/docs/mqtt-broker/)\ninstallation where you also configure your newly installed Home Assistant and add MQTT integration to it. After that you will\nconnect your Zigbee devices to your Home Assistant.\n\n## Add Robonomics integration to Existing Home Assistant Docker\n\n<robo-wiki-note type=\"warning\" title=\"DISCLAIMER\">\n\n  Here, Robonomics integration and IPFS are to be installed along with existing Home Assistant Docker.\n\n  1. This section is designed with an assumption that default Docker images and container of Home Assistant named \n  <u>homeassistant</u> are used.\n  2. IPFS will be installed and run as a <u>systemd</u> service on the host machine.\n  3. It is assumed that you have Python3.9 or higher installed.\n\n</robo-wiki-note>\n\n### 1. Install\n\nDownload the installation script and run it with bash:\n\n```shell\nwget https://raw.githubusercontent.com/LoSk-p/robonomics-hass-utils/main/raspberry_pi/install_integration_docker.sh\nsudo bash install_integration_docker.sh\n```\n\nYou will see the following output:\n\n```shell\n<...>\nadded /dns4/3.pubsub.aira.life/tcp/443/wss/ipfs/QmWZSKTEQQ985mnNzMqhGCrwQ1aTA6sxVsorsycQz9cQrw\n<...>\nIPFS daemon installed and launched, use ipfs-daemon.service to manage.\n<...>\nExecuting subversion-1.14.2-r1.pre-install\nExecuting busybox-1.35.0-r17.trigger\nOK: 157 MiB in 165 packages\n<...>\nA    robonomics/utils.py\nChecked out revision 120.\nIntegration downloaded!\n```\n\n<robo-wiki-note type=\"note\" title=\"`custom_components` exists.\">\n\n  You may see an error like `mkdir: can't create directory 'custom_components': File exists`. This\n  means that you have already installed some custom components and the folder exists. Ignore this message.\n\n</robo-wiki-note>\n\nRestart the container:\n\n<robo-wiki-tabs>\n  <robo-wiki-tab title=\"Docker\">\n    <pre>docker restart homeassistant</pre>\n  </robo-wiki-tab>\n  <robo-wiki-tab title=\"Docker Compose\">\n    <pre>docker compose restart</pre>\n  </robo-wiki-tab>\n</robo-wiki-tabs>\n\n\n### 2. Verify\n\nCheck that IPFS service is up and running:\n```shell\nubuntu@ubuntu:~$ systemctl status ipfs-daemon.service \n● ipfs-daemon.service - IPFS Daemon Service\n     Loaded: loaded (/etc/systemd/system/ipfs-daemon.service; enabled; preset: enabled)\n     Active: active (running) since Thu 2022-11-03 11:30:39 UTC; 14min ago\n   Main PID: 4400 (ipfs)\n      Tasks: 12 (limit: 4416)\n     Memory: 141.9M\n        CPU: 3min 5.031s\n     CGroup: /system.slice/ipfs-daemon.service\n             └─4400 /usr/local/bin/ipfs daemon\n```\n\nYou will see the integration available while going through further steps of this tutorial.\n\nNow that the integration is added to the folder of custom components of Home Assistant, you have two options:\n\n- Whether you have MQTT integration installed and some Zigbee devices connected by either Zigbee2MQTT or any other hardware,\nproceed to [configuration steps](/docs/iot-sub-setup) of Robonomics subscription and Robonomics Integration.\n- Otherwise, navigate to [MQTT Broker](/docs/mqtt-broker/) installation where you also add MQTT integration to your Home\nAssistant and connect your Zigbee devices to your Home Assistant via preferred hardware.\n\n## Add Robonomics integration to Existing Home Assistant Core\n\n<robo-wiki-note type=\"warning\" title=\"DISCLAIMER\">\n\n  Here, Robonomics integration and IPFS are to be installed along with existing Home Assistant Core.\n\n  1. This section is designed with an assumption that installation went completely according to \n  [instructions](https://www.home-assistant.io/installation/raspberrypi#install-home-assistant-core) given by Home Assistant\n  developers and there is a <u>homeassistant</u> user and venv. If it is not the case, follow instructions below **but edit the script accordingly**.\n  2. IPFS will be installed and run as a <u>systemd</u> service on the host machine.\n  3. It is assumed that you have Python3.9 or higher installed.\n\n</robo-wiki-note>\n\n### 1. Install\n\nDownload the installation script and run it with bash:\n  \n```shell\nwget https://raw.githubusercontent.com/LoSk-p/robonomics-hass-utils/main/raspberry_pi/install_integration_core.sh\nsudo bash install_integration_core.sh\n```\n\nYou will see the following output:\n\n```shell\n<...>\nhttps://raw.githubusercontent.com/LoSk-p/robonomics-hass-utils/main/raspberry_pi/install_ipfs_arc_dependent.sh\n<...>\nIPFS daemon installed and launched, use ipfs-daemon.service to manage.\n<...>\nA    robonomics/utils.py\nChecked out revision 125.\nIntegration downloaded!\n```\n\nSomewhere along the way you will be asked to confirm the restart of several services. Navigating with `tab`, select the `yes` option.\n  \n<robo-wiki-note type=\"note\" title=\"`custom_components` exists.\">\n\n  You may see an error like `mkdir: can't create directory 'custom_components': File exists`. This\n  means that you have already installed some custom components and the folder exists. Ignore this message.\n\n</robo-wiki-note>\n  \nRestart your Home Assistant.\n\n### 2. Verify\n\nCheck that IPFS service is up and running:\n```shell\nubuntu@ubuntu:~$ systemctl status ipfs-daemon.service \n● ipfs-daemon.service - IPFS Daemon Service\n     Loaded: loaded (/etc/systemd/system/ipfs-daemon.service; enabled; preset: enabled)\n     Active: active (running) since Thu 2022-11-03 11:30:39 UTC; 14min ago\n   Main PID: 4400 (ipfs)\n      Tasks: 12 (limit: 4416)\n     Memory: 141.9M\n        CPU: 3min 5.031s\n     CGroup: /system.slice/ipfs-daemon.service\n             └─4400 /usr/local/bin/ipfs daemon\n```\n\nYou will see the integration available while going through further steps of this tutorial.\n\nNow that the integration is added to the folder of custom components of Home Assistant, you have two options:\n\n- Whether you have MQTT integration installed and some Zigbee devices connected by either Zigbee2MQTT or any other hardware,\nproceed to [configuration steps](/docs/iot-sub-setup) of Robonomics subscription and Robonomics Integration.\n- Otherwise, navigate to [MQTT Broker](/docs/mqtt-broker/) installation where you also add MQTT integration to your Home\nAssistant and connect your Zigbee devices to your Home Assistant via preferred hardware\n\n## Add Robonomics integration to Existing Home Assistant OS\n\n**This part is under maintenance, to be updated soon.**\n\n[//]: # (## Troubleshooting)\n\n[//]: # (todo)\n[//]: # (nmap)","tools":["Ubuntu Server 22.04 LTS https://ubuntu.com/download/raspberry-pi","Home Assistant 2022.8.2 https://github.com/home-assistant/core","Docker https://www.docker.com/","Robonomics integration 1.1.0 https://github.com/airalab/homeassistant-robonomics-integration","robonomics-interface 1.3.6 https://github.com/Multi-Agent-io/robonomics-interface/","IPFS 0.14.0 https://docs.ipfs.tech/"],"fileInfo":{"path":"ru/home-assistant-x-robonomics.md","name":"home-assistant-x-robonomics"}}},"context":{}}
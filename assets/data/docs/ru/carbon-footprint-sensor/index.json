{"hash":"17cc78d0b06fdca2940be0bd65777dc98e2b7d1b","data":{"doc":{"id":"913a55baa4b53921c2dff12ff4a46a1c","title":"Подключите датчик","description":"","contributors":["LoSk-p","makyul"],"headings":[],"subtitles":[{"depth":2,"value":"Требования","anchor":"#требования"},{"depth":2,"value":"Адаптер Zigbee","anchor":"#адаптер-zigbee"},{"depth":2,"value":"Установка","anchor":"#установка"},{"depth":2,"value":"Конфигурация","anchor":"#конфигурация"},{"depth":2,"value":"Подключите розетку","anchor":"#подключите-розетку"},{"depth":2,"value":"После сопряжения","anchor":"#после-сопряжения"},{"depth":2,"value":"Запуск","anchor":"#запуск"}],"content":"\nПример работы есть в видео:\n\nhttps://youtu.be/jsaFCVAx2sA\n\n## Требования\n\n* [Aqara Smart Plug](https://aqara.ru/product/aqara-smart-plug/?yclid=462434430312045270)\n* Raspberry Pi\n* Адаптер Zigbee [JetHome USB JetStick Z2](https://jhome.ru/catalog/parts/PCBA/293/) (или один из [поддерживаемых](https://www.zigbee2mqtt.io/information/supported_adapters.html))\n\nСервис работает на Raspberry Pi и связывается со смарт-розеткой через протокол Zigbee.\n\n## Адаптер Zigbee\n\nЕсли у вас есть JetHome USB JetStick Z2, он уже имеет необходимое программное обеспечение, поэтому вам не нужно его прошивать. Но если у вас есть другой адаптер, сначала вам нужно прошить его с помощью программного обеспечения zigbee2MQTT. Инструкции для вашего устройства можно найти [здесь](https://www.zigbee2mqtt.io/information/supported_adapters.html).\n\nПодключите адаптер и проверьте адрес адаптера (он также может быть `/dev/ttyUSB1`):\n```bash\n$ ls -l /dev/ttyUSB0\ncrw-rw---- 1 root dialout 166, 0 May 16 19:15 /dev/ttyUSB0 \n```\n\nВозможно, вам потребуется получить доступ к USB-порту. Добавьте своего пользователя в группу `dialout` (это работает для Ubuntu, но имя группы может отличаться в других ОС).\nДля Ubuntu:\n```bash\nsudo usermod -a -G dialout $USER\n```\nДля Arch:\n```bash\nsudo usermod -a -G uucp $USER\n```\nЗатем выйдите из системы и войдите снова или перезагрузите компьютер.\n\n## Установка\n\nКлонируйте репозиторий:\n\n```\ngit clone https://github.com/makyul/robonomics-carbon-footprint.git\ncd robonomics-carbon-footprint\n```\n\n## Конфигурация\n\nПерейдите в `data/configuration.yaml` и установите `permit_join: true`:\n\n```\n# Home Assistant integration (MQTT discovery)\nhomeassistant: false\n\n# allow new devices to join\npermit_join: true\n\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://172.17.0.1'\n  # MQTT server authentication, uncomment if required:\n  # user: my_user\n  # password: my_password\n\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/ttyUSB0\n```\nТакже вы можете заполнить поля `server` и `port` соответствующей информацией. В поле `server` используйте IP-адрес моста `docker0` для установления соединения: \n\n```bash\n$ ip a                                                 127\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\n...\n\n5: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:0d:ff:5f:a3 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:dff:feff:5fa3/64 scope link \n       valid_lft forever preferred_lft forever\n```\nЗдесь ваш адрес - `172.17.0.1`.\n\nЗатем создайте файл config/config.yaml со следующей информацией и установите свое местоположение (вы можете посмотреть на https://countrycode.org/ для 3-буквенного ISO-кода):\n\n```\nlocation: RUS\nservice_address: 4GdHeLbmio2noKCQM5mfxswXfPoW2PcbpYKKkM4NQiqSqJMd\ntwin_id: 5\nsending_timeout: 3600\nbroker_address: \"172.17.0.1\"\nbroker_port: 1883\n```\n\n## Подключите розетку\n\nПервый запуск:\n\n```\ndocker-compose up     \n```\n\nЧтобы перейти в режим сопряжения с розеткой, удерживайте кнопку питания в течение нескольких секунд, пока не начнет быстро мигать синий свет. \n\nВ журналах вы должны увидеть, что ваша розетка начала публиковаться в mqtt. \n\n\n## После сопряжения\n\nЕсли вы не хотите разрешить другим устройствам сопрягаться с вашим адаптером, теперь вы должны перейти в `data/configuration.yaml` и установить `permit_join: false`. Перезапустите сервис (используйте 'Ctrl+C' и \n\n```bash\ndocker-compose up     \n```\nеще раз, чтобы применить изменения).\n\n## Запуск\nПри первом запуске будет создан аккаунт для розетки. \n> Если у вас уже есть аккаунт, вы должны добавить его сид в файл `config.config.yaml` в разделе `device_seed`:\n>\n> ```\n> location: RUS\n> service_address: 4GdHeLbmio2noKCQM5mfxswXfPoW2PcbpYKKkM4NQiqSqJMd\n> twin_id: 5\n> sending_timeout: 3600\n> broker_address: \"172.17.0.1\"\n> broker_port: 1883\n> device_seed: <device_seed>\n>```\n\nПосле создания аккаунта вы увидите адрес в журналах (сид будет добавлен в `config/config.yaml`):\n```\nplug               | Generated account with address: 4GuP82BMAgrbtU8GhnKhgzP827sJEaBXeMX38pZZKPSpcWeT\n```\nВам нужно перевести некоторые токены на этот аккаунт для оплаты комиссии за транзакции, вы можете сделать это на [Robonomics Portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/accounts). \n\nСервис увидит, что у вас достаточно токенов, в журналах вы увидите:\n```\nplug               | Balance is OK\n```\nСервис увидит mqtt-сообщения от розетки и обеспечит безопасное использование электроэнергии. Каждый час (вы можете изменить таймаут в `config/config.yaml` в разделе `sending_timeout`, таймаут указывается в секундах) будет создан журнал данных со следующей информацией:\n```\n{'geo': 'RUS', 'power_usage': 1.021237391233444, 'timestamp': 1644494860.5860083}\n```\n","tools":[],"fileInfo":{"path":"ru/carbon-footprint-sensor.md","name":"carbon-footprint-sensor"}}},"context":{}}
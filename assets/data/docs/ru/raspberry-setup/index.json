{"hash":"768d5b0a88fcd5e975f1965942f57ea7f019a718","data":{"doc":{"id":"d90dbf60e8925f315885697caf5a90da","title":"Raspberry Setup","description":"","contributors":["LoSk-p","dergudzon","Leemo94"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Preinstalled image","anchor":"#preinstalled-image"},{"depth":3,"value":"Configuration RPi","anchor":"#configuration-rpi"},{"depth":2,"value":"Manually Installation","anchor":"#manually-installation"},{"depth":3,"value":"Home Assistant installation","anchor":"#home-assistant-installation"},{"depth":3,"value":"MQTT installation","anchor":"#mqtt-installation"},{"depth":3,"value":"IPFS installation","anchor":"#ipfs-installation"},{"depth":3,"value":"Systemd services","anchor":"#systemd-services"},{"depth":3,"value":"Add custom integration","anchor":"#add-custom-integration"}],"content":"\nFor all methods from [\"Overview\"](./home-assistant-begin.md), the first thing you need to do is set up a Raspberry Pi.\n\n## Preinstalled image\nThe easiest way is use our prepared image. You can download it [here.](https://disk.yandex.ru/d/R4vYp9Jhn2O25A) Then read \"Configuration RPi\" and install image.\n\n\n<robo-wiki-note type=\"note\">Password is \"ubuntu\".\nUser and password for mosquito broker is - user/pass\n</robo-wiki-note>\n\nIf you want to change MQTT user and password use next command:\n\n```shell\nsudo mosquitto_passwd -c /etc/mosquitto/passwd <username>\n```\n\n### Configuration RPi\nInstall [balena etcher](https://www.balena.io/etcher/) on your computer. Then, insert the SD card and run the Imager program. Select required image as the operating system and ensure to select your SD card from the storage dropdown, and then `flash` image.\n\n<robo-wiki-picture src=\"home-assistant/pi.jpg\" alt=\"RPI installer\" />\n\nOpen the SD card's storage from your computer and navigate inside the root folder of the card. The name of the folder should be something similar to `system-boot`.\n\nFind the file named `network-config` and open it in a text editor. Copy the below text and paste it into the file:\n\n```\nversion: 2\nethernets: \n  eth0:\n    dhcp4: true\n    optional: true\nwifis:\n  wlan0:\n    dhcp4: true\n    optional: true\n    access-points:\n      YOUR_WIFI_NAME:\n        password: \"YOUR_WIFI_PASSWORD\"\n```\n\n<robo-wiki-note type=\"warning\">Make sure that you input your actual Wi-Fi name and your Wi-Fi password.</robo-wiki-note>\n\nThen you need to save the file, and insert the SD card to the Raspberry Pi and turn it on. It must connect to your wi-fi network. \n\nNow you need to find its address. To find address you can use [Fing app](https://www.fing.com/products). \nAlso, you can find address nmap tool.\nFirst, install nmap. For ubuntu:\n\n```shell\nsudo apt-get install nmap\n```\n\nThen find your address in the local network with:\n\n```bash\nip a\n```\n\nIt must look like `192.168.xx.xx` or `172.xx.xx.xx`.\n\nThen scan the network with your address and zero in the end (also you can use `arp -a`):\n\n```bash \n$ sudo nmap -sP 192.168.xx.0/24\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:03:27 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:02:46:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-27UBLNO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B2:7D:9E:95:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n```\n\nIn this example we can see that the Raspberry Pi's address is `192.168.43.56`. Now you can connect to it over ssh:\n\n```bash\nssh ubuntu@192.168.43.56\n```\n\n## Manually Installation\nIf It's necessary, you can create PRi image manually. \nFor this you should choose **[64-bit Ubuntu Server 22.04 LTS](https://ubuntu.com/download/raspberry-pi/thank-you?version=22.04&architecture=server-arm64+raspi) or newer**  and then repeat **\" Configuration RPi\"**. The required image you can find in RPi imager program.\n\n### Home Assistant installation\nNow we need to install Home Assistant to the Raspberry Pi. Official website oh Home Assistant can be found [here](https://www.home-assistant.io/). \n\nWe will install `Home Assistant Core`. It's actual version is 2022.6.2  and instruction assumes that we already have installed Python 3.9 or newer.\n\nLet's start. The easiest way is use our bash script `installation.sh`  to update system and install all dependencies automatically.\nFor this download file from [here](https://github.com/LoSk-p/robonomics-hass-utils/tree/main/raspberry_pi) to your raspberry Pi. Then change user's rights to this file and start it:\n\n```shell\nchmod a+x instalation.sh\nbash instalation.sh\n```\n\nDuring installation process you could see next request:\n\n<robo-wiki-picture src=\"home-assistant/installation.jpg\" alt=\"RPI installer\" />\n\nJust choose **ok** and press **enter**.\n\n**Alternatively**, you can do all job manually. \n\nUpdate your system and install necessary packages:\n\n```bash\nsudo apt-get update\nsudo apt-get upgrade -y\nsudo apt-get install -y python3 python3-dev python3-venv python3-pip libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev\n```\n\nCreate user `homeassistant` and the directory for homeassistant core:\n\n```bash\nsudo useradd -rm homeassistant\nsudo mkdir /srv/homeassistant\nsudo chown homeassistant:homeassistant /srv/homeassistant\n```\n\nNext up is to create and change to a virtual environment for Home Assistant Core. This will be done as the homeassistant account.\n\n```bash\nsudo -u homeassistant -H -s\ncd /srv/homeassistant\npython3 -m venv .\nsource bin/activate\n```\n\n<robo-wiki-picture src=\"home-assistant/terminal1.jpg\" alt=\"terminal image\" />\n\n\nThen install required Python packages:\n\n```bash\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/python_scripts$ python3 -m pip install wheel\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/python_scripts$ pip3 install homeassistant==2022.6.2\n```\n\nStart Home Assistant Core for the first time. This will complete the installation for you, automatically creating the `.homeassistant `configuration directory in the `/home/homeassistant` directory, and installing any basic dependencies:\n\n```bash\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/python_scripts$ hass\n```\n\nYou can now reach your installation via the web interface on `http://%RASPBERRY_IP_ADDRESS%:8123`. \nIn this example: `http://192.168.43.56:8123`\n\n> You don't need to connect you raspberry to the screen, you can open Web UI from any computer connected to your local network\n\nCreate user and finish setup (first setup is described [here](https://www.home-assistant.io/getting-started/onboarding/) in more details), then stop Home Assistant with `Ctrl+C`.\n\n### MQTT installation\n\nAfter finishing with Home Assistant installation you have to install MQTT broker. Go back  under `ubuntu` login.\n\n```bash\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/python_scripts$ exit\n```\n\nThen install [Mosquitto Brocker](https://mosquitto.org/):\n\n```bash\nsudo apt update -y && sudo apt install mosquitto mosquitto-clients -y\n```\n\nConfigure username (you can use any username you want) and password (you will be asked to enter the password after the command):\n\n```bash\nsudo mosquitto_passwd -c /etc/mosquitto/passwd <username>\n```\n\n<robo-wiki-note type=\"note\">Default user and password is - user/pass.</robo-wiki-note>\n\nThen edit configuration file:\n\n```bash\nsudo nano /etc/mosquitto/mosquitto.conf\n```\n\nAdd the following at the end of the file:\n\n```\nlistener 1883\nallow_anonymous false\npassword_file /etc/mosquitto/passwd\n```\n\nThen restart the service:\n\n```bash\nsudo systemctl restart mosquitto\n```\n\nAnd check the Brocker status:\n\n```bash\nsystemctl status mosquitto\n```\n\n<robo-wiki-picture src=\"home-assistant/mosquitto.jpg\" alt=\"Broker status\" />\n\n### IPFS installation\nAlso, we need [IPFS](https://ipfs.io/) for working with robonomics. For today the latest release of IPFS is 0.12.2. You can use our script to download ipfs and create systemd service with it.\n\n```shell\ncd ~\nwget https://raw.githubusercontent.com/LoSk-p/robonomics_smart_home/main/install_ipfs.sh\nsudo chmod +x install_ipfs.sh\n./install_ipfs.sh\n```\n\n### Systemd services\n\nIf you don't want to start Home assistant manually everytime - let's create systemd service.\n\nCreate new service for home assistant start: \n\n```bash\nubuntu@ubuntu:~$ sudo nano /etc/systemd/system/home-assistant@homeassistant.service \n```\n\nPaste the following:\n\n```\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/home/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n\n[Install]\nWantedBy=multi-user.target\n```\n\nAfter that enable and start service:\n\n```bash\nsudo systemctl enable home-assistant@homeassistant.service\nsudo systemctl start home-assistant@homeassistant.service\n```\n\n### Add custom integration\n\nIntegration allow Home Assistant to record datalogs with encrypted data from Home Assistant and listen launch commands to control smart devices. Integration use IPFS to store data and send IPFS hash in datalog or launch.\n\nOn your raspberry pi with Home Assistant log in homeassistant user:\n```bash \nsudo -u homeassistant -H -s\n```\nSource virtual environment and install python packages:\n\n```bash\nsource /srv/homeassistant/bin/activate\npip install http3\npip install robonomics-interface~=1.0\n```\n\nThen go to `.homeassistant` directory:\n\n```bash\ncd /home/homeassistant/.homeassistant\n```\nCreate directory `custom_components` and clone there the repository with the integration:\n\n```bash\nmkdir custom_components\ncd custom_components\ngit clone https://github.com/LoSk-p/robonomics_smart_home.git\n```\n\nThat all. Now you can connect your devices:\n- [Connection with zigbee2MQTT](/docs/zigbee2-mqtt/)\n- [Setup SLS Gateway](/docs/sls-setup) and [connect it to Home Assistant](/docs/sls-gateway-connect)\n- [Connection through Xiaomi Gateway](/docs/xiaomi-gateway/)\n- [Connect Vacuum Cleaner](/docs/vacuum-connect/)","tools":[],"fileInfo":{"path":"ru/raspberry-setup.md","name":"raspberry-setup"}}},"context":{}}
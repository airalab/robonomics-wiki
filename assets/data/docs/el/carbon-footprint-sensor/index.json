{"hash":"d8d38e2102dee81cfad47d12e5958176ba3b55ca","data":{"doc":{"id":"5ede0f0ea493c864b0409679c50d1682","title":"Σύνδεση αισθητήρα","description":"","contributors":["LoSk-p","makyul"],"headings":[],"subtitles":[{"depth":2,"value":"Απαιτήσεις","anchor":"#απαιτήσεις"},{"depth":2,"value":"Στικ Zigbee","anchor":"#στικ-zigbee"},{"depth":2,"value":"Εγκατάσταση","anchor":"#εγκατάσταση"},{"depth":2,"value":"Διαμόρφωση","anchor":"#διαμόρφωση"},{"depth":2,"value":"Συνδέστε το Plug","anchor":"#συνδέστε-το-plug"},{"depth":2,"value":"Μετά τη σύζευξη","anchor":"#μετά-τη-σύζευξη"},{"depth":2,"value":"Εκτέλεση","anchor":"#εκτέλεση"}],"content":"\nΠαράδειγμα εργασίας βρίσκεται στο βίντεο:\n\nhttps://youtu.be/jsaFCVAx2sA\n\n## Απαιτήσεις\n\n* [Aqara Smart Plug](https://aqara.ru/product/aqara-smart-plug/?yclid=462434430312045270)\n* Raspberry Pi\n* Zigbee adapter [JetHome USB JetStick Z2](https://jhome.ru/catalog/parts/PCBA/293/) (ή ένα από [υποστηριζόμενο](https://www.zigbee2mqtt.io/στηνformation/supported_adapters.html))\n\nService is running on Raspberry Pi αντίστοιχα. Ωστόσο, αυτές οι διαδρομές μπορεί να διαφέρουν ανάλογα με την συγκεκριμένη εγκατάστασή σας. contact the smart plug via zigbee protocol.\n\n## Στικ Zigbee\n\nΕάν έχετε το JetHome USB JetStick Z2, ήδη διαθέτει τον απαραίτητο firmware, οπότε δεν χρειάζεται να τον αναβαθμίσετε. Αλλά εάν έχετε έναν άλλο προσαρμογέα, πρέπει πρώτα να τον αναβαθμίσετε με το λογισμικό zigbee2MQTT. Μπορείτε να βρείτε οδηγίες για τη συσκευή σας [εδώ](https://www.zigbee2mqtt.io/information/supported_adapters.html).\n\nΣυνδέστε τον προσαρμογέα και επαληθεύστε τη διεύθυνση του προσαρμογέα (μπορεί επίσης να είναι `/dev/ttyUSB1`):\n```bash\n$ ls -l /dev/ttyUSB0\ncrw-rw---- 1 root dialout 166, 0 May 16 19:15 /dev/ttyUSB0 \n```\n\nYou might need to get access to the USB port first. Add your user to `dialout` ομάδα (λειτουργεί για ubuntu, αλλά το όνομα της ομάδας μπορεί να είναι διαφορετικό σε άλλα λειτουργικά συστήματα).\n\nΓια το ubuntu:\n```bash\nsudo usermod -a -G dialout $USER\n```\nΓια το arch:\n```bash\nsudo usermod -a -G uucp $USER\n```\nΣτη συνέχεια, αποσυνδεθείτε και συνδεθείτε ξανά ή επανεκκινήστε τον υπολογιστή.\n\n## Εγκατάσταση\n\nΚλωνοποιήστε το αποθετήριο:\n\n```\ngit clone https://github.com/makyul/robonomics-carbon-footprint.git\ncd robonomics-carbon-footprint\n```\n\n## Διαμόρφωση\n\nΠηγαίνετε στο `data/configuration.yaml` και ορίστε `permit_join: true`:\n\n```\n# Home Assistant integration (MQTT discovery)\nhomeassistant: false\n\n# allow new devices to join\npermit_join: true\n\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://172.17.0.1'\n  # MQTT server authentication, uncomment if required:\n  # user: my_user\n  # password: my_password\n\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/ttyUSB0\n```\nΕπίσης, μπορεί ν θέλετε να συμπληρώσετε τα πεδία `server` και `port` με τις αντίστοιχες πληροφορίες. Στο `server` πεδίο χρησιμοποιήστε τη διεύθυνση IP της `docker0` γέφυρας για να εγκαθιδρύσετε τη σύνδεση: \n\n```bash\n$ ip a                                                 127\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\n...\n\n5: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:0d:ff:5f:a3 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:dff:feff:5fa3/64 scope link \n       valid_lft forever preferred_lft forever\n```\nΕδώ η διεύθυνσή σας είναι `172.17.0.1`.\n\nΣτη συνέχεια, δημιουργήστε το αρχείο config/config.yaml με τις παρακάτω πληροφορίες και ορίστε την τοποθεσία σας (μπορείτε να ανατρέξετε στο https://countrycode.org/ για το 3-γράμματο ISO-κωδικό):\n\n```\nlocation: RUS\nservice_address: 4GdHeLbmio2noKCQM5mfxswXfPoW2PcbpYKKkM4NQiqSqJMd\ntwin_id: 5\nsending_timeout: 3600\nbroker_address: \"172.17.0.1\"\nbroker_port: 1883\n```\n\n## Συνδέστε το Plug\n\nΠρώτη εκτέλεση:\n\n```\ndocker-compose up     \n```\n\nΓια να μεταβείτε στη λειτουργία σύζευξης στο βύσμα, πατήστε παρατεταμένα το κουμπί λειτουργίας για μερικά δευτερόλεπτα έως ότου το φως αρχίσει να αναβοσβήνει γρήγορα μπλε. \n\nΣτα αρχεία καταγραφής θα πρέπει να δείτε τώρα το βύσμα σας άρχισε να δημοσιεύεται στο mqtt.\n\n\n## Μετά τη σύζευξη\n\nΕάν δεν θέλετε να επιτρέψετε σε άλλες συσκευές να συζεύξουν με το ραβδί σας, τώρα πρέπει να πάτε στο `data/configuration.yaml` και να θέσει `permit_join: false`.Επανεκκινήστε την υπηρεσία (χρησιμοποιήστε «Ctrl+C» και\n\n```bash\ndocker-compose up     \n```\nξανά για να υποβάλετε τις αλλαγές).\n\n## Εκτέλεση\nΚατά την πρώτη εκκίνηση, θα δημιουργηθεί ο λογαριασμός για το plug. \n> Εάν έχετε ήδη λογαριασμό, θα πρέπει να προσθέσετε τον αρχικό του λογαριασμό `config.config.yaml` αρχείο στην ενότητα`device_seed`:\n>\n> ```\n> location: RUS\n> service_address: 4GdHeLbmio2noKCQM5mfxswXfPoW2PcbpYKKkM4NQiqSqJMd\n> twin_id: 5\n> sending_timeout: 3600\n> broker_address: \"172.17.0.1\"\n> broker_port: 1883\n> device_seed: <device_seed>\n>```\n\nΜετά τη δημιουργία του λογαριασμού, θα δείτε τη διεύθυνση στα logs (το seed θα προστεθεί στο `config/config.yaml`):\n```\nplug               | Generated account with address: 4GuP82BMAgrbtU8GhnKhgzP827sJEaBXeMX38pZZKPSpcWeT\n```\nΠρέπει να μεταφέρετε μερικ tokens σε αυτόν τον λογαριασμό για τα τέλη συναλλαγής, μπορείτε να το κάνετε στο [Robonomics Portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/accounts). \n\nΗ υπηρεσία θα δει ότι έχετε αρκετά tokens, στα logs θα δείτε:\n```\nplug               | Balance is OK\n```\nΗ υπηρεσία θα δει τα μηνύματα mqtt από το plug και θα διασφαλίσει την ασφαλή χρήση ισχύος. Κάθε ώρα (μπορείτε να αλλάξετε το χρονικό όριο στο `config/config.yaml` και `sending_timeout` ενότητα, το χρονικό όριο είναι σε δευτερόλεπτα) θα δημιουργηθεί ημερολόγιο δεδομένων με τις παρακάτω πληροφορίες:\n```\n{'geo': 'RUS', 'power_usage': 1.021237391233444, 'timestamp': 1644494860.5860083}\n```\n","tools":[],"fileInfo":{"path":"el/carbon-footprint-sensor.md","name":"carbon-footprint-sensor"}}},"context":{}}
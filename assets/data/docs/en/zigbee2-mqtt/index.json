{"hash":"55eef83a544e3a699bd011b09a0e933d25461dd7","data":{"doc":{"id":"0da2c759a752e7ca8e141dd5b2e57454","title":"Connect Sensors with Zigbee2MQTT","contributors":["LoSk-p","dergudzon","Leemo94"],"translated":true,"headings":[],"subtitles":[{"depth":2,"value":"Mosquitto MQTT broker","anchor":"#mosquitto-mqtt-broker"},{"depth":2,"value":"Zigbee2MQTT setup","anchor":"#zigbee2mqtt-setup"},{"depth":2,"value":"Pairing device","anchor":"#pairing-device"},{"depth":2,"value":"Home Assistant Setup","anchor":"#home-assistant-setup"}],"content":"\n## Mosquitto MQTT broker\n\nFor this method, you neet to install MQTT broker to the Raspberry Pi:\n\n```bash\nsudo apt update\nsudo apt install mosquitto mosquitto-clients\n```\nThe Mosquitto program will run automatically after installation.\n\n## Zigbee2MQTT setup\n\nIf you have the JetHome USB JetStick Z2 it will already have the necessary firmware so you don't need to flash it. However, if you have another adapter the first thing you need to flash it with zigbee2MQTT software. You can find instructions for your device [here](https://www.zigbee2mqtt.io/information/supported_adapters.html).\n\nThen we need to install the ziqbee2mqtt software on the  Raspberry PI. Connect the adapter and verify the adapter address (it also may be `/dev/ttyUSB1`):\n```bash\n$ ls -l /dev/ttyUSB0\ncrw-rw---- 1 root dialout 166, 0 May 16 19:15 /dev/ttyUSB0 \n```\nInstall zigbee2MQTT:\n```bash\n# Setup Node.js repository\nsudo curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\n\n# NOTE 1: If you see the message below please follow: https://gist.github.com/Koenkk/11fe6d4845f5275a2a8791d04ea223cb.\n# ## You appear to be running on ARMv6 hardware. Unfortunately this is not currently supported by the NodeSource Linux distributions. Please use the 'linux-armv6l' binary tarballs available directly from nodejs.org for Node.js 4 and later.\n# IMPORTANT: In this case instead of the apt-get install mentioned below; do: sudo apt-get install -y git make g++ gcc\n\n# NOTE 2: On x86, Node.js 10 may not work. It's recommended to install an unofficial Node.js 14 build which can be found here: https://unofficial-builds.nodejs.org/download/release/ (e.g. v14.16.0)\n\n# Install Node.js;\nsudo apt-get install -y nodejs git make g++ gcc\n\n# Verify that the correct nodejs and npm (automatically installed with nodejs)\n# version has been installed\nnode --version  # Should output v10.X, v12.X, v14.X or v15.X\nnpm --version  # Should output 6.X or 7.X\n\n# Clone Zigbee2MQTT repository\nsudo git clone https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\nsudo chown -R ubuntu:ubuntu /opt/zigbee2mqtt\n\n# Install dependencies (as user \"ubuntu\")\ncd /opt/zigbee2mqtt\nnpm ci\n```\nThen you need to configure it. Open configuration file:\n```bash\nnano /opt/zigbee2mqtt/data/configuration.yaml\n```\nAnd paste this:\n```\npermit_join: true\nmqtt:\n  # MQTT base topic for Zigbee2MQTT MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n```\nNow you can run zigbee2mqtt:\n```bash\ncd /opt/zigbee2mqtt\nnpm start\n```\n## Pairing device\n\nThen you need to pair your sensor. For that just long press the power button until it starts to blink (zigbee2MQTT must be launched). After sensor connects you will see the message like:\n```\nZigbee2MQTT:info  2019-11-09T12:19:56: Successfully interviewed '0x00158d0001dc126a', device has successfully been paired\n```\n> Remember this number `0x00158d0001dc126a` it will be the topic name for your sensor's data.\nThen open configuration file again and set `permit_join: false`.\n\nThen lets make a service. Create the file:\n```bash\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n```\nAdd the following to this file:\n```\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\n# Or use StandardOutput=null if you don't want Zigbee2MQTT messages filling syslog, for more options see systemd.exec(5)\nStandardError=inherit\nRestart=always\nUser=pi\n\n[Install]\nWantedBy=multi-user.target\n```\n\nVerify that the configuration works:\n\n```bash\nsudo systemctl start zigbee2mqtt\n```\n\n```bash\nsystemctl status zigbee2mqtt.service\n```\n\nOutput should look like:\n```\npi@raspberry:/opt/zigbee2mqtt $ systemctl status zigbee2mqtt.service\n● zigbee2mqtt.service - zigbee2mqtt\n   Loaded: loaded (/etc/systemd/system/zigbee2mqtt.service; disabled; vendor preset: enabled)\n   Active: active (running) since Thu 2018-06-07 20:27:22 BST; 3s ago\n Main PID: 665 (npm)\n   CGroup: /system.slice/zigbee2mqtt.service\n           ├─665 npm\n           ├─678 sh -c node index.js\n           └─679 node index.js\n\nJun 07 20:27:22 raspberry systemd[1]: Started zigbee2mqtt.\nJun 07 20:27:23 raspberry npm[665]: > zigbee2mqtt@1.6.0 start /opt/zigbee2mqtt\nJun 07 20:27:23 raspberry npm[665]: > node index.js\nJun 07 20:27:24 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Logging to directory: '/opt/zigbee2mqtt/data/log/2019-11-09.14-04-01'\nJun 07 20:27:25 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Starting Zigbee2MQTT version 1.6.0 (commit #720e393)\n```\n\nNow that everything works, we want systemctl to start Zigbee2MQTT automatically on boot, this can be done by executing:\n\n```bash\nsudo systemctl enable zigbee2mqtt.service\n```\n\n## Home Assistant Setup\n\nOpen Home Assistant configuration file:\n\n```bash\nnano ~/.homeassistant/configuration.yaml\n```\n\nAnd add the following to setup MQTT broker and sensor (replace `topic_name` with the topic name from previous step):\n\n```\n# MQTT broker setup\nmqtt:\n  broker: localhost\n  port: 1883\n\n# Sensor setup\nsensor:\n  - platform: mqtt\n    state_topic: \"zigbee2mqtt/<topic_name>\"\n    name: \"MQTT Climate Humidity\"\n    unit_of_measurement: '%'\n    value_template: \"{{ value_json.humidity }}\"\n  - platform: mqtt\n    state_topic: \"zigbee2mqtt/<topic_name>\"\n    name: \"MQTT Climate Temperature\"\n    unit_of_measurement: ''\n    value_template: \"{{ value_json.temperature }}\"\n  - platform: mqtt\n    state_topic: \"zigbee2mqtt/<topic_name>\"\n    name: \"MQTT Climate Pressure\"\n    unit_of_measurement: ''\n    value_template: \"{{ value_json.pressure }}\"\n  - platform: mqtt\n    state_topic: \"zigbee2mqtt/<topic_name>\"\n    name: \"MQTT Climate Battery\"\n    unit_of_measurement: ''\n    value_template: \"{{ value_json.battery }}\"\n  - platform: mqtt\n    state_topic: \"zigbee2mqtt/<topic_name>\"\n    name: \"MQTT Climate Link Quality\"\n    unit_of_measurement: ''\n    value_template: \"{{ value_json.linkquality }}\"\n  - platform: mqtt\n    state_topic: \"zigbee2mqtt/<topic_name>\"\n    name: \"MQTT Climate Voltage\"\n    unit_of_measurement: ''\n    value_template: \"{{ value_json.voltage }}\"\n\n# Trigger on receiving data\nautomation:\n  - alias: \"send_datalog_climate\"\n    trigger:\n      platform: mqtt\n      topic: \"zigbee2mqtt/0x00158d0006bcd022\"\n    action:\n      service: shell_command.send_datalog_climate\n\n# Shell command that will run on the trigger\nshell_command:\n  send_datalog_climate: 'python3 python_scripts/send_datalog.py temperature={{ states(\"sensor.mqtt_climate_temperature\")  }} humidity={{ states(\"sensor.mqtt_climate_humidity\") }} pressure={{ states(\"sensor.mqtt_pressure\") }} battery={{ states(\"sensor.mqtt_climate_battery\") }} linkquality={{ states(\"sensor.mqtt_climate_link_quality\") }} voltage={{ states(\"sensor.mqtt_climate_voltage\") }}'\n```\n\nThen start Home Assistant with new configuration:\n\n```bash\ncd /srv/homeassistant\nhass\n```\n\nTo see the sensor data in Home Assistant you need to add it. For that open the browser on your computer and go to:\n```\nhttp://<raspberry_address>:8123\n```\nPress on three dots on the right side and choose `Edit Dashboard`\n\n![edit_dashboard](../images/home-assistant/dashboard.png)\n\nThen press `Add Card`\n\n![card](../images/home-assistant/card.png)\n\nGo to `By Entity` and tick all sensors that you need\n\n![sensors](../images/home-assistant/sensors.png)\n\nPress continue and you will be able to see sensor data at the homepage (you may see `unknown` before sensor send new data)\n\nIn a similar way you can add card for Robonomics Service. With this you can start or stop the servise or send current measurements with `run action` button.\n\n![action](../images/home-assistant/datalog.png)\n\nYou homepage will look like this\n\n![home](../images/home-assistant/home.png)\n\nYou can see the data in [subscan](https://robonomics.subscan.io/), find your account and you will see datalog transactions. You can decrypt the data with script [decrypt.py](https://github.com/airalab/robonomics-smarthome/blob/main/python_scripts/decrypt.py), download it:\n\n```bash\ncd /srv/homeassistant/python_scripts\nwget https://raw.githubusercontent.com/airalab/robonomics-smarthome/main/python_scripts/decrypt.py\n```\nAnd run with the data from datalog:\n```bash\ncd /srv/homeassistant/\nsource bin/activate\npython3 python_scripts/decrypt.py <data>\n```"}},"context":{}}
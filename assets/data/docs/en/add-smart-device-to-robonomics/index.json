{"hash":"fd5d0a5f3aa1c3e6f4368684b3f72c24a1a4a9b2","data":{"doc":{"id":"170ca1f4621e9a6a853b0d85d2375601","title":"Add Robonomics Integration","description":"","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/add-smart-device-to-robonomics.0b85c65.f0332c44431982da4dc62143f31d0441.png","size":{"width":1920,"height":1080},"sizes":"(max-width: 1920px) 100vw, 1920px","srcset":["/assets/static/add-smart-device-to-robonomics.1b91758.f0332c44431982da4dc62143f31d0441.png 480w","/assets/static/add-smart-device-to-robonomics.3df3210.f0332c44431982da4dc62143f31d0441.png 1024w","/assets/static/add-smart-device-to-robonomics.0b85c65.f0332c44431982da4dc62143f31d0441.png 1920w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1920 1080' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-6700a9c05044ffc21f6c0bf9cf27b72d'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-6700a9c05044ffc21f6c0bf9cf27b72d)' width='1920' height='1080' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsSAAALEgHS3X78AAADTklEQVRo3u2Y20/TMRTH%2bRMMoj6oCKgIivGW%2bOT/4KMPxvhAogYNSJDLmAICAgIqCBFRJAQiEUXQBRSJyJ0haAyJxiiX4Bi4G%2b4OG%2by3r22zwYBtMThwapuc9NfTntP%2bPr/2154GbA6NAJWgkD0I3L4LYVFHYDAaQZMgCPBVstvt8McUsIm8OJXQfYdXAKBpQj6J4dExjMsm8PnLV8gm5Bgb/waFUoXhkVHIJ6cwpVBgxNFmXCaDZnp6wYbWa7U6v4UQsDF4N3v54ydOITjiAEL2HloCoPZxPS4mi3G/qganz5xHaXkF0rLzkJlXiNwbxbiSlYvUjGykpGehurYOt8vuoUHSjLOxCbiaW4D8WyXoezvIfNlsNv8DELQjHMGRBxF19Bi2hkchhMBwBaA3GPBdoWRfnH5NhVIJpUoNrU4H%2bdQUfmi1jnolVGoNqVPBaDRBo5mGmpXVMBiM/jsD2PonEALJTNiwbSfC9v%2bH/wAKYUtY5Ip/AB00FUFw5sKCzrUsOMTuRfx6BjjFHYB/PXEAHAAHwAFwABwAB%2bAZwK%2bKa/vlpz93ek%2b27myW2687ABbIOE99LsdjWrbZBEducyvzRJx2Tp3zmE2fF/XCEjtnP8vLvobhFYDgoSM6ALN5ZtWdrjbGWItZ4BUATUMfP6H4Tjn6%2bgdQWf0Qj%2bob0d3Xz0LiuqfP0N7Vg7sPqtA/%2bA5dvVK8bu9EZ08feqT9eNPZjaaWVjxplLBnKQmL338YYvZUJ3nRQnw0oqO7l9W1dXQR2168amtHZU0ta0PbUp/SgcH1nwE0NUiaEJsowiVxOslTEZeUilYyQBGJ/%2bkdANVfSEhGojgD8SmXkZlXgPRr19kdgigjGzdLyxATn8juBnIKi1j%2bvPklxJk5yC8qIf7EpD6J%2bTgZfY7dN0THxLE7BnrXkCBKY88VVTVsOfl6JnhfAmSqWiwWtgZp3E/19B7AarVibm4OJrOZxfo6vZ4sCTP0egOsRG%2bxWFk7mtN2dLkstpvBLPE5O2thfozE5/z8PPvC9GvTPmk/JpOJiJnZWEg7q3VuTaLKv24b9PWYfLYN/q44dwH7Ot8r/PEZ4Gnf5ydBDoAD4AA4AA6AA%2bAAOAAOgAPgADiANUw/AV%2bmjQfVJEQhAAAAAElFTkSuQmCC' /%3e%3c/svg%3e"},"contributors":["LoSk-p"],"translated":true,"headings":[],"subtitles":[{"depth":2,"value":"Add custom integration","anchor":"#add-custom-integration"},{"depth":2,"value":"Configure","anchor":"#configure"},{"depth":2,"value":"Use DApp","anchor":"#use-dapp"},{"depth":3,"value":"See data","anchor":"#see-data"},{"depth":3,"value":"Control device","anchor":"#control-device"}],"content":"\nIntegration allow Home Assistant to record datalogs with encrypted data from Home Assistant and listen launch commands to control smart devices. Integration use IPFS to store data and send IPFS hash in datalog or launch.\n\n## Add custom integration\n\nOn your raspberry pi with Home Assistant log in homeassistant user:\n```bash \nsudo -u homeassistant -H -s\n```\nAnd install python package:\n```bash\nsource /srv/homeassistant/bin/activate\npip install http3\n```\n\nThen go to `.homeassistant` directory:\n```bash\ncd /home/homeassistant/.homeassistant\n```\nCreate directory `custom_components` and clone there the repository with the integration:\n\n```bash\nmkdir custom_components\ncd custom_components\ngit clone https://github.com/LoSk-p/robonomics_smart_home.git\n```\n\nThen you need to install IPFS node to your raspberry. For that use `install_ipfs.sh` script:\n\n```bash\nsu ubuntu\ncd ~\nwget https://raw.githubusercontent.com/LoSk-p/robonomics_smart_home/main/install_ipfs.sh\nsudo chmod +x install_ipfs.sh\n./install_ipfs.sh\n```\n\n## Configure\n\nNow you can add integration to Home Assistant. First, restart it:\n\n```bash\nsystemctl restart home-assistant@homeassistant.service\n```\nThen in web interface go to `Settings/Device & Services` and press `Add Integration`. Find there `Robonomics`:\n\n![integration](/docs/images/home-assistant/add-integration.png)\n\nClick on it and fill the configuration. Here you need to add seed from `SUB_ADMIN` snd `SUB_OWNER` accounts and check the boxes if you created accounts with ED25519 type (it is better if you did that). Also you can set sending interval, by default it is 10 minutes.\n\nMoreover, you can add your Pinata credentials. It is not nessessary, if you will not do it, data will be pinned with your local node and Infura. If you add it, files also will be pinned in Pinata, it may help to faster access it.\n\n![configuration](/docs/images/home-assistant/configuration.png)\n\n## Use DApp\n\nNow you can use [Smarthome DApp](https://vol4tim.github.io/account-manager/#/) to control your home through the Robonomics. Both accounts `SUB_ADMIN` and `SUB_OWNER` must be added to the [Polcadot extention](https://polkadot.js.org/extension/).\n\nIn `Account` field choose your account with subscription. In the picture account `4FzqML6URZ5KWtk5MoQmrykkaRNvVuzYEGva77ytG1XA3Hus` is `SUB_ADMIN` (to read telemetry mark a ster on it):\n![dapp-start](/docs/images/home-assistant/dapp-start.png)\n\n### See data\n\nNow we can se the data from our home. Press on `SUB_ADMIN` account and you will see list of datalogs:\n\n![dapp-datalog](/docs/images/home-assistant/dapp-datalog.png)\n\nPress `read` on the last datalog and wait while IPFS file is reading. After that write your secret key or mnemonic seed from `SUB_ADMIN` account and press decrypt. You will see the data:\n\n![dapp-data](/docs/images/home-assistant/dapp-data.png)\n\n### Control device\n\nTo control devices go back to main page and press send button near `SUB_ADMIN` account. Here you can control any controllable device from Home Assistant. You need to know its entity id and and the service you want to call. Entity ids you can find in Home Assistant in `Settings/Devices & Services/Entities` and service `Developer Tool/Services`. The platform is the part of entity id before the dot. For example lets turn off shapes, it has entity id `light.shapes_9275`, so the platform is `light` and we can use service `turn_off`.\n\n![dapp-command](/docs/images/home-assistant/dapp-command.png)\n\nYou can send encrypted command or not encrypted. To send encryptrd command just tick `crypto` before send message and write you secret key from sending account."}},"context":{}}
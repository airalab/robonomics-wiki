{"hash":"5bcc4987f3c59e9e9a916e56ef676cdfe622b6ea","data":{"doc":{"id":"f0098e2309306f502abdd4b0ac8f4478","title":"Развертывание \"Feecc Рабочее Место Инженера\" (РМИ или Workbench)","description":"","contributors":["timofeev41"],"headings":[],"subtitles":[{"depth":2,"value":"Общая информация:","anchor":"#общая-информация"},{"depth":2,"value":"Запуск HID Daemon","anchor":"#запуск-hid-daemon"},{"depth":2,"value":"Запуск Workbench Daemon","anchor":"#запуск-workbench-daemon"},{"depth":2,"value":"Запуск IPFS Gateway","anchor":"#запуск-ipfs-gateway"},{"depth":2,"value":"Запуск Print server","anchor":"#запуск-print-server"},{"depth":2,"value":"Запуск Cameraman","anchor":"#запуск-cameraman"},{"depth":2,"value":"Запуск фронтенда","anchor":"#запуск-фронтенда"}],"content":"\n## Общая информация:\n\nРабота системы \"Feecc Рабочее Место Инженера\" (далее Feecc РМИ) зависит от работы сервисов feecc-workbench-frontend (\nФронтенд), feecc-workbench-daemon (Daemon), feecc-ipfs-gateway (IPFS Gateway), feecc-print-server (Print Server),\nfeecc-cameraman (Cameraman), feecc-hid-reader-daemon (HID Daemon).\n\nЧтобы узнать больше о сервисах, обратитесь в раздел [Обзор архитектуры](/docs/feecc-system-architecture).\n\n## Запуск HID Daemon\n\n> Инструкция может устареть, обратитесь к инструкции\n> в [репозитории](https://github.com/Multi-Agent-io/feecc-hid-reader-daemon#readme)\n\n1. Склонируйте репозиторий\n\n   `git clone https://github.com/Multi-Agent-io/feecc-hid-reader-daemon`\n\n2. Обновите систему и установите необходимые пакеты:\n\n   Для Debian-based систем:\n\n    ```bash\n    sudo apt update -y\n    sudo apt upgrade -y\n    sudo apt dist-upgrade -y\n    sudo apt autoremove -y\n    sudo apt install -y htop python3 python3-dev python3-pip gcc\n    ```\n\n3. Запустите Daemon\n\n    ```bash\n    sudo mv EventToInternet /etc/systemd/system/\n    sudo chown -R root:root /etc/systemd/system/EventToInternet\n    cd /etc/systemd/system/EventToInternet\n    ```\n\n4. Установите пакеты (обязательно с `sudo`)\n\n    ```bash\n    sudo python3 -m pip install -r requirements.txt\n    sudo bash install.sh\n    ```\n\n* Для удаления:\n\n    ```bash\n    sudo bash /etc/systemd/system/EventToInternet/uninstall.sh\n    sudo rm -rf /etc/systemd/system/EventToInternet*\n    ```\n\n## Запуск Workbench Daemon\n\n> Инструкция может устареть, обратитесь к инструкции\n> в [репозитории](https://github.com/Multi-Agent-io/feecc-workbench-daemon#readme)\n\n1. Склонируйте репозиторий\n\n   `git clone https://github.com/Multi-Agent-io/feecc-workbench-daemon && cd feecc-workbench-daemon`\n\n2. Проведите конфигурацию, открыв docker-compose.yml любым текстовым редактором\n\n   Измените переменные окружения. Значения каждого параметра:\n\n    ```\n    \n    MONGODB_URI (Required): MongoDB connection URI\n    ROBONOMICS_ENABLE_DATALOG (Optional): enable datalog posting or not (bool)\n    ROBONOMICS_ACCOUNT_SEED (Optional): Your Robonomics network account seed phrase\n    ROBONOMICS_SUBSTRATE_NODE_URL (Optional): Robonomics network node URI\n    YOURLS_SERVER (Required): Your Your Yourls server URL\n    YOURLS_USERNAME (Required): Yourls server username\n    YOURLS_PASSWORD (Required): Yourls server password\n    IPFS_GATEWAY_ENABLE (Optional): Whether to enable IPFS posting or not\n    IPFS_GATEWAY_IPFS_SERVER_URI (Optional): Your IPFS gateway deployment URI\n    PRINTER_ENABLE (Optional): Whether to enable printing or not\n    PRINTER_PRINT_SERVER_URI (Optional): Your Print-server deployment URI\n    PRINTER_SKIP_ACK (Optional): Whether to wait for the task acknowledgement (slow) or not\n    PRINTER_PRINT_BARCODE (Optional): Whether to print barcodes or not\n    PRINTER_PRINT_QR (Optional): Whether to print QR codes or not\n    PRINTER_PRINT_QR_ONLY_FOR_COMPOSITE (Optional): Whether to enable QR code printing for non-composite units or note or not\n    PRINTER_QR_ADD_LOGOS (Optional): Whether to add logos to the QR code or not\n    PRINTER_PRINT_SECURITY_TAG (Optional): Whether to enable printing security tags or not\n    PRINTER_SECURITY_TAG_ADD_TIMESTAMP (Optional): Whether to enable timestamps on security tags or not\n    CAMERA_ENABLE (Optional): Whether to enable Cameraman or not\n    CAMERA_CAMERAMAN_URI (Optional): Your Cameraman deployment URI\n    CAMERA_CAMERA_NO (Optional): Camera number\n    WORKBENCH_NUMBER (Required): Workbench number\n    HID_DEVICES_RFID_READER (Optional): RFID reader device name\n    HID_DEVICES_BARCODE_READER (Optional): Barcode reader device name\n    LOG_ECS_ENABLE (Optional): Emit file logs in the ECS format (defaults to \"disabled\")\n    ```\n\n3. Запустите Workbench daemon:\n\n   `sudo docker-compose up -d --build`\n\n4. Проверьте работоспособность:\n\n   Перейдите на `127.0.0.1:5000/docs` и убедитесь, что Swagger отдает данные о REST API\n\n## Запуск IPFS Gateway\n\n1. Склонируйте репозитории\n\n   `git clone https://github.com/Multi-Agent-io/feecc-ipfs-gateway.git`\n\n2. Измените параметры\n\n    ```bash\n    cd feecc-ipfs-gateway\n    vim docker-compose.yml\n    ```\n\n   Значение параметров:\n\n    ```\n      MONGODB_URI: ''  # Your MongoDB connection URI ending with /db-name\n      PRODUCTION_ENVIRONMENT: no  # Leave \"no\" if you want testing credentials to work\n      LOCAL_IPFS_ENABLED: yes  # Whether to enable local IPFS node publishing or not.\n      PINATA_ENABLED: yes  # Whether to upload files to Pinata.cloud or not\n      PINATA_API: ''  # Pinata.cloud credentials. Leave empty if you don't need it\n      PINATA_SECRET_API: ''  # Pinata.cloud credentials. Leave empty if you don't need it\n      ROBONOMICS_ENABLE_DATALOG: no  # Whether to post CIDs to Robonomics network datalog or not\n      ROBONOMICS_ACCOUNT_SEED: ''  # Robonomics network account seed\n      ROBONOMICS_SUBSTRATE_NODE_URL: ''  # Robonomics node URL in case you want to use non-default node\n      PY_IPFS_HTTP_CLIENT_DEFAULT_ADDR: '/dns/ipfsnode/tcp/5001/http'  # Node address, don't change\n      AUTH_MODE: \"workbench\" # Auth mode. Available options are \"analytics\", \"workbench\" and \"noauth\"\n    ```\n\n3. Запустите контейнер\n\n   `sudo docker-compose up --build`\n\n4. Проверьте работоспособность\n\n   Проверьте развертывание, перейдя по адресу http://127.0.0.1:8082/docs в браузере. Вы должны увидеть страницу\n   SwaggerUI.\n\n## Запуск Print server\n\n1. Склонируйте репозиторий\n\n   `git clone https://github.com/Multi-Agent-io/feecc-print-server.git`\n\n2. Измените параметры\n\n    ```bash\n    cd feecc-print-server\n    vim docker-compose.yml\n    ```\n\n   Значения параметров:\n\n    ```\n    MONGODB_URI - Your MongoDB connection URI ending with /db-name\n    PRODUCTION_ENVIRONMENT - Leave null if you want testing credentials to work, otherwise set it to true\n    PAPER_WIDTH - Paper width in mm\n    PRINTER_MODEL - Label printer model name\n    RED - Whether the black and red paper is loaded or not (boolean, null for false)\n    ```\n\n3. Запустите контейнер\n\n   `sudo docker-compose up --build`\n\n4. Проверьте работоспособность\n\n   Проверьте развертывание, перейдя по адресу http://127.0.0.1:8083/docs в браузере. Вы должны увидеть страницу\n   SwaggerUI.\n\n## Запуск Cameraman\n\n1. Склонируйте репозитории\n\n   `git clone https://github.com/Multi-Agent-io/feecc-cameraman.git`\n\n2. Измените параметры\n\n    ```bash\n    cd feecc-cameraman\n    vim docker-compose.yml\n    ```\n\n   Значение параметров:\n\n    ```\n    MONGODB_URI - Your MongoDB connection URI ending with /db-name\n    PRODUCTION_ENVIRONMENT - Leave null if you want testing credentials to work, otherwise set it to true\n    FFMPEG_COMMAND - ffmpeg command used for capturing the video stream\n    CAMERAS_CONFIG - A JSON-like string for camera configuration. This string represents a JSON list of strings, each one describing an RTSP stream (\"-\" separated stream number and RTSP stream URI). Example: '[\"1-rtsp://login:password@192.168.88.239:554/Streaming/Channels/101\"]'\n    ```\n\n3. Запустите контейнер\n\n   `sudo docker-compose up --build`\n\n4. Проверьте работоспособность\n\n   Проверьте развертывание, перейдя по адресу http://127.0.0.1:8081/docs в браузере. Вы должны увидеть страницу\n   SwaggerUI.\n\n## Запуск фронтенда\n\n1. Склонируйте репозитории\n\n   `git clone https://github.com/Multi-Agent-io/feecc-workbench-frontend.git`\n\n2. Измените параметры\n\n   `vim configs/config.json`\n\n   Значение параметров:\n\n    ```json\n    { \n       \"socket\": адрес Workbench Daemon,\n       \"interface_language\": Язык интерфейса (\"ru\"/\"en\"),\n       \"dev_show_reducers\": Режим разработчика,\n       \"pulling_period\": Периодичность получения обновлений с бекенда в мс,\n       \"use_devtools\": использование devtools,\n       \"show_test_schemas\": показывать ли тестовые схемы\n    }\n    ```\n\n3. Запустите контейнер\n\n   `docker-compose up --build -d`\n\n4. Проверьте работоспособность\n\n   Откройте в браузере страницу `localhost:3000`. Должна открыться страница авторизации.","tools":["Feecc Workbench frontend https://github.com/Multi-Agent-io/feecc-workbench-frontend","Feecc Workbench daemon https://github.com/Multi-Agent-io/feecc-workbench-daemon","Feecc IPFS gateway https://github.com/Multi-Agent-io/feecc-ipfs-gateway","Feecc Print server https://github.com/Multi-Agent-io/feecc-print-server","Feecc Cameraman https://github.com/Multi-Agent-io/feecc-cameraman","Feecc HID reader daemon https://github.com/Multi-Agent-io/feecc-hid-reader-daemon"],"fileInfo":{"path":"feecc-system-deploy-feecc-wb.md","name":"feecc-system-deploy-feecc-wb"}}},"context":{}}
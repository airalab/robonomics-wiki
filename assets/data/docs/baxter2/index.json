{"hash":"17a604e45f7e10d1f6dfb26852a2a05067b6e681","data":{"doc":{"id":"f3ff722aa644b66885baa5dcc794bdbe","title":"Say \"Hello Baxter!\" with robonomics","description":"","contributors":["nakata5321"],"headings":[],"subtitles":[{"depth":2,"value":"Requirements:","anchor":"#requirements"},{"depth":2,"value":"0. install CV Bridge extension for python3","anchor":"#0-install-cv-bridge-extension-for-python3"},{"depth":2,"value":"1. Download simulation and controller packages","anchor":"#1-download-simulation-and-controller-packages"},{"depth":2,"value":"2. Start simulation","anchor":"#2-start-simulation"},{"depth":3,"value":"Let's start our simulation:","anchor":"#lets-start-our-simulation"},{"depth":2,"value":"3.Manage accounts in DAPP","anchor":"#3manage-accounts-in-dapp"},{"depth":2,"value":"4.Start simulation","anchor":"#4start-simulation"},{"depth":4,"value":"gateway.ipfs.io/ipfs/","anchor":"#gatewayipfsioipfs-put-your-hash-here"}],"content":"Example of how it works:\n\nhttps://youtu.be/2Dvuv0ZE2Bw\n\n\n## Requirements:\n\n - ROS Melodic + Gazebo (installation manual [here][db2])  \n - extra packages:\n```sh\nsudo apt-get install ros-melodic-qt-build ros-melodic-driver-common ros-melodic-gazebo-ros-control ros-melodic-gazebo-ros-pkgs ros-melodic-ros-control ros-melodic-control-toolbox ros-melodic-realtime-tools ros-melodic-ros-controllers ros-melodic-xacro python-wstool ros-melodic-tf-conversions ros-melodic-kdl-parser python-wstool python-catkin-tools qt4-default\n```\n- IPFS up to 0.6.0 (download from [here][db3] and install)\n- python packages:\n```sh\nsudo apt-get -y install python3-pip\npip3 install --upgrade pip\n```\n - Robonomics node (binary file) (download latest [release][db4] here)\n - Create __Baxter__ and __Employer__ accounts  on **Robonomics Portal**  \n (you can find tutorial [\"Create an Account on Robonomics Portal\"][db8] here).\n - IPFS browser extension (not necessary)\n\n## 0. install CV Bridge extension for python3\n\n - Create catkin workspace\n```shell\nmkdir -p catkin_workspace/src\ncd catkin_workspace\ncatkin init\n```\n\n - Instruct catkin to set cmake variables. Use your current version of `python`. For me, it is `python3.6`:\n```sh\ncatkin config -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.6m.so\ncatkin config --install\n```\n\n - Clone cv_bridge src:\n```shell\ngit clone https://github.com/ros-perception/vision_opencv.git src/vision_opencv\n```\n\n - Find version of cv_bridge in your repository:\n```shell\napt-cache show ros-melodic-cv-bridge | grep Version\n    Version: 1.12.8-0xenial-20180416-143935-0800\n```\n\n - Checkout right version in git repo. In our case it is 1.12.8:\n```shell\ncd src/vision_opencv/\ngit checkout 1.12.8\ncd ../../\n```\n\n - Build:\n```shell\ncatkin build cv_bridge\n```\n\n - Extend environment with new package:\n\n```shell\nsource install/setup.bash --extend\n``` \n - Test:\n```shell\n$ python3\nPython 3.6.9 (default, Jan 26 2021, 15:33:00) \n[GCC 8.4.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from cv_bridge.boost.cv_bridge_boost import getCvType\n>>>\n```\n\n## 1. Download simulation and controller packages\nWe will need to create 2 workspaces - one for main Baxter's packages and other for main control programme.\nFirst workspace. It's main control programme. It will run under python3.\n\n```sh\ncd ~\nmkdir -p robonomics_ws/src\ncd robonomics_ws/src/\ngit clone https://github.com/nakata5321/Baxter_simulation_controller.git\ncd Baxter_simulation_controller\npip3 install -r requirements.txt\n```\nSecond workspace. There will be all Baxter's packages. Simulation is very old, so it could run only under python2.\n```shell\ncd ~\nmkdir -p robot_ws/src\ncd robot_ws/src/\nwstool init .\nwstool merge https://raw.githubusercontent.com/RethinkRobotics/baxter_simulator/master/baxter_simulator.rosinstall\nwstool update\n```\nThese packages were created for ROS indigo. We have to change some files to run them on ROS melodic.\nWe will use **patch** files.\n```sh\npatch ./baxter_simulator/baxter_sim_io/include/baxter_sim_io/qnode.hpp ~/robonomics_ws/src/Baxter_simulation_controller/patch/qnode_patch\npatch ./baxter_simulator/baxter_sim_kinematics/src/arm_kinematics.cpp ~/robonomics_ws/src/Baxter_simulation_controller/patch/arm_patch\npatch ./baxter_interface/src/baxter_interface/robot_enable.py ~/robonomics_ws/src/Baxter_simulation_controller/patch/interface_patch\n```\nAnd let's build  all our packages:  \nFirst build Baxter's packages\n```sh\ncd ../\ncatkin build\n```\nThen return to first workspace and build it too:\n```sh\ncd ~/Baxter_simulation_controller/\ncatkin build -DPYTHON_EXECUTABLE=/usr/bin/python3\n```\nDon't forget to add source command:\n\n```sh\necho \"source /home/$USER/robot_ws/devel/setup.bash\" >> ~/.bashrc\necho \"source /home/$USER/robonomics_ws/devel/setup.bash\" >> ~/.bashrc\nsource ~/.bashrc\n```  \n\n\n## 2. Start simulation\n### Let's start our simulation:\nAt first go to `robot_ws` and copy and edit baxter.sh\n```sh\ncd ~/robot_ws/\ncp src/baxter/baxter.sh .\n```\nFind your local ip address with command:\n```\nip a\n```\n![ip_a][im14]\n\nEdit the following values in `baxter.sh` :\n```\nnano baxter.sh\n```\n\n- your_ip - put your local ip address. See `ip a`\n- ros_version - for example \"melodic\"\n\n![baxtersh][im15]\n\nRun the baxter shell script with sim specified:\n```sh\n./baxter.sh sim\nroslaunch baxter_gazebo baxter_world.launch\n```\nYou can put some models in front of our baxter. It will be more interesting.\n![baxter][im2]\n\n## 3.Manage accounts in DAPP\n\nSince we are testing, let us create a local robonomics network with robonomics binary file. Go to folder with robonomics file and run:\n```sh\n./robonomics --dev --tmp\n```\n![robonomics][im3]\n\nGo to [Robonomics Parachain portal][db5] and switch to local node\n![local node][im4]\n\nGo to Accounts and create __Baxter__ and __Employer__ accounts.\n\nYou can find The manual \"Create an Account on Robonomics Portal\" [here][db8]\n\n__Important!__ Copy each account's **Mnemonic** and **address** (to copy address click on account's icon). **Mnemonic** is the private key for account.\n\nTransfer some money (units) to these accounts:\n\n![create account][im5]\n![create account2][im16]\n![accounts][im6]\n\nAdd Baxter's **Mnemonic** and **address** to `config.yaml` in `robonomics_ws/src/Baxter_simulation_controller/config/`\n\n## 4.Start simulation\n\nIn new window run:\n```sh\nifps init #you only need to do this once\nipfs daemon\n```\nOpen separate terminal and start *controller package*:\n```sh\nrosrun robot_controller robot_control.py\n```\n![waiting][im7]\n\nNow you can send a transaction triggering the Baxter to start moving and collecting data. To do so, you can use the same portal [Robonomics Parachain portal][db5]. Go to **Developer->Extrinsics** and select Baxter's employer account, `launch` extrinsic, Baxter's account as a target account and `yes` as a parameter. Submit the extrinsic.\n\n\n![rob_message][im8]\n\nThe robot should start moving. It won't accept commands from other accounts neither commands with `no` parameter.\nYou should see the following:\n\n![working][im9]\n\nWhen the work is over go to the Robonomics Portal to `Developer > Chain state`. Choose *datalog.datalogItem(AccountId,u64)* in **state query**.If you want to show all datalog's, then turn off `include option` add view Baxter's datalog message using \"+\" button.\n\n![datalog][im10]\n\nNow the IPFS hash of the telemetry and photos is saved in the blockchain. To see the data simply copy the hash and insert it in the search bar with URL:  \n#### gateway.ipfs.io/ipfs/< put your hash here>\n\n\n\nThat's all!\n\n![result1][im12]\n![result2][im13]\n\n\n[db2]: <http://wiki.ros.org/melodic/Installation>\n[db3]: <https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-386.tar.gz>\n[db4]: <https://github.com/airalab/robonomics/releases>\n[im1]: <./images/baxter_demo/empty_world.jpg>\n[im2]: <./images/baxter_demo/baxter_simulation.jpg>\n[im3]: <./images/baxter_demo/robonomics.jpg>\n[db5]: <https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/>\n[im4]: <./images/baxter_demo/local_node.jpg>\n[im5]: <./images/baxter_demo/create_account.jpg>\n[im6]: <./images/baxter_demo/accounts.jpg>\n[im7]: <./images/baxter_demo/waiting.jpg>\n\n[im8]: <./images/baxter_demo/rob_message.jpg>\n[im9]: <./images/baxter_demo/working.jpg>\n[im10]: <./images/baxter_demo/datalog.jpg>\n[im11]: <./images/baxter_demo/ipfs.jpg>\n[im12]: <./images/baxter_demo/result1.jpg>\n[im13]: <./images/baxter_demo/result2.jpg>\n[im14]: <./images/baxter_demo/ip_a.png>\n[im15]: <./images/baxter_demo/baxter_sh.jpg>\n[im16]: <./images/baxter_demo/create_account2.jpg>\n[db8]: <https://wiki.robonomics.network/docs/create-account-in-dapp/>","tools":[],"fileInfo":{"path":"baxter2.md","name":"baxter2"}}},"context":{}}
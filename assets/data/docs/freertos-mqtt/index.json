{"hash":"fd9d1b8c729ba0257e0bd85c0b366be1ec729693","data":{"doc":{"id":"c269f813cf2d134fcc3ab427be966032","title":"Connect an Amazon FreeRTOS Device to Robonomics by MQTT","description":"","contributors":["khssnv"],"headings":[],"subtitles":[{"depth":2,"value":"Hardware setup","anchor":"#hardware-setup"},{"depth":2,"value":"Data Flow","anchor":"#data-flow"},{"depth":2,"value":"Firmware","anchor":"#firmware"},{"depth":3,"value":"Wi-Fi Configuration","anchor":"#wi-fi-configuration"},{"depth":3,"value":"MQTT Endpoint Configuration","anchor":"#mqtt-endpoint-configuration"},{"depth":2,"value":"From MQTT to Robonomics","anchor":"#from-mqtt-to-robonomics"},{"depth":2,"value":"Original Resources Used","anchor":"#original-resources-used"}],"content":"\nHere's the demonstration of how a microcontroller running [Amazon Web Services FreeRTOS](https://aws.amazon.com/freertos/) may be connected to Robonomics Network via MQTT. Please check [this repository](http://github.com/khssnv/freertos_mqtt_robonomics_example) for the project source code.\n\nWe use [ESP32 DevKitC](https://devices.amazonaws.com/detail/a3G0L00000AANtjUAH/ESP32-WROOM-32-DevKitC/) with FreeRTOS distribution and MQTT implementation provided by [Espressif IoT Development Framework](https://github.com/espressif/esp-idf) while Espressif is a vendor of the microcontroller used.\n\nAlso there is a [PMS-3003](http://www.plantower.com/en/content/?107.html) sensor for demonstration purposes. Sensor measures presence of particulated matter in the air and one may use it to estimate air quality.\n\nAir quality is not a topic of the article, you may find more about it at WHO's website: [Ambient (outdoor) air pollution](https://www.who.int/news-room/fact-sheets/detail/ambient-(outdoor)-air-quality-and-health). A goal of the system is to publish sensor measurements to Airalab's Robonomics network.\n\n## Hardware setup\n\nWe connect PMS3003 TXD PIN5 to ESP32 DevKitC IO17 to transfer measurements by UART.\nAlso both devices require power and common ground.\n\n![Wiring Diagram](./images/freertos-mqtt/wiring.png)\n\n## Data Flow\n\nIn order to deliver sensor measurements to Robonomics network, on a firmware level our goal is to get data from a sensor by embedded communication protocol it supports (UART in our case) and pass it to AIRA instance by MQTT / TCP.\n\n![Sending](./images/freertos-mqtt/send.svg)\n\nIn our example we use AIRA cloud deployment available by public IP address and domain name assigned.\nOn AIRA instance we setup `mosquitto` MQTT broker and subscribe to `/freertos_mqtt_robonomics_example/98:F4:AB:72:23:C4` topic to get messages from MQTT.\n\nThen we pass messages to `robonomics io` writer by pipe.\n\n![Receiving](./images/freertos-mqtt/recv.svg)\n\nNow data available in Robonomics Network and we can be read it with `robonomics io` again.\n\n## Firmware\n\nWe use [ESP-MQTT sample application with TCP transport](https://github.com/espressif/esp-idf/tree/master/examples/protocols/mqtt/tcp) as a basis.\n\nWe only modify `main/app_main.c` for UART connection to the sensor, SNTP time synchronization and periodic MQTT publisher routine.\n\nIf you are trying to repeat the project, and it's your first ESP IDF based project, at first please follow [Espressif's ESP-IDF Programming guide](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/index.html#installation-step-by-step) introduction in order to familiarize with firmware operations like configuration, build and upload with `idf.py` tool.\n\n### Wi-Fi Configuration\n\nIn order to communicate with AIRA instance deployed in cloud, our microcontroller requires Internet connection.\nWe use ESP32's Wi-Fi for it.\nEspressif provides utilities to configure on-board Wi-Fi.\nIn our example we use development environment with Ubuntu 20.04 GNU/Linux.\nTo configure Wi-Fi we go to project folder and run SDK configuration tool.\n\n```console\ncd freertos_mqtt_robonomics_example/firmware\nidf.py menuconfig\n```\n\nThen we set Wi-Fi access point SSID and password in `Example Connection Configuration` section.\n\n![Menuconfig Wi-Fi](./images/freertos-mqtt/menuconfig-wi-fi.png)\n\n### MQTT Endpoint Configuration\n\nThere are two things to configure for MQTT.\nThe first is a MQTT broker address.\nIt is configurable with SDK configuration tool.\n\n```console\ncd freertos_mqtt_robonomics_example/firmware\nidf.py menuconfig\n```\n\nSet `Broker URL` in `Example Configuration` section.\n\n![Menuconfig MQTT](./images/freertos-mqtt/menuconfig-mqtt.png)\n\nThe second thing is a MQTT topic.\nWe set it in the firmware with the project name prefix followed with our ESP32 MAC address.\nIt gives us `/freertos_mqtt_robonomics_example/98:F4:AB:72:23:C4` for our particular microchip.\n\n## From MQTT to Robonomics\n\nAt first let's check we receive data by MQTT.\nWe can subscribe to our Mosquitto MQTT broker topic device publish to.\n\n```console\n$ nix-shell -p mosquitto --run \"mosquitto_sub -h localhost -t '/freertos_mqtt_robonomics_example/98:F4:AB:72:23:C4'\"\nts=1615651809, PM1=2, PM2.5=6, PM10=3\n```\n\nHere we bring `mosquitto` package into our environment to use `mosquitto_sub` utility.\nThen we subscribe to the topic set in the firmware.\nWe got our measurements that means AIRA receives data by MQTT correctly.\nNow let's pipe these messages to Robonomics Network.\n\n```console\nnix-shell -p mosquitto --run \"mosquitto_sub -h localhost -t '/freertos_mqtt_robonomics_example/98:F4:AB:72:23:C4'\" | robonomics io write pubsub --bootnodes=/ip4/127.0.0.1/tcp/34333 /freertos_mqtt_robonomics_example\n```\n\nHere we use `robonomics` utility to publish messages in pubsub channel `/freertos_mqtt_robonomics_example`.\nWe specify `bootnodes` to ensure at least one connection established.\n\nNow we are read these messages from the same pubsub channel.\n\n```console\n$ robonomics io read pubsub --listen /ip4/127.0.0.1/tcp/34333 /freertos_mqtt_robonomics_example\n2021-03-27 15:15:51  Generated random peer id: 12D3KooWB2nym5E6c3aPpnPKK5wB9Z6n9eZzcXSpyUBozxhi6dam\n2021-03-27 15:15:51  Subscribed to topic: _robonomics_pubsub_peer_discovery\n2021-03-27 15:15:51  Subscribed to topic: /freertos_mqtt_robonomics_example\n2021-03-27 15:15:56  New peer connected: PeerId(\"12D3KooWRPLCioD2b9XLZTZJQELSAuQAyTrHUKzRktrQHtTSs6kS\")\n2021-03-27 15:15:56  GRAFT: Mesh link added for peer: PeerId(\"12D3KooWRPLCioD2b9XLZTZJQELSAuQAyTrHUKzRktrQHtTSs6kS\") in topic: TopicHash { hash: \"_robonomics_pubsub_peer_discovery\" }\nts=1616843855, PM1=3, PM2.5=4, PM10=3\n```\n\n## Original Resources Used\n\n* ESP32 DevKitC pinout from GoJimmy's blog https://gojimmypi.blogspot.com/2017/03/jtag-debugging-for-esp32.html\n* PSM3003 data structure and decoder from OpenAirProject https://github.com/openairproject/sensor-esp32\n\n**Thank you all!**\n","tools":[],"fileInfo":{"path":"freertos-mqtt.md","name":"freertos-mqtt"}}},"context":{}}
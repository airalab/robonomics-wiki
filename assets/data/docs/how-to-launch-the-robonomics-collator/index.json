{"hash":"ee90f103d871b6b46b4f8a8c6788f7b5bbe9d893","data":{"doc":{"id":"716e3992e88ea98e13db8c7022696a41","title":"How to launch the Robonomics collator","description":"","contributors":["dergudzon","Leemo94"],"headings":[],"subtitles":[{"depth":2,"value":"What is a collator","anchor":"#what-is-a-collator"},{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Important information","anchor":"#important-information"},{"depth":2,"value":"Easily launch a Robonomics collator","anchor":"#easily-launch-a-robonomics-collator"},{"depth":2,"value":"Launch the Robonomics collator as a service","anchor":"#launch-the-robonomics-collator-as-a-service"},{"depth":2,"value":"Speeding up the sync process using a Kusama snapshot","anchor":"#speeding-up-the-sync-process-using-a-kusama-snapshot"},{"depth":2,"value":"Troubleshooting","anchor":"#troubleshooting"},{"depth":3,"value":"Error: \"State Database error: Too many sibling blocks inserted\"","anchor":"#error-state-database-error-too-many-sibling-blocks-inserted"},{"depth":3,"value":"Error: \"cannot create module: compilation settings are not compatible with the native host\"","anchor":"#error-cannot-create-module-compilation-settings-are-not-compatible-with-the-native-host"}],"content":"\n<robo-wiki-note type=\"note\" title=\"Note\">\n  In the screencast and screenshots of this article, we used version 1.4.0 of Robonomics. You need to use the same commands, but replace the version of Robonomics with the current one.\n</robo-wiki-note>\n\nhttps://youtu.be/wUTDDLDbzTg\n\nCurrently the Robonomics network is primarily maintained by the initial developers, but anyone can support the project. Every additional full node of the blockchain helps it to become more sustainable and fault tolerant. Robonomics node binaries are available in [release](https://github.com/airalab/robonomics/releases) assets or it can be [built from source](/docs/how-to-build-collator-node/).\n\n## What is a collator\n\nA Collator is part of the Robonomics parachain. This type of node creates new blocks for the Robonomics chain.\n\n>Collators maintain parachains by collecting parachain transactions from users and producing state transition proofs for Relay Chain validators. In other words, collators maintain parachains by aggregating parachain transactions into parachain block candidates and producing state transition proofs for validators based on those blocks.\n\nYou can learn more about collators on the related [Polkadot wiki page](https://wiki.polkadot.network/docs/learn-collator)\n\nIn the Robonomics parachain every collator gets rewards of (**0.000380520 XRT**) for every block that the collator builds (rewards occur when blocks are sealed to the chain). \nAlso the collator that builds the block gets **50% of transactions fees** contained within the block they create.\n\n## Requirements\n\n**Minimum hardware requirements** for collators:\n+ 4-cores CPU\n+ 200GB extendable NVMe space\n+ 8GB RAM\n\n\nHowever, it is recommended that you launch a collator using the **standard hardware requirements** for [Polkadot validators](https://wiki.polkadot.network/docs/maintain-guides-how-to-validate-polkadot#standard-hardware):\n+ CPU - Intel(R) Core(TM) i7-7700K CPU @ 4.20GHz.\n+ Storage - A NVMe solid state drive. Should be reasonably sized to deal with the blockchain growth. Currently the Kusama db uses around 90GB of space. We recommend 200-240GB for first months, but it will need to be re-evaluated every six months. Again: The ability to expand this disk space is required.\n+ Memory - 64GB ECC\n\n\nIn this article we use next specifications:\n+ 4 VCPU\n+ 240GB extendable volume for collator's databases\n+ 8GB RAM\n\n\n## Important information\n1. We use some variables in these instructions, and you'll need to replace the values for your own in all the commands:\n    + **%NODE_NAME%** is the node name. Example: *my-robonomics-kusama-collator*\n    + **%BASE_PATH%** is the path to mounted volume. Example: */mnt/HC_Volume_16056435/*\n    + **%POLKADOT_ACCOUNT_ADDRESS%** is the account address in the Polkadot ecosystem in SS58 format. Example: *4Gp3QpacQhp4ZReGhJ47pzExQiwoNPgqTWYqEQca9XAvrYsu*\n\n2. Note that you need to include *--state-cache-size=0* in the collator's service launch. This parameter is important for the stability of the collator.\nYou can see more info in the related [issue](https://github.com/airalab/robonomics/issues/234) on github.\n\n## Easily launch a Robonomics collator\n\nYou can easily launch a collator directly in the command line to check for errors.\nAfter doing this it is strongly recommended to launch the Robonomics collator as a service.\n\n```\nroot@robokusama-collator-screencast:~# robonomics \\\n  --parachain-id=2048 \\\n  --name=\"%NODE_NAME%\" \\\n  --validator \\\n  --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n  --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n  --base-path=\"%BASE_PATH%\" \\\n  --state-cache-size=0 \\\n  -- \\\n  --database=RocksDb \\\n  --unsafe-pruning \\\n  --pruning=1000\n```\n\n\n## Launch the Robonomics collator as a service\n\n1. Create the user for the service with home directory\n    ```\n    root@robokusama-collator-screencast:~# useradd -m robonomics\n    ```\n\n2. Download, extract and move the Robonomics binary to the */usr/local/bin/* directory. You need to replace *$ROBONOMICS_VERSION* with the current version of Robonomics in the commands in this section. You can find the current version on the [Releases page of the Robonomics repository on github](https://github.com/airalab/robonomics/releases).\n   ```\n   root@robokusama-collator-screencast:~# wget https://github.com/airalab/robonomics/releases/download/v$ROBONOMICS_VERSION/robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# tar -xf robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# mv robonomics /usr/local/bin/\n   ```\n   ![Download Robonomics 1.4.0 binary](./images/how-to-launch-the-robonomics-collator/wget_binary.png)\n\n\n3. Create the systemd service file named *robonomics.service*:\n    ```\n    root@robokusama-collator-screencast:~# nano /etc/systemd/system/robonomics.service\n    ```\n\n    And add the following lines in the service file:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n      --parachain-id=2048 \\\n      --name=\"%NODE_NAME%\" \\\n      --validator \\\n      --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n      --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n      --base-path=\"%BASE_PATH%\" \\\n      --state-cache-size=0 \\\n      --execution=Wasm \\\n      -- \\\n      --database=RocksDb \\\n      --unsafe-pruning \\\n      --execution=Wasm \\\n      --pruning=1000\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n    ![Create Robonomics service file](./images/how-to-launch-the-robonomics-collator/nano_robonomics_service.png)\n\n\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%\n    ```\n\n\n4. Save this file, then enable and start the service:\n    ```\n    root@robokusama-collator-screencast:~# systemctl enable robonomics.service \n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\nTelemetry url: https://telemetry.parachain.robonomics.network/#/Robonomics\n\nCollators logs can be monitored with: `journalctl -u robonomics.service -f` \n\nOnce the Robonomics collator is launched it will begin to sync with the Kusama Relay Chain, this can take a considerable amount of time, depending on your network speed and system specifications, so we recommend to download a Kusama snapshot. \n\n\n## Speeding up the sync process using a Kusama snapshot\n\nWe recommend to do this immediately after you've created and started the Robonomics service. You can find more info about snapshots and usage instructions on the following page: https://ksm-rocksdb.polkashots.io/\n\nInstructions:\n\n1. Stop the Robonomics service and remove the current Kusama database directory:\n    ```\n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/polkadot/chains/ksmcc3/db/\n    ```\n2. Download the actual snapshot and extract it:\n    ```\n    root@robokusama-collator-screencast:~# wget https://ksm-rocksdb.polkashots.io/snapshot -O kusama.RocksDb.tar.lz4\n    root@robokusama-collator-screencast:~# lz4 -c -d kusama.RocksDb.tar.lz4 | tar -x -C %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n    ![Download Kusama snapshot](./images/how-to-launch-the-robonomics-collator/wget_kusama_snapshot.png)\n\n\n    You can remove the downloaded archive after succesful unpacking:\n    ```\n    root@robokusama-collator-screencast:~# rm -v kusama.RocksDb.tar.lz4\n    ```   \n3. Setting the right ownership for the database folder:\n    ``` \n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n4. Start the Robonomics service again:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n5. Check service logs:\n    ```\n    root@robokusama-collator-screencast:~# journalctl -u robonomics.service -f\n    ```    \n    ![Check service logs](./images/how-to-launch-the-robonomics-collator/finish_journalctl.png)\n\n## Troubleshooting\n### Error: \"State Database error: Too many sibling blocks inserted\"\nFor fix this error you can just launch your collator in archive mode: \n\n1) First, need to stop the Robonomics service: \n    \n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    \n\n2) Then add the parameter `--state-pruning=archive` to the parachain part of the service file. Example of the edited service file:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n    --parachain-id=2048 \\\n    --name=\"%NODE_NAME%\" \\\n    --validator \\\n    --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n    --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n    --base-path=\"%BASE_PATH%\" \\\n    --state-cache-size=0 \\\n    --execution=Wasm \\\n    --state-pruning=archive \\\n    -- \\\n    --database=RocksDb \\\n    --unsafe-pruning \\\n    --execution=Wasm \\\n    --pruning=1000\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n3) Reload the systemd manager configuration:\n    ```\n    root@robokusama-collator-screencast:~# systemctl daemon-reload\n    ```\n\n4) Remove the exists parachain database:\n    ```\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/chains/robonomics/db/\n    ```\n\n5) Start the robonomics service:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n    After that need to wait for the synchronization of the parahain database.\n\n### Error: \"cannot create module: compilation settings are not compatible with the native host\"\nThis error related to the virtualization parameters. Need to use \"host-model\" type of the emulated processor. You can set up this on the virtualisation host.\n\nBut, if you catch this error on any hosting, you need to ask the technical support about this problem only.\n","tools":["Ubuntu 22.04.1 https://releases.ubuntu.com/22.04/","Robonomics 2.6.0 https://github.com/airalab/robonomics"],"fileInfo":{"path":"how-to-launch-the-robonomics-collator.md","name":"how-to-launch-the-robonomics-collator"}}},"context":{}}
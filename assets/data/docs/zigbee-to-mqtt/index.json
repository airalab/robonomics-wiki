{"hash":"17a604e45f7e10d1f6dfb26852a2a05067b6e681","data":{"doc":{"id":"d0d990f6331e4d4af06321360f4bd757","title":"Zigbee2MQTT","description":"","contributors":["LoSk-p","dergudzon","Leemo94","PaTara43"],"headings":[],"subtitles":[{"depth":2,"value":"Software Install","anchor":"#software-install"},{"depth":2,"value":"Pairing Device","anchor":"#pairing-device"}],"content":"\n**In this article you will set up your Zigbee adapter. If you have the [JetHome USB JetStick Z2](https://jethome.ru/z2/?sl=en) (which has all of the necessary firmware), you can simply proceed with these instructions. However, if you have another adapter, the first thing you need to do is to flash it with Zigbee2MQTT software. You can find instructions for your device [here](https://www.zigbee2mqtt.io/information/supported_adapters.html).**\n\n## Software Install\n\n<robo-wiki-note type=\"warning\">\n\n  If you use pre-installed image from Robonomics, this software already installed to your Raspberry Pi. Go to [\"Configuration and Run\"](/docs/zigbee-to-mqtt#config-and-run) section.\n\n</robo-wiki-note>\n\nSet up Node.js runtime environment repository and install it with required dependencies:\n\n<code-helper copy>\n\n```shell\nsudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs git make g++ gcc\n```\n\n</code-helper>\n\nVerify that the correct versions of Node.js (v14.X, V16.x, V17.x or V18.X) and package manager npm (6.X, 7.X or 8.X) automatically installed with Node.js, have been installed:\n\n<code-helper copy>\n\n```shell\nnode --version\nnpm --version\n```\n\n</code-helper>\n\nCreate a directory for Zigbee2MQTT and set your user as owner of it:\n\n<code-helper copy>\n\n```shell\nsudo mkdir /opt/zigbee2mqtt\nsudo chown -R ${USER}: /opt/zigbee2mqtt\n```\n\n</code-helper>\n\nClone Zigbee2MQTT repository:\n\n<code-helper copy>\n\n```shell\ngit clone --depth 1 --branch 1.28.2 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\n```\n\n</code-helper>\n\nInstall dependencies (as user pi). Note that the npm ci could produce some warning which can be ignored.\n\n<code-helper copy>\n\n```shell\ncd /opt/zigbee2mqtt\nnpm ci\n```\n\n</code-helper>\n\n<robo-wiki-title :type=\"2\" anchor=\"config-and-run\">\nConfiguration and Run\n</robo-wiki-title>\n\nConnect the Zigbee adapter to Raspberry Pi.\n\n<robo-wiki-picture src=\"home-assistant/connect-stick.gif\" />\n\nThen you need to find the location of the adapter. For this run the next command:\n\n<code-helper copy>\n\n```bash\nls -l /dev/serial/by-id\n```\n\n</code-helper>\n\nOutput should look like:\n\n```shell\n$ ls -l /dev/serial/by-id\ntotal 0\nlrwxrwxrwx 1 root root 13 Oct 10 01:44 usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0 -> ../../ttyUSB0\n\n```\n\nIn this example device connection directory is `ttyUSB0`.\n\nBefore starting Zigbee2MQTT you need to edit the `configuration.yaml` file. This file contains the configuration which will be used by Zigbee2MQTT:\n\n<code-helper copy>\n\n```bash\nnano /opt/zigbee2mqtt/data/configuration.yaml\n```\n\n</code-helper>\n\nThe basic configuration needs a few adjustments. Change the following statements:\n - `homeassistant:` to `true`. It will automatically connect sensors to Home Assistant.\n - uncomment `user` and `password`statements under `mqtt` and enter your username and password (as a string, with quotes) from MQTT Broker.\n - change port in `serial`-> `port` to `/dev/DEVICE_CONNECTION_DIRECTORY>`. In this example — `/dev/ttyUSB0`.\n\nAdjusted configuration file should look like:\n\n```shell\n# Home Assistant integration (MQTT discovery)\nhomeassistant: true\n\n# allow new devices to join\npermit_join: true\n\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://localhost'\n  # MQTT server authentication, uncomment if required:\n  user: <YOUR_USERNAME>\n  password: <YOUR_PASSWORD>\n\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/<YOUR_PORT> # /dev/ttyUSB0 for example\n```\n\n<robo-wiki-note type=\"warning\">\n\n  If you already have an active Zigbee adapter or gateway in your home, and you are now configuring another adapter, then they will conflict with each other. To solve this problem you need to change the channel on the new device. For this add the following strings to the end of configuration file:\n\n</robo-wiki-note>\n\n<code-helper copy>\n\n```shell\nadvanced:\n  # Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)\n  # (default: 11)\n  channel: 15\n```\n\n</code-helper>\n\nNow you can start Zigbee2MQTT:\n\n<code-helper copy>\n\n```bash\ncd /opt/zigbee2mqtt\nnpm start\n```\n\n</code-helper>\n\nIf started successfully, you will see something like:\n\n\n```shell\nBuilding Zigbee2MQTT... (initial build), finished\nZigbee2MQTT:info  2022-07-29 14:36:36: Logging to console and directory: '/opt/zigbee2mqtt/data/log/2022-07-29.14-36-36' filename: log.txt\nZigbee2MQTT:info  2022-07-29 14:36:36: Starting Zigbee2MQTT version 1.26.0 (commit #bc4ffc0)\nZigbee2MQTT:info  2022-07-29 14:36:36: Starting zigbee-herdsman (0.14.40)\nZigbee2MQTT:info  2022-07-29 14:36:49: zigbee-herdsman started (resumed)\nZigbee2MQTT:info  2022-07-29 14:36:49: Coordinator firmware version: '{\"meta\":{\"maintrel\":1,\"majorrel\":2,\"minorrel\":7,\"product\":1,\"revision\":20211219,\"transportrev\":2},\"type\":\"zStack3x0\"}'\nZigbee2MQTT:info  2022-07-29 14:36:49: Currently 0 devices are joined:\nZigbee2MQTT:warn  2022-07-29 14:36:49: `permit_join` set to  `true` in configuration.yaml.\nZigbee2MQTT:warn  2022-07-29 14:36:49: Allowing new devices to join.\nZigbee2MQTT:warn  2022-07-29 14:36:49: Set `permit_join` to `false` once you joined all devices.\nZigbee2MQTT:info  2022-07-29 14:36:49: Zigbee: allowing new devices to join.\nZigbee2MQTT:info  2022-07-29 14:36:49: Connecting to MQTT server at mqtt://localhost\nZigbee2MQTT:info  2022-07-29 14:36:49: Connected to MQTT server\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/state', payload 'online'\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/config', payload '{\"commit\":\"bc4ffc0\",\"coordinator\":{\"meta\":{\"maintrel\":1,\"majorrel\":2,\"minorrel\":7,\"product\":1,\"revision\":20211219,\"transportrev\":2},\"type\":\"zStack3x0\"},\"log_level\":\"info\",\"network\":{\"channel\":11,\"extendedPanID\":\"0x00124b0020cd133d\",\"panID\":6754},\"permit_join\":true,\"version\":\"1.26.0\"}'\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/state', payload 'online\n```\n\n## Pairing Device\n\nIt's time to connect your smart device. The most common way to switch a device to connect mode is to hold its power button or switch them on/off 5 times. Make sure Zigbee2MQTT is running.\n\n<robo-wiki-picture src=\"home-assistant/switch-device.gif\" />\n\nWhen the device connects, you should see a message like:\n\n```\nZigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\n```\nRemember the ID of the sensor: in this example `0x00158d0003eeeacf`.\n\nNow you should see this sensor with ID in your Home Assistant WebUI. Go to `Settings` -> `Devices & Services` -> `Devices`:\n\n<robo-wiki-picture src=\"home-assistant/mqtt-devices.jpg\" />\n\nAfter adding all the sensors, you can stop the program with `Ctrl+C`.\n\n<robo-wiki-note type=\"note\"> \n\n  If you don’t want to add any more devices, you can open the configuration file again and set `permit_join:` to `false`.\n  \n</robo-wiki-note>\n\nTo make the Zigbee2MQTT run after reboot, make a service. Create the file:\n\n<code-helper copy>\n\n```shell\nsudo nano /etc/systemd/system/zigbee2mqtt.service\n```\n\n</code-helper>\n\nAdd the following to this file:\n\n<code-helper copy>\n\n```shell\n[Unit]\nDescription=zigbee2mqtt\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/npm start\nWorkingDirectory=/opt/zigbee2mqtt\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nUser=ubuntu\n\n[Install]\nWantedBy=multi-user.target\n```\n\n</code-helper>\n\nVerify that the configuration works:\n\n<code-helper copy>\n\n```shell\nsudo systemctl start zigbee2mqtt\nsystemctl status zigbee2mqtt.service\n```\n\n</code-helper>\n\nOutput should look like:\n```\npi@raspberry:/opt/zigbee2mqtt $ systemctl status zigbee2mqtt.service\n● zigbee2mqtt.service - zigbee2mqtt\n   Loaded: loaded (/etc/systemd/system/zigbee2mqtt.service; disabled; vendor preset: enabled)\n   Active: active (running) since Thu 2018-06-07 20:27:22 BST; 3s ago\n Main PID: 665 (npm)\n   CGroup: /system.slice/zigbee2mqtt.service\n           ├─665 npm\n           ├─678 sh -c node index.js\n           └─679 node index.js\n\nJun 07 20:27:22 raspberry systemd[1]: Started zigbee2mqtt.\nJun 07 20:27:23 raspberry npm[665]: > zigbee2mqtt@1.6.0 start /opt/zigbee2mqtt\nJun 07 20:27:23 raspberry npm[665]: > node index.js\nJun 07 20:27:24 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Logging to directory: '/opt/zigbee2mqtt/data/log/2019-11-09.14-04-01'\nJun 07 20:27:25 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Starting Zigbee2MQTT version 1.6.0 (commit #720e393)\n```\n\nEnable the service to start Zigbee2MQTT automatically on boot:\n\n<code-helper copy>\n\n```shell\nsudo systemctl enable zigbee2mqtt.service\n```\n\n</code-helper>\n\nNow you can go to the [**IoT Subscription**](/docs/sub-activate) section and start activating the Robonomics subscription.","tools":["Zigbee2MQTT 1.28.2"],"fileInfo":{"path":"zigbee-to-mqtt.md","name":"zigbee-to-mqtt"}}},"context":{}}
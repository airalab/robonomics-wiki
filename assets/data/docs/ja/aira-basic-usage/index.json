{"hash":"fafc1a72b280365300824608799e28058e0a2c73","data":{"doc":{"id":"86b3f1c497cdee4f0ddc3cdcc3661e3c","title":"Basic usage of AIRA","description":"","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/aira-basic-usage.0b85c65.91e152be5ebf70cb551f7d6be55d4527.png","size":{"width":1920,"height":1080},"sizes":"(max-width: 1920px) 100vw, 1920px","srcset":["/assets/static/aira-basic-usage.1b91758.91e152be5ebf70cb551f7d6be55d4527.png 480w","/assets/static/aira-basic-usage.3df3210.91e152be5ebf70cb551f7d6be55d4527.png 1024w","/assets/static/aira-basic-usage.0b85c65.91e152be5ebf70cb551f7d6be55d4527.png 1920w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1920 1080' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ea46a34a27789225bc38899afc7fdf39'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ea46a34a27789225bc38899afc7fdf39)' width='1920' height='1080' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsSAAALEgHS3X78AAAC/klEQVRo3u2YWU8UQRDH%2bQgGUR9UBFQExXiQ%2bOR38NEnI5ooGJGABEG5BQEFRMF4ocZAIEKWI3gSRQnngueLQeVwXZZ1L9xlbxZm/061LBllATUYJ9qVVHa6q2d2%2btdVPVUdsDI0AqRBIZsQuHYDwqKiYbXZQCIIApZKvF4v5CgBK8SJk4Zu2TkHAMmoZgyDwyNQqUcx8P4D1KMajKg%2bQac3YHBoGJoxLbQ6HYZmxqjUapjGx2fvIbvZbJEthIDlwRvZ5Pfs3YfgiG0I2bzjOwC19Qokpqaj8nY19h8%2bikvXbiArvwini0pQWHoRmXmFOJWTj7TsPFTV1qH8ynU0ttxHbEIycguLca6sAj19z9mzpqen5QcgaF04giO3I2rXbqwOj0KICEMKYMJqxWednq04raZOr4feYITZYoFGq8UXs3nGrofBaBJtBthsdphM4zCythFWq02%2bHsDiX4QQKHrCsjXrEbb1P9wDCMKqsMg5ewC9NKkg%2bH6F2T5pW5hR7wIqaw/wqT8A/7pwABwAB8ABcAAcAAcwPwBpIiPt82f3l/B4F0mQ/naitCAAaSpMhQypL/uTFjbU57NL9cdUer4JyhYAicfjgdvtnvfFp6amFvwDKoT8gXA4nbKoFRYFUNfQhIKSC%2bhW9qG9sxvPOrrEErmB1fvU7urtQ02dAi9ev0Fbewd6lP3o7Oll18MfVbhZVYOKq5Wob2xG/8tXrFxWNLcg%2bWQWHj1uE59dBqfTJV8PuFVdi0PxSUhJz8aBuGPIOlOEg0cScEfRhNYnT1FacRmpmbnMHhMXL45NRExsPGITjosglOz84Oz5ctx92Irmew%2bQeCIdBcVlSErLYOcJKRk5eDvwbsmrzyUD4HA4WO1vs9thtztYrW8Xr6mP4pzq/cnJSdZ2udzMU0g9nm%2bhQXZyd48YKhRONJbCgtqWiQm26i6XS/6b4J8%2bA5DlHvCznzCp%2br4Av3qfLD3gd1ZQ7gcgPBPkADgADoAD4AA4AA6AA%2bAAOAAOgAMQ5SuzYqSoh35HDAAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"},"contributors":["akru"],"translated":false,"headings":[],"subtitles":[],"content":"\nTo get familiar with AIRA, let's see what is under the hood.\n\nOnce you launch the client several ros nodes will already be on the run. Here's a list of robonomics communication stack nodes:\n\n```bash\n$ rosnode list\n/eth/erc20_token\n/eth/eth_node\n/graph/aira_graph\n/liability/executor\n/liability/infochan/eth/signer\n/liability/infochan/ipfs_channel\n/liability/persistence\n/liability/listener\n/rosout\n```\n\n- `/eth/erc20_token`, `/eth/eth_node` - proved services for Ethereum blockchain and ERC20 tokens\n- `/graph/aira_graph` - service node for exploring other AIRA instances\n- `/liability/executor` - gets rosbag file from IPFS and plays it\n- `/liability/infochan/ipfs_channel` - is responsible for offer, demand and result messages. It catches messages from the channel and sends signed messages back\n- `/liability/infochan/eth/signer` - offers services for signing offer, demand and result messages\n- `/liability/listener` - watches for a new liability contracts. When the event is received the node calls executor node\n- `/liability/persistence` - helps to store incoming liabilities and restart them after shutdown\n\nAnd here's a list of robonomics stack topics.\n\n```bash\n$ rostopic list\n/eth/event/approval\n/eth/event/transfer\n/graph/greetings\n/liability/complete\n/liability/finalized\n/liability/incoming\n/liability/infochan/eth/sending/demand\n/liability/infochan/eth/sending/offer\n/liability/infochan/eth/sending/result\n/liability/infochan/eth/signing/demand\n/liability/infochan/eth/signing/offer\n/liability/infochan/eth/signing/result\n/liability/infochan/incoming/demand\n/liability/infochan/incoming/offer\n/liability/infochan/incoming/result\n/liability/persistence/add\n/liability/persistence/del\n/liability/persistence/update_timestamp\n/liability/ready\n/liability/result\n/rosout\n/rosout_agg\n```\n\nThe most important topics for us are:\n\n- `/liability/incoming` - when a new liability is created, this topic publishes Ethereum address of the contract\n- `/liability/result` - this topic is for publishing results. But don't publish a result directly to this topic! Use a service instead\n- `/liability/infochan/incoming/*` - a CPS gets information about offer, demand or result from corresponding topics\n- `/liability/infochan/eth/signing/*` - a CPS sends offer, demand or result messages to corresponding topics\n\nFor the details check out the [API page](/docs/robonomics-liability/).\n\nLet's start with greetings - say hello to AIRA!\n\nYou should just launch a pre-installed package `hello_aira`:\n\n```\n$ rosrun hello_aira hello_aira\n```\n\nWe've launched our agent. It will wait for a demand message. Now it's time to send the message. Go to [dapp](https://airalab.github.io/robonomics_tutorials/) and press Order.\nNow go back to the console and see the result!","tools":[]}},"context":{}}
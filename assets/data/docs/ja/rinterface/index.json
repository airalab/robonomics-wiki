{"hash":"8c97e94672e2f65db3959c4ea30cc2599941a27c","data":{"doc":{"id":"0064b636783b3ace6f2a85a4d037dfef","title":"PythonインターフェースとロボノミクスIO","description":"","contributors":["PaTara43"],"headings":[],"subtitles":[{"depth":2,"value":"robonomics-interface","anchor":"#robonomics-interface"},{"depth":3,"value":"インストール","anchor":"#インストール"},{"depth":3,"value":"使用例","anchor":"#使用例"},{"depth":2,"value":"CLI tool","anchor":"#cli-tool"}],"content":"\n**ロボノミクス パレットに実装されている一部の外部機能は、Polkadot アプリから送信するのが困難です。 さらに、プログラミング言語を使用してこの機能を操作する必要があります。 この目的のために、[robonomics-interface](https://github.com/Multi-Agent-io/robonomics-interface) と呼ばれる単純な Python ツールが開発されました。 これは、polkascan が保守する [py-substrate-interface](https://github.com/polkascan/py-substrate-interface) のラッパーです。 以下に、このパッケージの簡単な説明と、いくつかの役立つリンクと例を示します。 CLI ツールについても説明します。**\n\n## robonomics-interface\n\n[PyPi](https://pypi.org/project/robonomics-interface/)パッケージがダウンロードおよびセットアップできる状態で利用可能です。\n詳細なドキュメント生成された[ドキュメンテーション](https://multi-agent-io.github.io/robonomics-interface/)も利用可能です。\n\n全体として、これはプログラミングツールを介してRobonomicsブロックチェーンと対話したい開発者向けのツールです。RobonomicsチームのほとんどのPythonプロジェクトは、このインターフェースを使用してパラチェーンと対話します。\n\n### インストール\n\nインストールプロセスには、少なくともPython 3.8がインストールされている必要があります。`x86`、`arm7`、`arm8`のいずれのアーキテクチャもコンパイルプロセスを必要としません。すべてのホイールは依存関係のメンテナによってビルドおよび公開されます\n\nインストールツールとして`pip`を使用しま：\n\n```bash\n$ pip3 install robonomics_interface\n```\n\n### 使用例\n\n主なアイデアは、`Account`インスタンスを作成し、それを使用してパレット専用のインスタンスを作成することです。\n\n\n```python\nfrom robonomicsinterface import Account, Datalog\naccount = Account()\ndatalog_ = Datalog(account)\ndatalog_.get_item(addr=\"4G1V6yyvrkd3Z57H1giUky8RTRX3SZieRvuDpQzK4knNRy5R\",index=2)\n\n>>> (1657226418528, 'blah')\n```\n\n<robo-wiki-note type=\"note\" title=\"Local node\">\n\n  カスタムエンドポイント（たとえば、テスト用のローカルノード）を使用することも可能です:\n\n  ```python\n  account = Account(remote_ws=\"ws://127.0.0.1:9944\")\n  ```\n\n</robo-wiki-note>\n\nエクストリンシックも提出することが可能です:\n\n```python\nfrom robonomicsinterface import Account, Datalog\naccount = Account(seed=\"one two three four five six seven eight nine ten eleven twelve\")\ndatalog_ = Datalog(account)\ndatalog_.record(\"Hello, Robonomics!\")\n\n>>> 0xb2f742b6164ffc14b75a21188b37287c2416e6617635805e0a77db12773f6068  # this is an extrinsic hash\n```\n\n<robo-wiki-note type=\"note\" title=\"Docs\">\n\n  前述のように、より多くの例は[ドキュメンテーション](https://multi-agent-io.github.io/robonomics-interface/)ページで利用可能です。\n\n</robo-wiki-note>\n\n## CLI tool\n\n`robonomics-interface`には、プロトタイピングやクイックテストの目的で使用するためのPython `click` CLIツールも含まれています。パッケージとともにインストールされ、ターミナルで利用できます：\n\n```bash\n$ robomomics_interface --help\n\n#Usage: robonomics_interface [OPTIONS] COMMAND [ARGS]...\n#\n#Options:\n#  --help  Show this message and exit.\n#\n#Commands:\n#  read   Subscribe to datalog/launch events in the chain\n#  write  Send various extrinsics (launch commands or record datalogs)\n```\n\nローカルノードでそれを使用してみることもできます。パイプラインの哲学が採用されています：\n\n```bash\n$ echo \"Hello, Robonomics!\" | robonomics_interface write datalog -s \"//Alice\" --remote_ws \"ws://127.0.0.1:9944\"\n\n#0x22dbac7d25d2ee67c7d985f074163f674c8c9b4c554e545ca4c7186307e9023c  # this is an extrinsic hash\n```","tools":["Robonomics 2.3.0 https://github.com/airalab/robonomics","robonomics_interface 1.3.5 https://github.com/Multi-Agent-io/robonomics-interface"],"fileInfo":{"path":"ja/rinterface.md","name":"rinterface"}}},"context":{}}
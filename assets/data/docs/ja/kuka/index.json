{"hash":"469d33cce4695fb6d977e85fa99778d018d4e3f8","data":{"doc":{"id":"82663754528cff8b1c970d83669613b4","title":"Control Kuka manipulator with robonomics","description":"","contributors":["LoSk-p"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Installation","anchor":"#installation"},{"depth":2,"value":"Running gazebo model","anchor":"#running-gazebo-model"},{"depth":2,"value":"Running robonomics","anchor":"#running-robonomics"},{"depth":2,"value":"Running ipfs","anchor":"#running-ipfs"},{"depth":2,"value":"Running control package","anchor":"#running-control-package"},{"depth":2,"value":"Sending transaction","anchor":"#sending-transaction"},{"depth":2,"value":"Troubleshooting","anchor":"#troubleshooting"}],"content":"\nVideo with an example of work can be found here:\n\nhttps://youtu.be/z55HepXbHr8\n\n***\n\n## Requirements\n* ROS melodic, Gazebo (installation instraction [here](http://wiki.ros.org/melodic/Installation/Ubuntu))\n* Some extra packages\n```bash\nsudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n```\n* IPFS 0.4.22 (download from [here](https://www.npackd.org/p/ipfs/0.4.22) and install)\n```bash\ntar -xvzf go-ipfs_v0.4.22_linux-386.tar.gz\ncd go-ipfs/\nsudo bash install.sh\nipfs init\n```\n* pip3\n```bash\nsudo apt-get install python3-pip\n```\n* ipfshttpclient\n```bash\npip3 install ipfshttpclient\n```\n* substrate-interface\n```bash\npip3 install substrate-interface\n```\n* Robonomics node (binary file) (download latest release [here](https://github.com/airalab/robonomics/releases))\n* IPFS browser extension (not necessary)\n***\n## Installation\nInstall Kuka manipulator and control packages\n```bash\ncd catkin_wc/src/\ngit clone https://github.com/orsalmon/kuka_manipulator_gazebo\ngit clone https://github.com/LoSk-p/kuka_controller\ncd ..\ncatkin_make\n```\n***\n## Running gazebo model\n```bash\nsource ~/catkin_ws/devel/setup.bash\nroslaunch manipulator_gazebo manipulator_empty_world.launch\n```\nIn a new window\n```bash\nsource ~/catkin_ws/devel/setup.bash\nrosrun manipulator_gazebo move_arm_server\n```\n![model](../images/kuka-demo/1.png)\n***\n## Running robonomics\nGo to the folder with robonomics file ad create a local robonomics network:\n```bash\n./robonomics --dev --tmp\n```\n\n![robonomics](../images/kuka-demo/robonomics.png)\n\nGo to [Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) and switch to local node\n\n![local](../images/kuka-demo/local.png)\n\nThen go to Accounts and create `KUKA` account. Save account's mnemonic key, you will need it later. \n\n![acc](../images/kuka-demo/create_acc.png)\n\nSend some units to the new account from one of default accounts.\n\n![accs](../images/kuka-demo/send_money.png)\n***\n## Running ipfs\nRun ipfs daemon:\n```bash\nipfs daemon\n```\n***\n## Running control package\nIn config directory in kuka_control package you need to create config file with this lines, where `<your_mnemonic>` is saved mnemonic seed:\n```bash\n{\n    \"kuka_mnemonic\": \"<your_mnemonic>\",\n    \"node\": \"ws://127.0.0.1:9944\"\n}\n```\n\nNow you can run control script:\n```bash\nsource ~/catkin_ws/devel/setup.bash\nrosrun kuka_controller move_arm_client.py\n```\n![control](../images/kuka-demo/run.png)\n\n## Sending transaction\nIn [Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) go to `Developer/Extrinsics`, change `extrinsic` to `launch`. Chose your `KUKA` account in `robot` and change `param` to `Yes`. The press `Submit Transaction`\n\n![transaction](../images/kuka-demo/launch.png)\n\nIn the window with kuka_control package you will see:\n\n![done](../images/kuka-demo/res.png)\n\nThen go `Developer/Chain State` on the Robonomics portal, select `datalog` and `datalogItem((AccountId,u64)): RingBufferItem` in query and add `KUKA` datalog with button '+':\n\n![datalog](../images/kuka-demo/datalog.png)\n\nNow you can find robot's telemetry in IPFS via this link with your hash `https://gateway.ipfs.io/ipfs/<hash>`.\n\n## Troubleshooting\n\nIf `catkin_make` doesn't work with the message that it can't find MoveArm.h, try to remove last four lines in CMakeLists.txt in kuka_manipulator_gazebo package:\n```\ninclude_directories(include ${catkin_INCLUDE_DIRS})\n\nadd_executable(move_arm_server src/move_arm_server.cpp)\ntarget_link_libraries(move_arm_server ${catkin_LIBRARIES})\nadd_dependencies(move_arm_server beginner_tutorials_gencpp)\n```\nDo `catkin_make` without these lines, then returm them and do `catkin_make` again.\n","tools":[],"fileInfo":{"path":"ja/kuka.md","name":"kuka"}}},"context":{}}
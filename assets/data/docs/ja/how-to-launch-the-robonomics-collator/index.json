{"hash":"c4efcd02f56a9fa405dae8422eae3b46f45234bd","data":{"doc":{"id":"f411ed9773f3a8c5bcddcaebdf6f3926","title":"Robonomicsコレータの起動方法","description":"","contributors":["dergudzon","Leemo94"],"headings":[],"subtitles":[{"depth":2,"value":"コレーターとは何ですか","anchor":"#コレーターとは何ですか"},{"depth":2,"value":"要件","anchor":"#要件"},{"depth":2,"value":"重要な情報","anchor":"#重要な情報"},{"depth":2,"value":"初めて簡単にRobonomicsコレータを起動する","anchor":"#初めて簡単にrobonomicsコレータを起動する"},{"depth":2,"value":"Robonomicsコレータをサービスとして起動する","anchor":"#robonomicsコレータをサービスとして起動する"},{"depth":2,"value":"Kusamaスナップショットを使用して同期プロセスを高速化する","anchor":"#kusamaスナップショットを使用して同期プロセスを高速化する"},{"depth":2,"value":"トラブルシューティング","anchor":"#トラブルシューティング"},{"depth":3,"value":"エラー：「State Database error: Too many sibling blocks inserted」","anchor":"#エラー：「state-database-error-too-many-sibling-blocks-inserted」"},{"depth":3,"value":"エラー：「cannot create module: compilation settings are not compatible with the native host」","anchor":"#エラー：「cannot-create-module-compilation-settings-are-not-compatible-with-the-native-host」"}],"content":"\n<robo-wiki-note type=\"note\" title=\"Note\">\n  この記事のスクリーンキャストとスクリーンショットでは、Robonomicsのバージョン1.4.0を使用しました。同じコマンドを使用する必要がありますが、Robonomicsのバージョンを現在のバージョンに置き換えてください。\n</robo-wiki-note>\n\nhttps://youtu.be/wUTDDLDbzTg\n\n現在、Robonomicsネットワークは主に初期開発者によって維持されていますが、誰でもプロジェクトをサポートすることができます。ブロックチェーンの追加のフルノードは、より持続可能で耐障害性のあるものにするに役立ちます。Robonomicsノードのバイナリは[リリース](https://github.com/airalab/robonomics/releases)のアセットで利用可能であり、また[ソースからビルド](/docs/how-to-build-collator-node/)することもできます。\n\n## コレーターとは何ですか\n\nコレータはRobonomicsパラチェーンの一部です。このタイプのノードはRobonomicsチェーンの新しいブロックを作成します。\n\n>コレーターは、ユーザーからのパラチェーントランザクションを収集し、リレーチェーンのバリデーターに対して状態遷移の証明を生成することで、パラチェーンを維持します。言い換えれば、コレーターはパラチェーントランザクションをパラチェーンブロック候補に集約し、それらのブロックに基づいてバリデーターに対して状態遷移の証明を生成することで、パラチェーンを維持します。\n\n関連する[Polkadot wikiページ](https://wiki.polkadot.network/docs/learn-collator)でコレータについて詳しく学ぶことができます。\n\nロボノミクス パラチェーンでは、すべてのコレーターは、コレーターが構築するブロックごとに (**0.001598184 XRT**) の報酬を受け取ります (報酬はブロックがチェーンに封印されるときに発生します)。\nまた、ブロックを構築するコレータは、作成されたブロック内に含まれる**トランザクション手数料の50%**を受け取ります。\n\n## 要件\n\nコレータを起動する際には、[Polkadotバリデータ](https://wiki.polkadot.network/docs/maintain-guides-how-to-validate-polkadot#standard-hardware)の**標準ハードウェア要件**を使用することを推奨します。\n+ x86-64互換。\n+ Intel Ice Lake、またはそれ以降のバージョン（XeonまたはCoreシリーズ）；AMD Zen3、またはそれ以降のバージョン（EPYCまたはRyzen）。\n+ 物理コア数4つ @ 3.4GHz。\n+ 同時マルチスレッディング無効（IntelのHyper-Threading、AMDのSMT）。\n+ ストレージ - 1TBのNVMe SSD（ブロックチェーンの成長に対応するために適切なサイズである必要があります）。\n+ メモリ - 32GB DDR4 ECC\n\n\nこの記事では次の仕様を使用します：\n+ 4 vCPU\n+ コレータのデータベース用に700GBのNVMeスペース。このディスクスペースを拡張できる能力が必要です。\n+ 8GBのRAM\n\n\n## 重要な情報\n1. これらの手順ではいくつかの変数を使用しており、すべてのコマンドで自分自身の値に置き換える必要があります：\n    + **%NODE_NAME%**はノード名です。例：*my-robonomics-kusama-collator*\n    + **%BASE_PATH%**はマウントされたボリュームへのパスです。例：*/mnt/HC_Volume_16056435/*\n    + **%POLKADOT_ACCOUNT_ADDRESS%**はPolkadotエコシステムのアカウントアドレス（SS58形式）です。例：*4Gp3QpacQhp4ZReGhJ47pzExQiwoNPgqTWYqEQca9XAvrYsu*\n\n2. コレータのサービス起動時には*--state-cache-size=0*を含める必要があります。このパラメータはコレータの安定性に重要です。\n関連する[issue](https://github.com/airalab/robonomics/issues/234)で詳細を確認できます。\n\n## 初めて簡単にRobonomicsコレータを起動する\n\nエラーをチェックするために、コマンドラインで簡単にコレータを起動できます。\nれを行った後、Robonomicsコレータをサービスとして起動することを強くお勧めします（次の手順を参照）。\n\n```\nroot@robokusama-collator-screencast:~# robonomics \\\n  --parachain-id=2048 \\\n  --name=\"%NODE_NAME%\" \\\n  --validator \\\n  --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n  --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n  --base-path=\"%BASE_PATH%\" \\\n  --state-cache-size=0 \\\n  -- \\\n  --database=RocksDb \n```\n\n\n## Robonomicsコレータをサービスとして起動する\n\n1. ホームディレクトリを持つサービス用のユーザを作成します。\n    ```\n    root@robokusama-collator-screencast:~# useradd -m robonomics\n    ```\n\n2. Robonomicsバイナリをダウンロードし、展開して*/usr/local/bin/*ディレクトリに移動します。このセクションのコマンドでRobonomicsの現在のバージョンで*$ROBONOMICS_VERSION*を置き換える必要があります。現在のバージョンは[githubのRobonomicsリポジトリのReleasesページ](https://github.com/airalab/robonomics/releases)で確認できます。\n   ```\n   root@robokusama-collator-screencast:~# wget https://github.com/airalab/robonomics/releases/download/v$ROBONOMICS_VERSION/robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# tar -xf robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# mv robonomics /usr/local/bin/\n   ```\n   ![Download Robonomics 1.4.0 binary](../images/how-to-launch-the-robonomics-collator/wget_binary.png)\n\n\n3. *robonomics.service*というsystemdサービスファイルを作成します：\n    ```\n    root@robokusama-collator-screencast:~# nano /etc/systemd/system/robonomics.service\n    ```\n\n    そして、以下の行をサービスファイルに追加します：\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n      --parachain-id=2048 \\\n      --name=\"%NODE_NAME%\" \\\n      --validator \\\n      --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n      --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n      --base-path=\"%BASE_PATH%\" \\\n      --state-cache-size=0 \\\n      --execution=Wasm \\\n      -- \\\n      --database=RocksDb \\\n      --execution=Wasm\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n    ![Create Robonomics service file](../images/how-to-launch-the-robonomics-collator/nano_robonomics_service.png)\n\n\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%\n    ```\n\n\n4. このファイルを保存し、サービスを有効化して起動します：\n    ```\n    root@robokusama-collator-screencast:~# systemctl enable robonomics.service \n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\nテレメトリURL：https://telemetry.parachain.robonomics.network/#/Robonomics\n\nCollators ログは、`journalctl -u robonomics.service -f` で監視できます。\n\nRobonomics Collator が起動されると、Kusama リレー チェーンとの同期が開始されます。これには、ネットワーク速度とシステム仕様によってはかなりの時間がかかる場合があるため、Kusama スナップショットをダウンロードすることをお勧めします。\n\n\n## Kusamaスナップショットを使用して同期プロセスを高速化する\n\nRobonomicsサービスを作成して起動した直後にこれを行うことをおすすめします。スナップショットと使用方法の詳細については、次のページを参照してください：https://ksm-rocksdb.polkashots.io/\n\n手順：\n\n1. Robonomicsサービスを停止し、現在のKusamaデータベースディレクトリを削除します：\n    ```\n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/polkadot/chains/ksmcc3/db/\n    ```\n2. 実際のスナップショットをダウンロードして展開します：\n    ```\n    root@robokusama-collator-screencast:~# wget https://ksm-rocksdb.polkashots.io/snapshot -O kusama.RocksDb.tar.lz4\n    root@robokusama-collator-screencast:~# lz4 -c -d kusama.RocksDb.tar.lz4 | tar -x -C %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n    ![Download Kusama snapshot](../images/how-to-launch-the-robonomics-collator/wget_kusama_snapshot.png)\n\n    You can remove the downloaded archive after succesful unpacking:\n    ```\n    root@robokusama-collator-screencast:~# rm -v kusama.RocksDb.tar.lz4\n    ```\n\n3. データベースフォルダの適切な所有権を設定します：\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n4. Robonomicsサービスを再起動します：\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n5. サービスログを確認します：\n    ```\n    root@robokusama-collator-screencast:~# journalctl -u robonomics.service -f\n    ```    \n    ![Check service logs](../images/how-to-launch-the-robonomics-collator/finish_journalctl.png)\n\n## トラブルシューティング\n### エラー：「State Database error: Too many sibling blocks inserted」\nこのエラーを修正するには、コレーターをアーカイブ モードで起動するだけです。\n\n1) まず、Robonomicsサービスを停止する必要があります： \n    \n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    \n\n2）次に、サービスファイルのパラチェーン部分にパラメーター `--state-pruning=archive` を追加します。編集されたサービスファイルの例：\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n    --parachain-id=2048 \\\n    --name=\"%NODE_NAME%\" \\\n    --validator \\\n    --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n    --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n    --base-path=\"%BASE_PATH%\" \\\n    --state-cache-size=0 \\\n    --execution=Wasm \\\n    --state-pruning=archive \\\n    -- \\\n    --database=RocksDb \\\n    --execution=Wasm \n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n3）systemdマネージャーの設定を再読み込みします。\n    ```\n    root@robokusama-collator-screencast:~# systemctl daemon-reload\n    ```\n\n4）既存のパラチェーンデータベースを削除します。\n    ```\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/chains/robonomics/db/\n    ```\n\n5）robonomicsサービスを起動します。\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\n    その後、パラチェーンデータベースの同期が完了するまで待つ必要があります。\n\n### エラー：「cannot create module: compilation settings are not compatible with the native host」\nこのエラーは仮想化パラメーターに関連しています。エミュレートされたプロセッサの「host-model」タイプを使用する必要があります。これは仮想化ホストで設定できます。\n\nただし、このエラーがホスティング上で発生した場合は、この問題について技術サポートに問い合わせる必要があります。\n","tools":["Ubuntu 22.04.1 https://releases.ubuntu.com/22.04/","Robonomics 2.6.0 https://github.com/airalab/robonomics"],"fileInfo":{"path":"ja/how-to-launch-the-robonomics-collator.md","name":"how-to-launch-the-robonomics-collator"}}},"context":{}}
{"hash":"671b151cb5c36d690a1b44d8af7f5c2421d02da7","data":{"doc":{"id":"455921273610fd86656ed3ac8beec23d","title":"Connect sensor","description":"","contributors":["LoSk-p","makyul"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Zigbee stick","anchor":"#zigbee-stick"},{"depth":2,"value":"Installation","anchor":"#installation"},{"depth":2,"value":"Configuration","anchor":"#configuration"},{"depth":2,"value":"Connect Plug","anchor":"#connect-plug"},{"depth":2,"value":"After pairing","anchor":"#after-pairing"},{"depth":2,"value":"Running","anchor":"#running"}],"content":"\nExample of work is in the video:\n\nhttps://youtu.be/jsaFCVAx2sA\n\n## Requirements\n\n* [Aqara Smart Plug](https://aqara.ru/product/aqara-smart-plug/?yclid=462434430312045270)\n* Raspberry Pi\n* Zigbee adapter [JetHome USB JetStick Z2](https://jhome.ru/catalog/parts/PCBA/293/) (or one of [supported](https://www.zigbee2mqtt.io/information/supported_adapters.html))\n\nService is running on Raspberry Pi and contact the smart plug via zigbee protocol.\n\n## Zigbee stick\n\nIf you have JetHome USB JetStick Z2 it already has necessary firmware so you don't need to flash it. But if you have another adapter firstly you need to flash it with zigbee2MQTT software. You can find instructions for you device [here](https://www.zigbee2mqtt.io/information/supported_adapters.html).\n\nConnect the adapter and verify the adapter address (it also may be `/dev/ttyUSB1`):\n```bash\n$ ls -l /dev/ttyUSB0\ncrw-rw---- 1 root dialout 166, 0 May 16 19:15 /dev/ttyUSB0 \n```\n\nYou might need to get access to the USB port first. Add your user to `dialout` group (it works for ubuntu, but the name of the group may be different on other OS).\nFor ubuntu:\n```bash\nsudo usermod -a -G dialout $USER\n```\nFor arch:\n```bash\nsudo usermod -a -G uucp $USER\n```\nThen logout and login or restart the computer.\n\n## Installation\n\nClone the repository:\n\n```\ngit clone https://github.com/makyul/robonomics-carbon-footprint.git\ncd robonomics-carbon-footprint\n```\n\n## Configuration\n\nGo to `data/configuration.yaml` and set `permit_join: true`:\n\n```\n# Home Assistant integration (MQTT discovery)\nhomeassistant: false\n\n# allow new devices to join\npermit_join: true\n\n# MQTT settings\nmqtt:\n  # MQTT base topic for zigbee2mqtt MQTT messages\n  base_topic: zigbee2mqtt\n  # MQTT server URL\n  server: 'mqtt://172.17.0.1'\n  # MQTT server authentication, uncomment if required:\n  # user: my_user\n  # password: my_password\n\n# Serial settings\nserial:\n  # Location of CC2531 USB sniffer\n  port: /dev/ttyUSB0\n```\nAlso you might want to fill fields `server` and `port` with corresponding information. In `server` field use the IP of the `docker0` bridge to establish the connection: \n\n```bash\n$ ip a                                                 127\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\n...\n\n5: docker0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:0d:ff:5f:a3 brd ff:ff:ff:ff:ff:ff\n    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:dff:feff:5fa3/64 scope link \n       valid_lft forever preferred_lft forever\n```\nHere your address is `172.17.0.1`.\n\nThen create file config/config.yaml with following information and set your location (you can look up to https://countrycode.org/ for 3-letters ISO-code):\n\n```\nlocation: RUS\nservice_address: 4GdHeLbmio2noKCQM5mfxswXfPoW2PcbpYKKkM4NQiqSqJMd\ntwin_id: 5\nsending_timeout: 3600\nbroker_address: \"172.17.0.1\"\nbroker_port: 1883\n```\n\n## Connect Plug\n\nFirst run:\n\n```\ndocker-compose up     \n```\n\nTo switch to the pairing mode on plug long press the power button for a few seconds until the light starts flashing blue rapidly. \n\nIn logs you should see now your plug started publishing to mqtt. \n\n\n## After pairing\n\nIf you don't wont to let other devices to pair with your stick, now you should go to `data/configuration.yaml` and set `permit_join: false`. Restart service (use 'Ctrl+C' and \n\n```bash\ndocker-compose up     \n```\nonce again to submit changes).\n\n## Running\nAt first start the account for the plug will be created. \n> If you already have an account you should add its seed to `config.config.yaml` file in `device_seed` section:\n>\n> ```\n> location: RUS\n> service_address: 4GdHeLbmio2noKCQM5mfxswXfPoW2PcbpYKKkM4NQiqSqJMd\n> twin_id: 5\n> sending_timeout: 3600\n> broker_address: \"172.17.0.1\"\n> broker_port: 1883\n> device_seed: <device_seed>\n>```\n\nAfter creating account you will see the address in logs (seed will be added to `config/config.yaml`):\n```\nplug               | Generated account with address: 4GuP82BMAgrbtU8GhnKhgzP827sJEaBXeMX38pZZKPSpcWeT\n```\nYou need to transfer some tokens to this account for transaction fees, you can do it on [Robonomics Portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/accounts). \n\nService will see that you have enough tokens, in logs you will see:\n```\nplug               | Balance is OK\n```\nService will see mqtt messages from the plug and safe power usage. Every hour (you can change timeout in `config/config.yaml` in `sending_timeout` section, timeout is on seconds) it will create datalog with the following information:\n```\n{'geo': 'RUS', 'power_usage': 1.021237391233444, 'timestamp': 1644494860.5860083}\n```\n","tools":[],"fileInfo":{"path":"pt/carbon-footprint-sensor.md","name":"carbon-footprint-sensor"}}},"context":{}}
{"hash":"3f5dbcf25038fb82d4541254c2b3842511271503","data":{"doc":{"id":"9d136c80b74003474a3d0104e465a5d7","title":"Como lançar o Robonomics collator","description":"","contributors":["dergudzon","Leemo94"],"headings":[],"subtitles":[{"depth":2,"value":"O que é um colator","anchor":"#o-que-é-um-colator"},{"depth":2,"value":"Requisitos","anchor":"#requisitos"},{"depth":2,"value":"Informações importantes","anchor":"#informações-importantes"},{"depth":2,"value":"Lançar facilmente um Robonomics collator pela primeira vez","anchor":"#lançar-facilmente-um-robonomics-collator-pela-primeira-vez"},{"depth":2,"value":"Lançar o Robonomics collator como um serviço","anchor":"#lançar-o-robonomics-collator-como-um-serviço"},{"depth":2,"value":"Acelerando o processo de sincronização usando um snapshot do Kusama","anchor":"#acelerando-o-processo-de-sincronização-usando-um-snapshot-do-kusama"},{"depth":2,"value":"Solucionando Problemas","anchor":"#solucionando-problemas"},{"depth":3,"value":"Erro: \"State Database error: Too many sibling blocks inserted\"","anchor":"#erro-state-database-error-too-many-sibling-blocks-inserted"},{"depth":3,"value":"Erro: \"cannot create module: compilation settings are not compatible with the native host\"","anchor":"#erro-cannot-create-module-compilation-settings-are-not-compatible-with-the-native-host"}],"content":"\n<robo-wiki-note type=\"note\" title=\"Note\">\n  No screencast e nas capturas de tela deste artigo, usamos a versão 1.4.0 do Robonomics. Você precisa usar os mesmos comandos, mas substituir a versão do Robonomics pela atual.\n</robo-wiki-note>\n\nhttps://youtu.be/wUTDDLDbzTg\n\nAtualmente, a rede Robonomics é mantida principalmente pelos desenvolvedores iniciais, mas qualquer pessoa pode apoiar o projeto. Cada nó completo adicional da blockchain ajuda a torná-la mais sustentável e tolerante a falhas. Os binários do nó Robonomics estão disponíveis em [release](https://github.com/airalab/robonomics/releases) ou podem ser [construídos a partir do código-fonte](/docs/how-to-build-collator-node/).\n\n## O que é um colator\n\nUm Collator faz parte do parachain Robonomics. Esse tipo de nó cria novos blocos para a cadeia Robonomics.\n\n>Os colatores mantêm as parachains coletando transações de parachain dos usuários e produzindo provas de transição de estado para os validadores da Relay Chain. Em outras palavras, os colatores mantêm as parachains agregando transações de parachain em candidatos a blocos de parachain e produzindo provas de transição de estado para os validadores com base nesses blocos.\n\nVocê pode aprender mais sobre collators na página wiki relacionada do [Polkadot](https://wiki.polkadot.network/docs/learn-collator)\n\nNo parachain Robonomics, cada agrupador recebe recompensas de (**0,001598184 XRT**) para cada bloco que o agrupador constrói (as recompensas ocorrem quando os blocos são selados à cadeia).\nAlém disso, o collator que constrói o bloco recebe **50% das taxas de transação** contidas no bloco que eles criam.\n\n## Requisitos\n\nRecomenda-se lançar um collator usando os **requisitos de hardware padrão** para [validadores Polkadot](https://wiki.polkadot.network/docs/maintain-guides-how-to-validate-polkadot#standard-hardware):\n+ Compatível com x86-64.\n+ Intel Ice Lake, ou mais recente (Xeon ou série Core); AMD Zen3, ou mais recente (EPYC ou Ryzen).\n+ 4 núcleos físicos @ 3.4GHz.\n+ Multithreading simultâneo desativado (Hyper-Threading na Intel, SMT na AMD).\n+ Armazenamento - Um SSD NVMe de 1 TB (Deve ter um tamanho razoável para lidar com o crescimento da blockchain).\n+ Memória - 32 GB DDR4 ECC\n\n\nNeste artigo, usamos as seguintes especificações:\n+ 4 vCPU\n+ 700 GB de espaço NVMe para bancos de dados do collator. A capacidade de expandir esse espaço em disco é necessária.\n+ 8GB de RAM\n\n\n## Informações importantes\n1. Usamos algumas variáveis nessas instruções e você precisará substituir os valores pelos seus próprios em todos os comandos:\n    + **%NODE_NAME%** é o nome do nó. Exemplo: *meu-robonomics-kusama-collator*\n    + **%BASE_PATH%** é o caminho para o volume montado. Exemplo: */mnt/HC_Volume_16056435/*\n    + **%POLKADOT_ACCOUNT_ADDRESS%** é o endereço da conta no ecossistema Polkadot no formato SS58. Exemplo: *4Gp3QpacQhp4ZReGhJ47pzExQiwoNPgqTWYqEQca9XAvrYsu*\n\n2. Observe que você precisa incluir *--state-cache-size=0* no lançamento do serviço do collator. Esse parâmetro é importante para a estabilidade do collator.\nVocê pode ver mais informações no [issue](https://github.com/airalab/robonomics/issues/234) relacionado no github.\n\n## Lançar facilmente um Robonomics collator pela primeira vez\n\nVocê pode lançar facilmente um collator diretamente na linha de comando para verificar erros.\nDepois de fazer isso, é altamente recomendável lançar o Robonomics collator como um serviço (veja o próximo passo).\n\n```\nroot@robokusama-collator-screencast:~# robonomics \\\n  --parachain-id=2048 \\\n  --name=\"%NODE_NAME%\" \\\n  --validator \\\n  --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n  --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n  --base-path=\"%BASE_PATH%\" \\\n  --state-cache-size=0 \\\n  -- \\\n  --database=RocksDb \n```\n\n\n## Lançar o Robonomics collator como um serviço\n\n1. Crie o usuário para o serviço com diretório home\n    ```\n    root@robokusama-collator-screencast:~# useradd -m robonomics\n    ```\n\n2. Baixe, extraia e mova o binário do Robonomics para o diretório */usr/local/bin/*. Você precisa substituir *$ROBONOMICS_VERSION* pela versão atual do Robonomics nos comandos desta seção. Você pode encontrar a versão atual na [página de lançamentos do repositório Robonomics no github](https://github.com/airalab/robonomics/releases).\n   ```\n   root@robokusama-collator-screencast:~# wget https://github.com/airalab/robonomics/releases/download/v$ROBONOMICS_VERSION/robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# tar -xf robonomics-$ROBONOMICS_VERSION-x86_64-unknown-linux-gnu.tar.gz\n   root@robokusama-collator-screencast:~# mv robonomics /usr/local/bin/\n   ```\n   ![Download Robonomics 1.4.0 binary](../images/how-to-launch-the-robonomics-collator/wget_binary.png)\n\n\n3. Crie o arquivo de serviço systemd chamado *robonomics.service*:\n    ```\n    root@robokusama-collator-screencast:~# nano /etc/systemd/system/robonomics.service\n    ```\n\n    E adicione as seguintes linhas no arquivo de serviço:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n      --parachain-id=2048 \\\n      --name=\"%NODE_NAME%\" \\\n      --validator \\\n      --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n      --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n      --base-path=\"%BASE_PATH%\" \\\n      --state-cache-size=0 \\\n      --execution=Wasm \\\n      -- \\\n      --database=RocksDb \\\n      --execution=Wasm\n\n    [Install]\n    WantedBy=multi-user.target\n    ```\n\n    ![Create Robonomics service file](../images/how-to-launch-the-robonomics-collator/nano_robonomics_service.png)\n\n\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%\n    ```\n\n\n4. Salve este arquivo, em seguida, habilite e inicie o serviço:\n    ```\n    root@robokusama-collator-screencast:~# systemctl enable robonomics.service \n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\nURL de telemetria: https://telemetry.parachain.robonomics.network/#/Robonomics\n\nOs logs dos agrupadores podem ser monitorados com: `journalctl -u robonomics.service -f` \n\nAssim que o coletor Robonomics for iniciado, ele começará a sincronizar com o Kusama Relay Chain. Isso pode levar um tempo considerável, dependendo da velocidade da rede e das especificações do sistema, por isso recomendamos baixar um instantâneo do Kusama.\n\n\n## Acelerando o processo de sincronização usando um snapshot do Kusama\n\nRecomendamos fazer isso imediatamente após criar e iniciar o serviço Robonomics. Você pode encontrar mais informações sobre snapshots e instruções de uso na seguinte página: https://ksm-rocksdb.polkashots.io/\n\nInstruções:\n\n1. Pare o serviço Robonomics e remova o diretório do banco de dados atual do Kusama:\n    ```\n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/polkadot/chains/ksmcc3/db/\n    ```\n2. Baixe o snapshot atual e extraia-o:\n    ```\n    root@robokusama-collator-screencast:~# wget https://ksm-rocksdb.polkashots.io/snapshot -O kusama.RocksDb.tar.lz4\n    root@robokusama-collator-screencast:~# lz4 -c -d kusama.RocksDb.tar.lz4 | tar -x -C %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n    ![Download Kusama snapshot](../images/how-to-launch-the-robonomics-collator/wget_kusama_snapshot.png)\n\n    Você pode remover o arquivo baixado após descompactar com sucesso:\n    ```\n    root@robokusama-collator-screencast:~# rm -v kusama.RocksDb.tar.lz4\n    ```\n\n3. Definindo a propriedade correta para a pasta do banco de dados:\n    ```\n    root@robokusama-collator-screencast:~# chown -R robonomics:robonomics %BASE_PATH%/polkadot/chains/ksmcc3\n    ```\n4. Inicie o serviço Robonomics novamente:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n5. Verifique os logs do serviço:\n    ```\n    root@robokusama-collator-screencast:~# journalctl -u robonomics.service -f\n    ```    \n    ![Check service logs](../images/how-to-launch-the-robonomics-collator/finish_journalctl.png)\n\n## Solucionando Problemas\n### Erro: \"State Database error: Too many sibling blocks inserted\"\nPara corrigir esse erro, você pode simplesmente iniciar seu agrupador no modo de arquivamento:\n\n1) Primeiro, pare o serviço Robonomics: \n    \n    root@robokusama-collator-screencast:~# systemctl stop robonomics.service\n    \n\n2) Em seguida, adicione o parâmetro `--state-pruning=archive` à parte da parachain do arquivo de serviço. Exemplo do arquivo de serviço editado:\n    ```\n    [Unit]\n    Description=robonomics\n    After=network.target\n    \n    [Service]\n    User=robonomics\n    Group=robonomics\n    Type=simple\n    Restart=on-failure\n\n    ExecStart=/usr/local/bin/robonomics \\\n    --parachain-id=2048 \\\n    --name=\"%NODE_NAME%\" \\\n    --validator \\\n    --lighthouse-account=\"%POLKADOT_ACCOUNT_ADDRESS%\" \\\n    --telemetry-url=\"wss://telemetry.parachain.robonomics.network/submit/ 0\" \\\n    --base-path=\"%BASE_PATH%\" \\\n    --state-cache-size=0 \\\n    --execution=Wasm \\\n    --state-pruning=archive \\\n    -- \\\n    --database=RocksDb \\\n    --execution=Wasm \n\n    [Instalar]\n    WantedBy=multi-user.target\n    ```\n\n3) Recarregue a configuração do gerenciador do systemd:\n    ```\n    root@robokusama-collator-screencast:~# systemctl daemon-reload\n    ```\n\n4) Remova o banco de dados da parachain existente:\n    ```\n    root@robokusama-collator-screencast:~# rm -rf %BASE_PATH%/chains/robonomics/db/\n    ```\n\n5) Inicie o serviço robonomics:\n    ```\n    root@robokusama-collator-screencast:~# systemctl start robonomics.service\n    ```\n\n    Depois disso, é necessário aguardar a sincronização do banco de dados da parachain.\n\n### Erro: \"cannot create module: compilation settings are not compatible with the native host\"\nEsse erro está relacionado aos parâmetros de virtualização. É necessário usar o tipo de processador emulado \"host-model\". Você pode configurar isso no host de virtualização.\n\nNo entanto, se você encontrar esse erro em qualquer hospedagem, é necessário entrar em contato com o suporte técnico apenas sobre esse problema.\n","tools":["Ubuntu 22.04.1 https://releases.ubuntu.com/22.04/","Robonomics 2.6.0 https://github.com/airalab/robonomics"],"fileInfo":{"path":"pt/how-to-launch-the-robonomics-collator.md","name":"how-to-launch-the-robonomics-collator"}}},"context":{}}
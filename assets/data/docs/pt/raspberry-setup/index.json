{"hash":"11f8e36fe11e6633fb218dc158e15b2f493c1cb9","data":{"doc":{"id":"83fd6609270276529e54ee9b7eb75edf","title":"Raspberry Pi Setup","description":"","contributors":["LoSk-p","dergudzon","Leemo94"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Preinstalled image","anchor":"#preinstalled-image"},{"depth":2,"value":"Manual Installation","anchor":"#manual-installation"},{"depth":3,"value":"Home Assistant installation","anchor":"#home-assistant-installation"},{"depth":3,"value":"IPFS installation","anchor":"#ipfs-installation"},{"depth":3,"value":"Zigbee2MQTT setup","anchor":"#zigbee2mqtt-setup"},{"depth":3,"value":"Systemd services","anchor":"#systemd-services"},{"depth":3,"value":"Add custom integration","anchor":"#add-custom-integration"}],"content":"\nFor all methods from [\"Overview\"](/docs/home-assistant-begin/), the first thing you need to do is set up a Raspberry Pi. \nTo set up Raspberry Pi you could use our \"ready to use\" image in **\"Preinstalled image\"** section or install all software directly in **\"Manual installation\"** section.\n\n## Preinstalled image\nThe easiest way to set up your Raspberry is to use our prepared image. \nFor downloading it, we will use IPFS. For this [install IPFS](https://docs.ipfs.tech/install/command-line/) and start it (Don't forget to make `ipfs init` for the first start):\n```shell\nipfs daemon\n```\n\nIn other terminal window download image:\n\nAlternatively, you can download it [from url.](https://ipfs.io/ipfs/QmVKSwB6nXNjq8Yydb1unYWjahv2mz45ME4NTUw9mWBj2S?filename=rpi_hass.img.gz) (**Only with started IPFS Daemon**), but then you\n\n```shell\nipfs get QmZTbvaBPQgeUDBGZg3WJQbP4QUyr8gSF6Uw89cLkY72sx -o rpi.img.xz\n```\n\nThen read the next chapter to install image.\n\n<robo-wiki-title type=\"3\" anchor=\"configuration-rpi\"> \n  Configuration RPi\n</robo-wiki-title>\n\nInstall [balena etcher](https://www.balena.io/etcher/) on your computer. Then, insert the SD card and run the Imager program. \nSelect required image as the operating system and ensure to select your SD card from the storage dropdown, and then `flash` image.\n\n<robo-wiki-picture src=\"home-assistant/balena.jpg\" alt=\"Balena installer\" />\n\nOpen the SD card's storage and navigate inside the root folder of the card. The name of the folder should be something similar to `system-boot`.\n\nFind the file named `network-config` and open it in a text editor. Copy the text below and paste it into the file and insert your **wi-fi name** and **wi-fi password**:\n\n```\nversion: 2\nethernets: \n  eth0:\n    dhcp4: true\n    optional: true\nwifis:\n  wlan0:\n    dhcp4: true\n    optional: true\n    access-points:\n      YOUR_WIFI_NAME:\n        password: \"YOUR_WIFI_PASSWORD\"\n```\n\n<robo-wiki-note type=\"warning\">Make sure that you input your actual Wi-Fi name and your Wi-Fi password.</robo-wiki-note>\n\n<robo-wiki-note type=\"note\">This Wi-Fi settings available only on first boot setup.\nIf later you need to change settings, please edit configuration file in `/etc/netplan/` folder. \n</robo-wiki-note>\n\nThen you need to save the file, and insert the SD card to the Raspberry Pi and turn it on. It should connect to your wi-fi network. \n\nNow you need to find its address. To find address you can use [Fing app](https://www.fing.com/products). \nYou can also find an RPi address with a `nmap` tool. Install it with:\n\n<robo-wiki-tabs>\n  <robo-wiki-tab title=\"Linux\">\n    <pre>sudo apt-get install nmap</pre>\n  </robo-wiki-tab>\n  <robo-wiki-tab title=\"OSX\">\n    <pre>brew install nmap</pre>\n  </robo-wiki-tab>\n\n  <robo-wiki-tab title=\"Other\">\n\n  [https://nmap.org/download.html](https://nmap.org/download.html)\n\n  </robo-wiki-tab>\n</robo-wiki-tabs>\n\nThen find your address in the local network with:\n\n<robo-wiki-tabs>\n  <robo-wiki-tab title=\"Linux\">\n    <pre>ip a</pre>\n  </robo-wiki-tab>\n  <robo-wiki-tab title=\"OSX\">\n    <pre>ifconfig</pre>\n  </robo-wiki-tab>\n</robo-wiki-tabs>\n\n<!-- ```bash\nip a\n``` -->\n\nIt should look like `192.168.xx.xx` or `172.xx.xx.xx`.\n\nThen scan your network as shown below replacing the last octet of the address with 0. (One may also use `arp -a` ):\n\n```bash \n$ sudo nmap -sP 192.168.xx.0/24\nStarting Nmap 7.80 ( https://nmap.org ) at 2020-06-26 13:50 CEST\nNmap scan report for _gateway (192.168.43.1)\nHost is up (0.015s latency).\nMAC Address: 8E:F5:A3:DB:03:27 (Unknown)\nNmap scan report for ubuntu (192.168.43.56)\nHost is up (0.049s latency).\nMAC Address: DC:A6:32:02:46:50 (Raspberry Pi Trading)\nNmap scan report for LAPTOP-27UBLNO7 (192.168.43.234)\nHost is up (0.00057s latency).\nMAC Address: 7C:B2:7D:9E:95:DA (Intel Corporate)\nNmap scan report for ed-vm (192.168.43.138)\nHost is up.\nNmap done: 256 IP addresses (4 hosts up) scanned in 2.07 seconds\n```\n\nIn this example the Raspberry Pi's address is `192.168.43.56`. Now connect to it over ssh:\n\n<robo-wiki-note type=\"note\"> User is \"ubuntu\". Password is \"ubuntu\". </robo-wiki-note>\n\n```bash\nssh ubuntu@192.168.43.56\n```\nIf you have already installed our \"ready to use\" image, then go to the next article [MQTT Broker](/docs/mqtt-broker/).\nOtherwise, continue manual installation.\n\n## Manual Installation\nIf It's necessary, you can create PRi image manually. \nFor this you should choose **[64-bit Ubuntu Server 22.04 LTS](https://cdimage.ubuntu.com/releases/22.04/release/ubuntu-22.04.1-preinstalled-server-arm64+raspi.img.xz) or newer**  and \nthen repeat [Configuration RPi](#configuration-rpi).\n\n### Home Assistant installation\nNow we need to install Home Assistant to the Raspberry Pi. Official website of Home Assistant can be found [here](https://www.home-assistant.io/). \n\nWe will install `Home Assistant Core`. Its actual version is 2022.8.2  and instruction assumes that you already have Python 3.9 or newer installed.\n\nLet's start. The easiest way is to use our bash script `install.sh` to update system and install all dependencies automatically.\nDownload file to your Raspberry Pi. Then change user's rights for this file and start it:\n\n```shell\ncurl -O https://raw.githubusercontent.com/LoSk-p/robonomics-hass-utils/main/raspberry_pi/install.sh\nchmod a+x install.sh\nbash install.sh\n```\n\nDuring installation process you will see the next request:\n\n<robo-wiki-picture src=\"home-assistant/installation.jpg\" alt=\"RPI installer\" />\n\nJust choose **ok** with `tab` button and press **enter**.\nAfter script work is finished, go to the next article -  [MQTT Broker.](/docs/mqtt-broker/)\n\n**Alternatively**, you can do all the job manually. \n\nUpdate your system and install necessary packages:\n\n```bash\nsudo apt-get update\nsudo apt-get upgrade -y\nsudo apt-get install -y python3 python3-dev python3-venv python3-pip libffi-dev libssl-dev libjpeg-dev zlib1g-dev autoconf build-essential libopenjp2-7 libtiff5 tzdata libcurl4-openssl-dev subversion\n```\n\nCreate user `homeassistant` and the directory for homeassistant core:\n\n```bash\nsudo useradd -rm homeassistant\nsudo mkdir /srv/homeassistant\nsudo chown homeassistant:homeassistant /srv/homeassistant\n```\n\nNext step is to create and switch to a virtual environment for Home Assistant Core. This should be done as the homeassistant user.\n\n```bash\nsudo -u homeassistant -H -s\ncd /srv/homeassistant\npython3 -m venv .\nsource bin/activate\n```\n\nAs the result, you will find a name of the virtual environment in the brackets:\n```bash\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$ \n```\n\n\nThen install required Python packages:\n\n```bash\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$ python3 -m pip install wheel~=0.37\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$ pip3 install sqlalchemy~=1.4 fnvhash~=0.1 aiodiscover==1.4.11\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$ pip3 install homeassistant==2022.8.2\n```\n\nStart Home Assistant Core for the first time. \nThis will complete the installation for you,by automatically creating the `.homeassistant `configuration directory in the `/home/homeassistant` directory, and installing any basic dependencies:\n\n```bash\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$ hass\n```\n\nYou can now reach your installation via the web interface on `http://%RASPBERRY_IP_ADDRESS%:8123`. \nIn this example: `http://192.168.43.56:8123`\n\n> You don't need to connect you raspberry to the monitor, you can open Web UI from any computer connected to your local network.\n\nWait until you will get \"Hello window\" in browser and then stop Home Assistant with `Ctrl+C`.\n\n### IPFS installation\nAlso, we need [IPFS](https://ipfs.io/) for working with robonomics. As for the latest release of IPFS is 0.12.2. You can use our script to download ipfs and create systemd service with it.\n\n```shell\n(homeassistant) homeassistant@ubuntu:/srv/homeassistant/$ exit\ncd ~\nwget https://raw.githubusercontent.com//airalab/homeassistant-robonomics-integration/main/install_ipfs.sh\nsudo chmod +x install_ipfs.sh\n./install_ipfs.sh\n```\n\n### Zigbee2MQTT setup\nNow install necessary software for Zigbee2MQTT sticks:\n\n```bash\n# Set up Node.js repository and install Node.js + required dependencies\n# NOTE: Older i386 hardware can work with [unofficial-builds.nodejs.org](https://unofficial-builds.nodejs.org/download/release/v16.15.0/ e.g. Version 16.15.0 should work.\nsudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs git make g++ gcc\n\n# Verify that the correct nodejs and npm (automatically installed with nodejs)\n# version has been installed\nnode --version  # Should output v14.X, V16.x, V17.x or V18.X\nnpm --version  # Should output 6.X, 7.X or 8.X\n\n# Create a directory for zigbee2mqtt and set your user as owner of it\nsudo mkdir /opt/zigbee2mqtt\nsudo chown -R ${USER}: /opt/zigbee2mqtt\n\n# Clone Zigbee2MQTT repository\ngit clone --depth 1 --branch 1.28.0 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\n\n# Install dependencies (as user \"pi\")\ncd /opt/zigbee2mqtt\nnpm ci\n```\n\nNote that the `npm ci` could produce some `warning` which can be ignored.\n\n### Systemd services\n\nIf you don't want to start Home assistant manually everytime, create systemd service.\n\nCreate new service for Home Assistant to start: \n\n```bash\nubuntu@ubuntu:~$ sudo nano /etc/systemd/system/home-assistant@homeassistant.service \n```\n\nPaste the following:\n\n```\n[Unit]\nDescription=Home Assistant\nAfter=network-online.target\n[Service]\nType=simple\nRestart=on-failure\n\nUser=%i\nWorkingDirectory=/srv/%i/\nExecStart=/srv/homeassistant/bin/hass -c \"/home/%i/.homeassistant\"\nEnvironment=\"PATH=/srv/%i/bin\"\n\n[Install]\nWantedBy=multi-user.target\n```\n\nAfter that enable and start the service:\n\n```bash\nsudo systemctl enable home-assistant@homeassistant.service\nsudo systemctl start home-assistant@homeassistant.service\n```\n\n### Add custom integration\n\nIntegrations allow Home Assistant to record datalogs with encrypted data from Home Assistant and listen to launch commands to control smart devices. Integrations use IPFS to store data and send IPFS hash in datalog or launch.\n\nOn your Raspberry Pi with Home Assistant log in homeassistant user:\n```bash \nsudo -u homeassistant -H -s\n```\nSource virtual environment and install python packages:\n\n```bash\nsource /srv/homeassistant/bin/activate\npip install robonomics-interface~=1.3\n```\n\nThen go to `.homeassistant` directory:\n\n```bash\ncd /home/homeassistant/.homeassistant\n```\nCreate folder `custom_components` and clone in there the repository with the integration:\n\n```bash\nmkdir custom_components\ncd custom_components\nsvn checkout https://github.com/airalab/homeassistant-robonomics-integration/trunk/custom_components/robonomics\n```\n\nAfter that exit Home Assistant user and restart service:\n\n```shell\nexit\nsudo systemctl restart home-assistant@homeassistant.service\n```\n\nThat's all. Next step is to install [MQTT Broker.](/docs/mqtt-broker/)","tools":["Ubuntu Server 22.04 LTS https://ubuntu.com/download/raspberry-pi","Home Assistant 2022.8.2","robonomics-interface 1.3.4 https://github.com/Multi-Agent-io/robonomics-interface/releases/tag/1.3.4","IPFS 0.14.0 https://docs.ipfs.io/install/command-line/"],"fileInfo":{"path":"pt/raspberry-setup.md","name":"raspberry-setup"}}},"context":{}}
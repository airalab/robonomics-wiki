{"hash":"fd5d0a5f3aa1c3e6f4368684b3f72c24a1a4a9b2","data":{"doc":{"id":"fbd1e6123c44c7e2bf0a5992a0dfebf1","title":"Robonomics IO Datalog","description":"","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/rio-datalog.0b85c65.a869c7242cdc986ff6cc2438fed27d43.png","size":{"width":1920,"height":1080},"sizes":"(max-width: 1920px) 100vw, 1920px","srcset":["/assets/static/rio-datalog.1b91758.a869c7242cdc986ff6cc2438fed27d43.png 480w","/assets/static/rio-datalog.3df3210.a869c7242cdc986ff6cc2438fed27d43.png 1024w","/assets/static/rio-datalog.0b85c65.a869c7242cdc986ff6cc2438fed27d43.png 1920w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1920 1080' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-8265d65bfbc773ff4431c63a8b5fb4a5'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-8265d65bfbc773ff4431c63a8b5fb4a5)' width='1920' height='1080' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsSAAALEgHS3X78AAADF0lEQVRo3u2YW09TQRDH%2bQgGUR9URFQExXhLfPI7%2bOiLhhcjIRhAbpVyF0hREFGMRMVoxCACAQTBgBAIgsglxmiiIpdgKbU3bOkNCrR/dzYtVqDwIIET3Ukm5%2bzO7p6zvzO7Z2f8tu8NBWlA0EH4796P4PCTMFssIHE6nVgvcblckKL4bWMTJ917%2bMQyACQTqkkMj45hXDmBL0PfoJxQYWz8OzRaHYZHRqGaVEOt0WDE3WZcqYRhamqxD9mNRpNkIfhtDTzAJ3/m7HkEhh5F0KHjfwCoqKpBnCwVDx6XI%2bJiNO7cK0NGbj6u5hdCceMW0nMUkGfl4kpmDp5UPMft0vuobWhCZEwCshUFuH6zBG/7BvhYCwsL0gMQsCcEgWHHEH7qNHaGhCOIwfAGMG0244dGy784fU2NVgutTg%2bjyQSVWo2fRqPbroVOb2A2HSwWKwyGKeh5WQ%2bz2SJdD%2bDrn0HwZ56wZdc%2bBB/5D/cAgrAjOGzZHkAvTep0eq7OxTrvstOtrlVU0h7g0ZUA/OsiAAgAAoAAIAAIAAKAbwBLDzIrHWpWsi/t72ssX%2bNLAoD3UZgCGc/pj%2b5/q1fZfTL0lH1NiGw0Dh9rSR/PMzcKxqoASBxzc3A4HH/1EAqGaDKzs7Ow2e2SihvWBFBVW4/MvGt4NzCI8soq1Dc2o2/wPTrfdKO1vYOFuv3o6ulFc2sbXjS9Ql1jE/qZneo%2bfx3C08pqFkI/RHtnFxqYncLl7t4%2bPKuuRUtbB5paXvM2ND71%2bfDxk7Q8gF4uOl7G4/7YJDnPDSSnZSFBnsHzAYnsGp%2bSzu6LeZ4gJikFRSV3IUvP5pMsLXvE29W/bEZlTR3PI1yWpSEqLhGKwmKcuxCF2GQ5UrPzEBF5CXkFRYvLb9MB0AvMuZcA5QWonq5Wqw0Wq5WvWaqj%2bH9%2bfh4zMzOw2Ww8A2RldnJ3WuOUK6AxqC3lD%2bysntqZpqd5nZXd21nfHuYZvf0D0gKwGULht%2bR%2bgxuhnj%2bJZPaAjfKAtc4Z4iQoAAgAAoAAIAAIAAKAACAACAACgACwzvILwYabXOZLVWEAAAAASUVORK5CYII=' /%3e%3c/svg%3e"},"contributors":["Vourhey","PaTara43"],"translated":true,"headings":[],"subtitles":[{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Write","anchor":"#write"},{"depth":2,"value":"Remote","anchor":"#remote"}],"content":"\nDatalog module allows you to store any string on blockchain\n\nhttps://www.youtube.com/watch?v=rs67AMyd-gE\n\nFor the examples the development network is used. Check [this](/docs/robonomics-test-network-manual/) out to set it up for yourself.\n\n## Requirements\n\n* `robonomics` [executable](https://github.com/airalab/robonomics/releases)\n* Account on parachain\n\nYou can find instructions on how to create an account [here](/docs/create-account-in-dapp)\n\n## Write\n\nAssuming local node is running:\n\n```\n% echo \"Hello Robonomics\" | ./robonomics io write datalog -s 0xb046fc3c322e91e14a61ad4f08a3809ee0de7092e73aa9b3c2b642a0f476d4d6\n```\n\nwhere `0xb046fc3c322e91e14a61ad4f08a3809ee0de7092e73aa9b3c2b642a0f476d4d6` is a private key for the account with tokens.\nIn this example the public key is 5H3iRnX16DH2sb2RLxMM8UhDZTvJjP84EhhKXv3sCiEDq6bH. Let's go to the [Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/)\nand see what happened.\n\nIn the Dapp go to Developer -> Chain state. In the \"selected state query\" list choose datalog and below choose your account. Click plus button on the right and you should see the following:\n\n![Robonomics Chain State Datalog](../images/robonomics-dapp-chain-state-datalog.jpg \"Robonomics Chain State Datalog\")\n\n## Remote\nIf your local node is configured differently from defaults or you have a remote node, it's possible to specify it with `--remote` option\n\n```\n% echo \"Hello Robonomics\" | ./robonomics io write datalog -s 0xb046fc3c322e91e14a61ad4f08a3809ee0de7092e73aa9b3c2b642a0f476d4d6 --remote https://ipfs.infura.io:5001/\n```\n"}},"context":{}}
{"hash":"79ff88dfe1b803b4578b98e30d7512680f9a1fc4","data":{"doc":{"id":"2dab861a14fbb776e45bed02f52bd046","title":"Deploy Sensor Map","description":"","contributors":["nakata"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Requirements","anchor":"#requirements"},{"depth":2,"value":"Installation","anchor":"#installation"},{"depth":2,"value":"Configuration","anchor":"#configuration"},{"depth":2,"value":"Build for Release","anchor":"#build-for-release"}],"content":"\nAfter assembling a [sensor](/docs/sensor-hardware/) and setting up [Sensors Connectivity module](/docs/sensors-connectivity-setup/)\nit is time to deploy personal decentralised sensor map.\n\n## Requirements \n\nSensors Map works on JS. So you need to install `node` and `yarn` manager.\n\n```shell\nsudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\nsudo apt-get install -y nodejs\nsudo npm install --global yarn\n```\n\n## Installation\n\nLet's download and build the map:\n\n```shell\ngit clone https://github.com/airalab/sensors.robonomics.network.git\ncd sensors.robonomics.network/\nyarn install\n```\n\nFor tests let's run the map in `development` mode. It will create map with all robonomics sensors available:\n\n```shell\nyarn serve\n```\n\nGo to url in terminal. You will see the similar:\n\n<robo-wiki-picture src=\"sensors-connectivity/robonomics_map.jpg\"/>\n\nStop it with **ctrl+C**.\n\n## Configuration\n\nNow we will create configuration files. For this go to `src` folder and rename the files:\n\n```shell\ncd src \ncp config.template.json config.json\ncp agents.template.json agents.json\n```\n\nNow you need to add your IPFS id to agents.json. First find it with `ipfs id`. It will be in \"ID\" field:\n\n```shell\n$ ipfs id\n{\n\t\"ID\": \"QmUZxw8jsRpSx5rWkTpJokPGKvWihTrt5rbRCFXzJ4eCAP\",\n\t\"PublicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/uMV3rLM/C+LOh2DGPo3chr+VM+vyYMKi...\n    ...\n```\n \nInsert your IPFS id in `agents.json`. It will look like:\n\n```json\n[\n  \"QmUZxw8jsRpSx5rWkTpJokPGKvWihTrt5rbRCFXzJ4eCAP\"\n]\n```\n\nNext open `config.json` file. You need to change the next part of configuration file:\n\n```json\n...\n  REMOTE_PROVIDER: \"\",\n  WIND_PROVIDER: \"\",\n  MAP: {\n    zoom: \"8\",\n    position: {\n      lat: \"\",\n      lng: \"\",\n    },\n  },\n  SHOW_MESSAGES: true,\n};\n```\n\nHere you have to insert latitude and longitude of your city.       \n\nOptionally, you can set up [\"Wind direction\" service](https://github.com/danwild/wind-js-server) and provide URL to it in `WIND_PROVIDER` field.\n\n## Build for Release\n\nTo build files for release run:\n```shell\nyarn build\n```\n\nIt will create `dist` directory. It contains all components of static website. To check if everything is correct,\nmove to `dist` directory and open `index.html` file. You should see the similar:\n\n<robo-wiki-picture src=\"sensors-connectivity/local_map.jpg\"/>\n\nAfter some time sensor's data from your Sensors Connectivity module will appear on the map.\n\n That's all. Now you have your own Decentralized Sensors Map. Currently, it aggregates sensors data realtime only. \n To look throughout of history measurements, you need to set up \"RoSeMAN\" module. Find out setup process in the next article.","tools":[],"fileInfo":{"path":"ko/deploy-sensor-map.md","name":"deploy-sensor-map"}}},"context":{}}
{"hash":"861b07cbb9a9e16f328849b95a985d0e0ed3c5c7","data":{"doc":{"id":"7530fb85d13aee8a86af4220a670f929","title":"Sensors Connectivity Module Setup","description":"","contributors":["LoSk-p","Vourhey","tubleronchik"],"translated":false,"headings":[],"subtitles":[{"depth":2,"value":"Pre-requirements","anchor":"#pre-requirements"},{"depth":2,"value":"Installation as PyPi package","anchor":"#installation-as-pypi-package"},{"depth":2,"value":"Running","anchor":"#running"},{"depth":2,"value":"Post installation","anchor":"#post-installation"}],"content":"\nNow let's start personal sensors Connectivity module.\n\n## Pre-requirements\n\nTo build a python package the IPFS daemon has to be installed. **This module requires IPFS daemon version no greater than 0.8.x** . \nSo, in example, IPFS daemon version is 0.8.0. Assuming, you work on linux:\n\n```\nwget https://dist.ipfs.io/go-ipfs/v0.8.0/go-ipfs_v0.8.0_linux-amd64.tar.gz\ntar -xzf go-ipfs_v0.8.0_linux-amd64.tar.gz\ncd go-ipfs\nsudo bash install.sh \nipfs init\n```\nAlso, we need to install `python3 dev` package and `pip`:\n\n```shell\nsudo apt install python3-dev python3-pip\n```\n\n## Installation as PyPi package\n\n```\npip3 install sensors-connectivity\n```\n\nIf you see warning like this:\n\n```shell\n  WARNING: The script sensors_connectivity is installed in '/home/test2/.local/bin' which is not on PATH.\n  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n```\n\nRun next command:\n```shell\ncd ~\nexport PATH=\"/usr/local/bin:$PATH\"\nsource .profile\n```\n\n<robo-wiki-title :type=\"2\" anchor=\"json-configuration\"> \nConfiguration\n</robo-wiki-title>\n\nFirst, we need to create directory for configuration file and database file. You can create it wherever you want, these commands below are just an example:\n\n```shell\ncd ~\nmkdir sensors_connectivity\ncd sensors_connectivity\ntouch database.db\n```\n\n<robo-wiki-note type=\"okay\"> Name of the database file can be any, but extension must be `.db`</robo-wiki-note>\n\nThis database will save IPFS hashes of sensor data, timestamp and service status.\n\nNext, create configuration file:\n```shell\ntouch my_config.json\n```\n\nThere is default configuration file:\n\n```json\n{\n   \"general\": {\n      \"publish_interval\": 30,\n      \"db_path\": \"\"\n   },\n   \"comstation\": {\n      \"enable\": false,\n      \"port\": \"/dev/ttyUSB0\",\n      \"work_period\": 300,\n      \"geo\": \"\",\n      \"public_key\": \"\"\n   },\n   \"httpstation\": {\n      \"enable\": true,\n      \"port\": 8001\n   },\n   \"mqttstation\": {\n      \"enable\": false,\n      \"host\": \"localhost\",\n      \"port\": 1883,\n      \"topic\": \"/freertos_mqtt_robonomics_example/#\",\n      \"username\": \"\",\n      \"password\": \"\"\n   },\n   \"luftdaten\": {\n      \"enable\": false\n   },\n   \"robonomics\": {\n      \"enable\": true,\n      \"ipfs_provider\": \"/ip4/127.0.0.1/tcp/5001/http\",\n      \"ipfs_topic\": \"airalab.lighthouse.5.robonomics.eth\"\n   },\n   \"datalog\": {\n      \"enable\": false,\n      \"suri\": \"\",\n      \"dump_interval\": 60,\n      \"temporal_username\": \"\",\n      \"temporal_password\": \"\",\n      \"pinata_api\": \"\",\n      \"pinata_secret\": \"\"\n   },\n   \"dev\": {\n      \"sentry\": \"\"\n   },\n   \"frontier\": {\n      \"enable\": false,\n      \"suri\": \"\"\n   },\n   \"trackagro\": {\n      \"enable\": false,\n      \"token\": \"\"\n   }\n}\n```\n\nfill `my_config.json` with example and **insert full path to the database file in `db_path` field.** \n\nThis configuration will be enough to get sensors data over http and send it to the Robonomics map.\n\n## Running\n\nFirst, launch IPFS daemon:\n\n```\nipfs daemon --enable-pubsub-experiment\n```\nAfter config is set, you can run the service: (in another terminal)\n\n```\nsensors_connectivity \"path/to/your/config/file\"\n```\n\nYou will be able to see logs in your console and in `~/.logs`.\n\nExample of logs:\n```shell\n$ sensors_connectivity test.json \n2022-09-02 14:08:48,408 - INFO - Getting data from the stations...\n2022-09-02 14:08:48,409 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:08:48,409 - INFO - Sending result to the feeders...\n2022-09-02 14:08:48,411 - INFO - Checking data base...\n2022-09-02 14:09:18,410 - INFO - Sending result to the feeders...\n2022-09-02 14:09:18,410 - INFO - Getting data from the stations...\n2022-09-02 14:09:18,411 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:09:48,411 - INFO - Sending result to the feeders...\n2022-09-02 14:09:48,412 - INFO - Getting data from the stations...\n2022-09-02 14:09:48,413 - INFO - airalab-http-v0.8.0: [[]]\n2022-09-02 14:10:18,413 - INFO - Sending result to the feeders...\n2022-09-02 14:10:18,413 - INFO - Getting data from the stations...\n\n```\n\n## Post installation\n\nTo connect you **sensors-connectivity** module to Robonomics map [sensors.robonomics.network](https://sensors.robonomics.network/) and see the data,\nyou have to send your IPFS id to ***vm@multi-agent.io*** or ***ping@airalab.org***. \n\nYou can get IPFS ID with the following command after running IPFS daemon (it is in the `ID` column):\n\n```console\n$ ipfs id\n{\n\t\"ID\": \"QmUZxw8jsRpSx5rWkTpJokPGKvWihTrt5rbRCFXzJ4eCAP\",\n\t\"PublicKey\": \"CAASpgIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/uMV3rLM/C+LOh2DGPo3chr+VM+vyYMKi...\n    ...\n```\n\nWe require it to add your ID to еру ACL list.\n\nIn the next article we will look at various combinations of configuration file. It will allow you to connect sensor\nover MQTT or COM port and send data to Robonomics Parachain datalog.","tools":["IPFS 0.8.0 https://docs.ipfs.io/install/command-line/","sensors-connectivity 1.2.0 https://github.com/airalab/sensors-connectivity/tree/v1.2.0"],"fileInfo":{"path":"ko/sensors-connectivity-setup.md","name":"sensors-connectivity-setup"}}},"context":{}}
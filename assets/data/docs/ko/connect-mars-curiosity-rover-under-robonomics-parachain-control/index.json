{"hash":"fafc1a72b280365300824608799e28058e0a2c73","data":{"doc":{"id":"0bf960bccd15014e02fe06ab775ff988","title":"Connect Mars Curiosity rover under Robonomics parachain control","description":"","cover_image":{"type":"image","mimeType":"image/png","src":"/assets/static/connect-mars-curiosity-rover-under-robonomics-parachain-control.0b85c65.bfb6eb4db0c4bfd7d1cdf89cee9a1928.png","size":{"width":1920,"height":1080},"sizes":"(max-width: 1920px) 100vw, 1920px","srcset":["/assets/static/connect-mars-curiosity-rover-under-robonomics-parachain-control.1b91758.bfb6eb4db0c4bfd7d1cdf89cee9a1928.png 480w","/assets/static/connect-mars-curiosity-rover-under-robonomics-parachain-control.3df3210.bfb6eb4db0c4bfd7d1cdf89cee9a1928.png 1024w","/assets/static/connect-mars-curiosity-rover-under-robonomics-parachain-control.0b85c65.bfb6eb4db0c4bfd7d1cdf89cee9a1928.png 1920w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1920 1080' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-d26584366f8276957c7bd6ca92f6dd4f'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-d26584366f8276957c7bd6ca92f6dd4f)' width='1920' height='1080' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAkCAYAAAA5DDySAAAACXBIWXMAAAsSAAALEgHS3X78AAAEoElEQVRo3u1Y%2b1PUVRTnT2jM6oeKkMq0aHrN9FP/QzNNM01NjdnDGi3UKF4i8hIWcEEEQwyUtyAP47HyEpD3GxlTEUFEQNplFxd32QcLu5/uObHbtgbCuDo7%2bT0zZ77f773ne%2b69n/s5995zvZ7dsg2km31ew6YXX4Gv33vQ6fUgsVqtcJfYbDZ4ong9IwZOuuWNd%2b8DgGRq%2bg5Gb45jYnIKwyM3MDk1jfGJ21CqZjE6dhPTd2Ywo1RibMVmYnISmrk5xz9Ur9XOeywIXk97v8qD//CTL%2bC97S34vP7OvwAoPFuKfUEH8Ft2Hnbs2oO0jEyEx8gQJTuCOHkKDkbHITQiBsGHopFbWIxj6SdRXqnAd/4BiIxLREJyKjp7%2btjX8vKy5wGw%2baWt8N7%2bNvze/wDPb/WDjwDDGYB7Oh3%2bVKp4xmk2lSoVVLNqaOfnMT0zg7ta7Uq9CrNqjaibhV6/AI1mDmr%2bVkOn03suAzj%2bBQibBBOeeuFl%2bL75BK4BBMJzvtvvWwOo06RWq/1pdZQ5f1tX1LaGejQD7PpfAPzfRQJAAkACQAJAAuBxAeC6Ja727lEA0F5PR1jbA/Z5snNW13ry4Vy%2b2pliPW26tuHqayNArgmAO0%2bCj/PEuBEfawJAMjo2DkVdA/QLCzAvLvLTYDDCaDRhaWmJlXIByhqHLl/B1eHruHJt2JFHGE0mns2ahkb8cfXv8gWDAWPjt7gd%2bp9yhe6%2bAc4rSPoGL%2bG8aNNgNMJsNvP/JvG0WCwi07zL/in7pL6Qf/JLT5PJzHZuYwBJZk4%2bckSWFyc/iv1BYfglLAIBoeEIPBiJb3/YzxlfRGwCMkW2mJaRhU937sLXu/dy3aHD8WxHAB49fgL5xSWcRQYKH8HhUQgICef3n4LD8OX3PyJEZJTnqhSccX702Q7ONKmtKFkivtrtj9DIw2hp64D82HHRZjzXkX6zZx8r9Y3S8I2w94EA0My2dnSJGerHRdE4zXB3bz8Ghy6jurYere2d6BGzNzI6hlsTt9E7MIgWUVZWUc22XSIVVms0XEZ2FYoadPX24dr1ETS3tqOppQ31TRd5VimdpjJmhGiD6ujZPzjE5R3dvcwGKm/v7Ob7ibrGZlxobmGQKe22p9xuYwBdatDgSIhyiyIMVhOLZYnp7Sw0MALRVRYFnQkYu8zf03GnieYEtp3KbLtogUWECglR3bl/j3wNIDp%2b/PlOJKWmY29gKF980CUHUTk6Xg5ZUgpiEuRMU7ooOSBoevJ0LtcpBEOI6qT0b2JKGmTyFIRFxSIjK4fLklJ/FWEQCf%2bfQ5CeeRqV52txKq%2bQQ4pCK/ZIMocJ0Z9CLEj4ysjKdoBIM/6PWt27C5D0XxoSdK5CybkKvh2iOC4qLceZknKmYkFxqSgv4/fqmnrkF5XwIMp%2br%2bKQIQYQ3ZPTTjBV6baI1pUqYUOhlXfmLE7lFvA609bZhRuCbZWKWtQ2NCG7oAh1F5pQU9/IodPR1YMsYdvTP%2bCI84fdNTxuG1yvuKtv6zoIPZRu2Mf67F1PkI8MAE9Vdx2apGRIAkACQAJAAkACQAJAAkACQAJAAuDJBOAv1OQiVAcNQP0AAAAASUVORK5CYII=' /%3e%3c/svg%3e"},"contributors":["Vourhey","PaTara43"],"translated":false,"headings":[],"subtitles":[{"depth":3,"value":"1. Set up a simulation","anchor":"#1-set-up-a-simulation"},{"depth":3,"value":"2. Download Robonomics controller package","anchor":"#2-download-robonomics-controller-package"},{"depth":3,"value":"3. Manage accounts in DAPP","anchor":"#3-manage-accounts-in-dapp"},{"depth":3,"value":"4. Start Robonomics","anchor":"#4-start-robonomics"}],"content":"\n**Let's see how Robonomics Parachain control allows to make Mars Curiosity rover move. Requirements:**\n- ROS Melodic + Gazebo + RViz (installation manual [here](http://wiki.ros.org/melodic/Installation))\n- extra packages:\n```shell\nsudo apt-get install ros-melodic-gazebo-ros-control ros-melodic-effort-controllers ros-melodic-joint-state-controller\n```\n- IPFS up to [0.6.0](https://dist.ipfs.io/go-ipfs/v0.6.0/go-ipfs_v0.6.0_linux-386.tar.gz)\n- [IPFS Companion Extension](https://github.com/ipfs/ipfs-companion)\n- Robonomics node (binary file) (download latest release [here](https://github.com/airalab/robonomics/releases). This tutorial tested fine on v1.1)\n\nHere is the video showing successful launch:\n\nhttps://www.youtube.com/watch?v=6BSOyRbmac8\n\n### 1. Set up a simulation\nDownload Curiosity rover package:\n```shell\nmkdir -p robonomics_ws/src\ncd robonomics_ws/src\ngit clone https://bitbucket.org/theconstructcore/curiosity_mars_rover/src/master/\ncd ..\ncatkin build\n```\nWe need to adjust starting conditions to make our rover spawn smoothly:\n- Go to\n\n`src/master/curiosity_mars_rover_description/worlds` and change line 14 of the file` mars_curiosity.world` to \n`<pose>0 0 8 0 0 0</pose>`\n\n- Go to\n\n`src/master/curiosity_mars_rover_description/launch` and change line 4 of the file `mars_curiosity_world.launch` to \n`<arg name=\"paused\" default=\"false\"/>`\n\nDon't forget to add source command to `~/.bashrc`\n`source /home/$USER/robonomics_ws/devel/setup.bash`\n\n\n- Reboot console and launch the simulation:\n\n```shell\nroslaunch curiosity_mars_rover_description main_real_mars.launch\n```\n![Mars rover](../images/curiosity-demo/rover.jpg?raw=true \"Mars rover\")\n\nNote: if the image is dark, e.g. shadowed, change `Camera` to `Orthorgraphic` in Gazebo toolbar.\nThe simulation can be closed for a while.\n\n------------\n\n### 2. Download Robonomics controller package\nTo download a controller package for Rover type in terminal:\n```shell\ncd ~/robonomics_ws/src\ngit clone https://github.com/PaTara43/robonomics_sample_controller\ncd robonomics_sample_controller\npip3 install -r requirements.txt\npip3 install rospkg\ncd ..\ncatkin build -DPYTHON_EXECUTABLE=/usr/bin/python3 # The controller supports python3\n```\n\n------------\n\n### 3. Manage accounts in DAPP\nSince we are testing, let us create a local robonomics network with robonomics binary file:\n```shell\n./robonomics --dev --tmp\n```\n\n![Running node](../images/curiosity-demo/robonomics.jpg?raw=true \"Running node\")\n\n\nGo to [Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/) and switch to local node \n\n![Local node](../images/curiosity-demo/local_node.jpg?raw=true \"Local node\")\n\n\nGo to Accounts and create **CURIOSITY** and **EMPLOYER** accounts.\n\n**Important**! Copy each account's address (to copy address click on account's icon) and Curiosity's account **mnemonic seed** (obtained while creating the account)\nTransfer some money (units) to these accounts. You can read more about accounts in Robonomics [here](https://wiki.robonomics.network/docs/en/create-account-in-dapp/)\n\n![Account creation](../images/curiosity-demo/account_creation.jpg?raw=true \"Account creation\")\n\n\nAdd these addresses, seed and node address (defaults to `ws://127.0.0.1:9944` for developer node) in `config.config` in `robonomics_ws/src/robonomics_sample_controller/src`. No quotes.\n\n------------\n\n\n### 4. Start Robonomics\n\nBefore going further, make sure that you have installed [IPFS Companion Extension](https://github.com/ipfs/ipfs-companion).\n\nIn a separate terminal launch IPFS:\n```shell\nifps init #you only need to do this once per IPFS installation\nipfs daemon\n```\n\nIn another separate terminal launch Curiosity simulation if it's not live:\n```shell\nroslaunch curiosity_mars_rover_description main_real_mars.launch\n```\nWait till it stays still\n\nIn another terminal launch the controller:\n```shell\nrosrun robonomics_sample_controller sample_controller.py\n```\n![Controller](../images/curiosity-demo/controller.jpg?raw=true \"Controller\")\n\n\nNow you can send a transaction triggering the Rover to start moving and collecting data. To do so, you can use the same [Robonomics Parachain portal](https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/).\nGo to `Developer->Extrinsics` and select Curiosity's employer account, `launch` extrinsic, Curiosity's account as a target account and `yes` as a parameter.\nSubmit the extrinsic.\n\n![Extrinsic](../images/curiosity-demo/extrinsic.jpg?raw=true \"Extrinsic\")\n\n\nThe robot should start moving. It won't accept commands from other accounts neither commands with `no` parameter. The rover will move around and collect data for about a minute.\nLater, when the job is done:\n\n![Job done](../images/curiosity-demo/job_done.jpg?raw=true \"Job done\")\n\n\nOn the Robonomics portal go to `Developer -> Chain state` and obtain a `CURIOSITY` datalog using “+” button with selected `datalog -> RingBufferItem` as query: \n\n![Datalog](../images/curiosity-demo/datalog.jpg?raw=true \"Datalog\")\n\nNow the IPFS hash of the telemetry is saved in the blockchain. To see the data simply copy the hash and find it on a gateway:\n\n![Data in IPFS](../images/curiosity-demo/data_in_ipfs.jpg?raw=true \"Data in IPFS\")\n\n\nThis telemetry is kept in a decentralized storage, and it's hash is stored in a blockchain!\n","tools":[]}},"context":{}}
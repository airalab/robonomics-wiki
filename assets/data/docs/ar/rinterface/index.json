{"hash":"2310785970cc94a8f6e745a2fc6ad60f7447cafd","data":{"doc":{"id":"c3e978f3aa6e973ef2d992692d285360","title":"واجهة Python و Robonomics IO","description":"","contributors":["PaTara43"],"headings":[],"subtitles":[{"depth":2,"value":"robonomics-interface","anchor":"#robonomics-interface"},{"depth":3,"value":"التثبيت","anchor":"#التثبيت"},{"depth":3,"value":"استخدام عينة","anchor":"#استخدام-عينة"},{"depth":2,"value":"CLI tool","anchor":"#cli-tool"}],"content":"\n**بعض العمليات الخارجية المنفذة في حزم Robonomics من الصعب تقديمها من تطبيق Polkadot. بالإضافة إلى ذلك، هناك \nحاجة للتفاعل مع هذه الوظائف باستخدام لغات البرمجة. لهذا الغرض تم تطوير أداة Python بسيطة\ncalled [robonomics-interface](https://github.com/Multi-Agent-io/robonomics-interface). إنه غلاف فوق صيانة polkascan\n[py-substrate-interface](https://github.com/polkascan/py-substrate-interface). فيما يلي وصف موجز لهذه الحزمة\nوبعض الروابط والأمثلة المفيدة. أيضًا، يتم مناقشة أدوات CLI.**\n\n## robonomics-interface\n\nمتاح على [PyPi](https://pypi.org/project/robonomics-interface/) حزمة جاهزة للتنزيل والإعداد.\nهناك وثائق مفصلة تم إنشاؤها بواسطة docstring [documentation](https://multi-agent-io.github.io/robonomics-interface/) متاحة أيضًا.\n\nفي النهاية، هذه أداة للمطورين الذين يرغبون في التفاعل مع سلسلة كتل Robonomics عبر أدوات البرمجة. تقريبًا \nجميع مشاريع Python لفريق Robonomics التي تتفاعل مع الباراشين تستخدم هذه الواجهة.\n\n### التثبيت\n\nتتطلب عملية التثبيت من المستخدم تثبيت Python 3.8 على الأقل. لا يوجد `x86` أو `arm7` أو `arm8`.\nعملية تجميع. يتم بناء ونشر جميع العجلات من قبل مسؤولي الاعتماديات.\n\nيتم استخدام `pip` كأداة تثبيت:\n\n```bash\n$ pip3 install robonomics_interface\n```\n\n### استخدام عينة\n\nالفكرة لرئيسية هي إنشاء مثيل `Account` ثم استخدامه لإنشاء مثيلات مخصصة للحزم.\n\n\n```python\nfrom robonomicsinterface import Account, Datalog\naccount = Account()\ndatalog_ = Datalog(account)\ndatalog_.get_item(addr=\"4G1V6yyvrkd3Z57H1giUky8RTRX3SZieRvuDpQzK4knNRy5R\",index=2)\n\n>>> (1657226418528, 'blah')\n```\n\n<robo-wiki-note type=\"note\" title=\"Local node\">\n\n  من الممكن أيضًا استخدام نقاط النهاية المخصصة (على سبيل المثال، العقد المحلي للاختبار):\n\n  ```python\n  account = Account(remote_ws=\"ws://127.0.0.1:9944\")\n  ```\n\n</robo-wiki-note>\n\nمن الممكن أيضًا تقديم العمليات الخارجية:\n\n```python\nfrom robonomicsinterface import Account, Datalog\naccount = Account(seed=\"one two three four five six seven eight nine ten eleven twelve\")\ndatalog_ = Datalog(account)\ndatalog_.record(\"Hello, Robonomics!\")\n\n>>> 0xb2f742b6164ffc14b75a21188b37287c2416e6617635805e0a77db12773f6068  # this is an extrinsic hash\n```\n\n<robo-wiki-note type=\"note\" title=\"Docs\">\n\n  كما تم ذكره، تتوفر المزيد من الأمثلة على صفحة [documentation](https://multi-agent-io.github.io/robonomics-interface/) .\n\n</robo-wiki-note>\n\n## CLI tool\n\n`robonomics-interface` يحتوي أيضًا على أدوات CLI لـ Python `click` للاستخدام في أغراض النمذجة الأولية والاختبارات السريعة. يتم تثبيتها\nمع الحزمة ومتاحة في الطرفية:\n\n```bash\n$ robomomics_interface --help\n\n#Usage: robonomics_interface [OPTIONS] COMMAND [ARGS]...\n#\n#Options:\n#  --help  Show this message and exit.\n#\n#Commands:\n#  read   Subscribe to datalog/launch events in the chain\n#  write  Send various extrinsics (launch commands or record datalogs)\n```\n\nيمكنك محاولة استخدامها مع العقد المحلي. تم اعتماد فلسفة الأنابيب:\n\n```bash\n$ echo \"Hello, Robonomics!\" | robonomics_interface write datalog -s \"//Alice\" --remote_ws \"ws://127.0.0.1:9944\"\n\n#0x22dbac7d25d2ee67c7d985f074163f674c8c9b4c554e545ca4c7186307e9023c  # this is an extrinsic hash\n```","tools":["Robonomics 2.3.0 https://github.com/airalab/robonomics","robonomics_interface 1.3.5 https://github.com/Multi-Agent-io/robonomics-interface"],"fileInfo":{"path":"ar/rinterface.md","name":"rinterface"}}},"context":{}}
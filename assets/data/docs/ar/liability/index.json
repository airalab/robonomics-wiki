{"hash":"c0866f89959ae9d68f0eed033d571afa750f3892","data":{"doc":{"id":"77ec5a4ab0cbdbb33e777f8c57a4fb0c","title":"المسؤولية","description":"","contributors":["PaTara43"],"headings":[],"subtitles":[{"depth":2,"value":"نظرة عامة على النظرية","anchor":"#نظرة-عامة-على-النظرية"},{"depth":3,"value":"المفاوضات","anchor":"#المفاوضات"},{"depth":3,"value":"التوقيعات","anchor":"#التوقيعات"},{"depth":2,"value":"إنشاء المسؤولية","anchor":"#إنشاء-المسؤولية"},{"depth":3,"value":"التحضيرات","anchor":"#التحضيرات"},{"depth":3,"value":"1. انتقل إلى Developer -> Extrinsics","anchor":"#1-انتقل-إلى-developer---extrinsics"},{"depth":3,"value":"1. انتقل إلى Developer -> Extrinsics الخارجية","anchor":"#1-انتقل-إلى-developer---extrinsics-الخارجية"},{"depth":3,"value":"2. اختر المسؤولية -> إنشاء من قائمة الاستخراجات الممكنة","anchor":"#2-اختر-المسؤولية---إنشاء-من-قائمة-الاستخراجات-الممكنة"},{"depth":3,"value":"3. قم بإرسال العملية","anchor":"#3-قم-بإرسال-العملية"},{"depth":3,"value":"4. استعراض المسؤولية الخاصة بك في الأحداث","anchor":"#4-استعراض-المسؤولية-الخاصة-بك-في-الأحداث"},{"depth":3,"value":"5. استكشاف التخزين","anchor":"#5-استكشاف-التخزين"},{"depth":2,"value":"التقارير","anchor":"#التقارير"},{"depth":3,"value":"1. انتقل إلى extrinsics ، liability -> finalize(report)","anchor":"#1-انتقل-إلى-extrinsics-،-liability---finalizereport"},{"depth":3,"value":"2. استكشاف reports","anchor":"#2-استكشاف-reports"},{"depth":3,"value":"3. التحقق من الأرصدة","anchor":"#3-التحقق-من-الأرصدة"}],"content":"\n**لتحويل الروبوتات إلى عوامل اقتصادية، يحتاج المرء إلى أداة تعاقدية للقيام بذلك. الوفاء بالمسؤولية - منصة Robonomics التي تنفذ العقود بين حسابات Parachain!**\n\n<robo-wiki-note type=\"warning\" title=\"Dev Node\">\n\n  يرجى الانتباه إلى أن هذا البرنامج التعليمي معروض على مثيل محلي لـ Robonomics Node. قم بإعداده باستخدام [هذه التعليمات](/docs/run-dev-node).\n\n</robo-wiki-note>\n\n## نظرة عامة على النظرية\n\nبالعودة إلى إثناوم، كان هناك هيكل معقد جدًا لتفاعل المسؤولية. يمكنك التعرف عليه [هنا](/docs/robonomics-how-it-works). في هذه الأيام أصبحت الأمور أسهل قليلاً مع كوساما!\n\n### المفاوضات\n\nلتوقيع العقد، يحتاج الجانبان إلى التفاوض أولاً. يمكن إجراء ذلك بعدة طرق، بما في ذلك [IPFS PubSub](https://blog.ipfs.tech/25-pubsub/) أو Robonomics PubSub. عينة من كود Python باستخدام Robonomics PubSub هي\nمعروض [هنا](https://multi-agent-io.github.io/robonomics-interface/usage.html#pubsub). \n\nالعرض والطلب عبارة عن رسائل تحتوي على خاصيتين رئيسيتين للعقد: **الوصف الوظيفي** و **السعر**. يجب أن يصمم المستخدم تنسيق الرسالة لكل تطبيق محدد. ليس من المهم في عملية المفاوضات اتباع قاعدة صارمة بشأن الشكل. يتم عرض التدفق المحتمل في الصورة أدناه.\n\n<robo-wiki-picture src=\"liability/negotiations.jpg\" />\n\n<robo-wiki-note type=\"warning\" title=\"PubSub\">\n\n  يرجى ملاحظة أن PubSub هو بروتوكول مفتوح ، لذا يجب عدم نقل أي بيانات حساسة. لهذا يجب عليك استخدام بروتوكولات أخرى.\n\n</robo-wiki-note>\n\n\n### التوقيعات\n\nعندما تنتهي المفاوضات بنجاح، يحتاج كل جانب إلى التوقيع على ما يسمى باتفاقه المسمى بالتوقيع. هذه رسالة تحتوي على الوصف الوظيفي والسعر **بصيغة محددة** موقعة بمفتاح خاص للحساب. توجد [أداة Python](https://multi-agent-io.github.io/robonomics-interface/modules.html#robonomicsinterface.المسؤولية.sign_liability) لذلك أيضًا.\n - يُطلق على وصف الوظيفة اسم **التقنيات**. هذا هو سلسلة طويلة بطول 32 بايتًا يمكن أن تكون CID مشفرة.\n - يُطلق على السعر اسم **الاقتصاد**. هذا هو عشري XRT - واينر. 1 واينر = 10 ** -9 XRT.\n\n<robo-wiki-note type=\"note\" title=\"32 bytes\">\n\n  يمكن للشخص الحصول على [IPFS](https://ipfs.tech/) CID بتنسيق مناسب باستخدام [مكتبة Python](https://multi-agent-io.github.io/robonomics-interface/modules.html#robonomicsinterface.utils.ipfs_qm_hash_to_32_bytes).\n  عند استخدام وظيفة `sign_liability` ، لا حاجة لتحويل الهاش ، سيتم ذلك تلقائيًا.\n\n</robo-wiki-note>\n\nبعد المثال على القهوة:\n\n1. المهمة هي JSON\n```json\n{\"task\": \"make_espresso\", \"description\": \"Make one cup of espresso\"}\n```\n2. تكون CID الخاص بها هو `QmP17mWKtQtq2Gq6qZAggPRrho3sVjQGBpXZ8KZiQ57FDi`\n3. لذا فإن **التقنيات** (CID المحول) هو `0x09daaa8055722a6894951b1273e807f8a46628efeec46805f0228ace230bd5a9` \n4. **الاقتصاد** هو `1.5 XRT`.\n\nعند التوقيع، حان الوقت لإنشاء مسؤولية! يمكن أن يتم ذلك عن طريق أحد الطرفين (إما الوعد أو الوعد) أو عن طريق حساب طرف ثالث لما يسمى بالمزود.\n\n## إنشاء المسؤولية\n\n### التحضيرات\n\nوكما ذكرنا سابقًا، يشارك جانبان على الأقل في هذه العملية. في هذا المثال، دعونا نستخدم ثلاثة وننشئ موفرًا منفصلاً لهذا الغرض. لنفترض أن المفاوضات جرت بطريقة أو بأخرى بالفعل.\n\n### 1. انتقل إلى Developer -> Extrinsics\n\n<robo-wiki-picture src=\"liability/balances.jpg\" />\n\nهنا قمنا بتزويد المزود بـ 100 XRT للتوقيع على المسؤوليات الخارجية، وتم منح الوعد 2 XRT لدفع ثمن العمل.\nلم يتم منح المتعهد أي أموال (باستثناء الوديعة القائمة على الوجود بمقدار 1 mXRT على الأقل).\n\n### 1. انتقل إلى Developer -> Extrinsics الخارجية\n\n<robo-wiki-picture src=\"liability/extrinsics.jpg\" />\n\n### 2. اختر المسؤولية -> إنشاء من قائمة الاستخراجات الممكنة\n\nاختر أيضًا الحساب الذي ترغب في تقديم الاستخراج معه. قم بملء جميع المعلمات.\n\n<robo-wiki-picture src=\"liability/create.jpg\" />\n\n<robo-wiki-note type=\"note\" title=\"التوقيعات\">\n\n  نظرًا لأن المزود يستخدم هنا ، لا حاجة لمعرفة بذور المشاركين. فقط توقيعاته المطلوبة.\n\n</robo-wiki-note>\n\n### 3. قم بإرسال العملية\n\n<robo-wiki-picture src=\"liability/submit.jpg\" />\n\n### 4. استعراض المسؤولية الخاصة بك في الأحداث\n\nللقيام بذلك، انتقل إلى \"Network -> Explorer\" وابحث عن قائمة الأحداث على اليمين. انقر على أيقونة المثلث للتوسيع.\n\n<robo-wiki-picture src=\"liability/new-liability.jpg\" />\n\n<robo-wiki-note type=\"note\" title=\"Hash\">\n\n  يمكن تحويل التجزئة إلى IPFS CID باستخدام نفس [أداة Python](https://multi-agent-io.github.io/robonomics-interface/modules.html#robonomicsinterface.utils.ipfs_32_bytes_to_qm_hash).\n\n</robo-wiki-note>\n\n### 5. استكشاف التخزين\n\nيمكنك أيضًا استكشاف بعض الخصائص للمسؤوليات في وحدة التخزين `liability`.\n\n<robo-wiki-picture src=\"liability/storage-liability.jpg\" />\n\n<robo-wiki-note type=\"note\" title=\"Next Index\">\n\n  تظهر وظيفة التخزين `Next Index` أحدث فهرس للمسؤولية +1 ، لذلك على الرغم من أنها `1` ، يتم استكشاف المسؤولية `0`.\n\n</robo-wiki-note>\n\n## التقارير\n\nتخيل أن القهوة تم إعدادها والآن يحتاج جهاز صنع القهوة إلى الإبلاغ عنها بطريقة ما. هنا تأتي تقارير المسؤولية إلى الساحة. كدليل على العمل ، يضيف الحساب CID آخر كمحتوى تقرير عند إنهاء المسؤولية الحالية. هذا مرة أخرى يتطلب توقيع المتعهد.\n\n<robo-wiki-note type=\"note\" title=\"Report signature\">\n\n  تحتوي الرسالة الموقعة على مؤشر المسؤولية الحالي ومعرف IPFS CID للتقرير المشفر بتمثيل 32 بايت. مرة أخرى ، يمكن أن يساعد [أداة Python](https://multi-agent-io.github.io/robonomics-interface/modules.html#robonomicsinterface.Liability.sign_report) في توقيع التقرير.\n\n</robo-wiki-note>\n\nمع مثال آلة القهوة:\n\n1. التقرير هو JSON\n```json\n{\"report\": \"Coffee made! Time to execute - 80 seconds.\"}\n```\n2. معرف IPFS CID الخاص به هو `QmeXCrBuv6cw825JJfSWqNVv28AyjJZW9KReN9wcLQjfCm`\n3. لذا فإن **الحمولة** (CID المحولة) هي `0xf06f2394f55537a5f37d63fd72bfbef50e9f60ea9e0e34224e455afae27a97a2`\n4. **المؤشر** هو `0` وهو المؤشر الحالي للمسؤولية.\n\n### 1. انتقل إلى extrinsics ، liability -> finalize(report)\n\nاملأ المعلمات وأرسلها خارجيًا. مرة أخرى، قد يتم ذلك عن طريق حساب جهة خارجية.\n\n<robo-wiki-picture src=\"liability/report.jpg\" />\n\n<robo-wiki-note type=\"warning\" title=\"Existential deposit\">\n\n  تنبيه: يجب أن يكون حساب المتعهد غير \"ميت\" - يجب أن يكون لديه الإيداع الحيوي بحد أدنى 1 mXRT.\n\n</robo-wiki-note>\n\nقم بتوقيع وإرسال التقرير. عند الانتهاء ، يمكنك استكشافه في الأحداث.\n\n<robo-wiki-picture src=\"liability/new-report.jpg\" />\n\n### 2. استكشاف reports\n\nيمكنك أيضًا ملاحظة التقرير في المخزن. انتقل إلى `Developer -> Storage` واختر `المسؤولية` من القائمة المنسدلة.\n\n<robo-wiki-picture src=\"liability/storage-report.jpg\" />\n\n### 3. التحقق من الأرصدة\n\nفي الصورة يتم عرض أن المتعهد حصل على \"salary\"\". حدثت علاقة اقتصادية!\n\n<robo-wiki-picture src=\"liability/balances-2.jpg\" />\n\n\n<robo-wiki-note type=\"note\" title=\"Verifying\">\n\n  في الوقت الحالي ، ليس هناك طريقة للتحقق مما إذا تم الانتهاء من العمل ، لذلك بمجرد أن يقوم المتعهد بالإبلاغ ، يتم تحويل الرموز إلى حسابه.\n  سيتم إضافة ميزة التحقق في المستقبل.\n\n</robo-wiki-note>","tools":["Robonomics 2.3.0 https://github.com/airalab/robonomics","robonomics_interface 1.3.5 https://github.com/Multi-Agent-io/robonomics-interface"],"fileInfo":{"path":"ar/liability.md","name":"liability"}}},"context":{}}
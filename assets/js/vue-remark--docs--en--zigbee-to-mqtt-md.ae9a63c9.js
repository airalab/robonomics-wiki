(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vue-remark--docs--en--zigbee-to-mqtt-md"],{

/***/ "3fsO":
/*!***************************************************************************************!*\
  !*** ./docs/en/zigbee-to-mqtt.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \***************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_zigbee_to_mqtt_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/babel-loader/lib??ref--15-0!../../node_modules/vue-loader/lib??ref--17-0!../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./zigbee-to-mqtt.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"jLso\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_15_0_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_zigbee_to_mqtt_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./docs/en/zigbee-to-mqtt.md?");

/***/ }),

/***/ "QIjt":
/*!********************************************************************************************!*\
  !*** ./docs/en/zigbee-to-mqtt.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_zigbee_to_mqtt_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/babel-loader/lib??ref--16-0!../../node_modules/vue-loader/lib??ref--17-0!../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./zigbee-to-mqtt.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"yFm6\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_16_0_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_zigbee_to_mqtt_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack:///./docs/en/zigbee-to-mqtt.md?");

/***/ }),

/***/ "UQSp":
/*!****************************************************************!*\
  !*** ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// @vue/component\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'VueRemarkRoot',\n  render(h) {\n    return h('div', null, this.$slots.default);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js?");

/***/ }),

/***/ "bK9C":
/*!******************************************************************!*\
  !*** ./docs/en/zigbee-to-mqtt.md?vue&type=template&id=8659ab58& ***!
  \******************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_17c86829_vue_loader_template_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_babel_loader_lib_index_js_ref_1_1_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_zigbee_to_mqtt_md_vue_type_template_id_8659ab58___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/.cache/gridsome\",\"cacheIdentifier\":\"17c86829-vue-loader-template\"}!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/babel-loader/lib??ref--1-1!../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../node_modules/vue-loader/lib??ref--17-0!../../node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./zigbee-to-mqtt.md?vue&type=template&id=8659ab58& */ \"fP/f\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_17c86829_vue_loader_template_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_babel_loader_lib_index_js_ref_1_1_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_zigbee_to_mqtt_md_vue_type_template_id_8659ab58___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_cache_gridsome_cacheIdentifier_17c86829_vue_loader_template_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_babel_loader_lib_index_js_ref_1_1_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_ref_17_0_node_modules_gridsome_vue_remark_lib_loader_js_ref_17_1_zigbee_to_mqtt_md_vue_type_template_id_8659ab58___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack:///./docs/en/zigbee-to-mqtt.md?");

/***/ }),

/***/ "fP/f":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/gridsome","cacheIdentifier":"17c86829-vue-loader-template"}!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/babel-loader/lib??ref--1-1!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./docs/en/zigbee-to-mqtt.md?vue&type=template&id=8659ab58& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('VueRemarkRoot', [_c('p', [_c('strong', [_vm._v(\"After installing \"), _c('a', {\n    attrs: {\n      \"href\": \"/docs/mqtt-and-hass-setup/\"\n    }\n  }, [_vm._v(\"MQTT broker\")]), _vm._v(\" to the Raspberry Pi, you can now set up your Zigbee2MQTT stick.\\nIf you have the JetHome USB JetStick Z2 it has the necessary firmware. However, if you have another \\nadapter the first thing you need to do is to flash it with Zigbee2MQTT software. You can find instructions for your \\ndevice \"), _c('a', {\n    attrs: {\n      \"href\": \"https://www.zigbee2mqtt.io/information/supported_adapters.html\",\n      \"target\": \"_blank\",\n      \"rel\": \"nofollow noopener noreferrer\"\n    }\n  }, [_vm._v(\"here\")]), _vm._v(\".\")])]), _c('h2', {\n    attrs: {\n      \"id\": \"software-install\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#software-install\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\"Software Install\")]), _c('p', [_vm._v(\"Install necessary software for Zigbee2MQTT sticks:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# Set up Node.js repository and install Node.js + required dependencies\")]), _vm._v(\"\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-doctag\"\n    }\n  }, [_vm._v(\"NOTE:\")]), _vm._v(\" Older i386 hardware can work with [unofficial-builds.nodejs.org](https://unofficial-builds.nodejs.org/download/release/v16.15.0/ e.g. Version 16.15.0 should work.\")]), _vm._v(\"\\nsudo curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -\\nsudo apt-get install -y nodejs git make g++ gcc\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# Verify that the correct nodejs and npm (automatically installed with nodejs)\")]), _vm._v(\"\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# version has been installed\")]), _vm._v(\"\\nnode --version  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# Should output v14.X, V16.x, V17.x or V18.X\")]), _vm._v(\"\\nnpm --version  \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# Should output 6.X, 7.X or 8.X\")]), _vm._v(\"\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# Create a directory for zigbee2mqtt and set your user as owner of it\")]), _vm._v(\"\\nsudo mkdir /opt/zigbee2mqtt\\nsudo chown -R \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-variable\"\n    }\n  }, [_vm._v(\"${USER}\")]), _vm._v(\": /opt/zigbee2mqtt\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# Clone Zigbee2MQTT repository\")]), _vm._v(\"\\ngit \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-built_in\"\n    }\n  }, [_vm._v(\"clone\")]), _vm._v(\" --depth 1 --branch 1.28.0 https://github.com/Koenkk/zigbee2mqtt.git /opt/zigbee2mqtt\\n\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-comment\"\n    }\n  }, [_vm._v(\"# Install dependencies (as user \\\"pi\\\")\")]), _vm._v(\"\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-built_in\"\n    }\n  }, [_vm._v(\"cd\")]), _vm._v(\" /opt/zigbee2mqtt\\nnpm ci\")])]), _c('p', [_vm._v(\"Note that the \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"npm ci\")]), _vm._v(\" could produce some \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"warning\")]), _vm._v(\" which can be ignored.\")]), _c('h2', {\n    attrs: {\n      \"id\": \"configuration-and-run\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#configuration-and-run\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\"Configuration and Run\")]), _c('p', [_vm._v(\"First, connect the adapter to Raspberry PI. Now you need to find the location of your stick. For this type in the next command.:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_vm._v(\"$ ls -l /dev/serial/by-id\")])]), _c('p', [_vm._v(\"Output should look like:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-shell\"\n    }\n  }, [_vm._v(\"ubuntu@ubuntu:~$ ls -l /dev/serial/by-id\\ntotal 0\\nlrwxrwxrwx 1 root root 13 Oct 10 01:44 usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0 -> ../../ttyUSB0\")])]), _c('p', [_vm._v(\"In this case the device is \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ttyUSB0\")]), _vm._v(\".\")]), _c('p', [_vm._v(\"Then you need to configure it. Before starting Zigbee2MQTT you need to edit the \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"configuration.yaml\")]), _vm._v(\" file. \\nThis file contains the configuration which will be used by Zigbee2MQTT.:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_vm._v(\"nano /opt/zigbee2mqtt/data/configuration.yaml\")])]), _c('p', [_vm._v(\"Basic configuration needs a few adjustments. Change the following statements:\")]), _c('ul', [_c('li', [_c('code', {\n    pre: true\n  }, [_vm._v(\"homeassistant:\")]), _vm._v(\" to \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"true\")]), _vm._v(\". It will automatically connect sensors to Home Assistant.\")]), _c('li', [_vm._v(\"uncomment \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"user\")]), _vm._v(\" and \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"password\")]), _vm._v(\"statements under \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"mqtt\")]), _vm._v(\" and fill them with your username and password from MQTT Broker. (You created them in the previous \"), _c('a', {\n    attrs: {\n      \"href\": \"/docs/mqtt-and-hass-setup/\"\n    }\n  }, [_vm._v(\"article.\")]), _vm._v(\")\")]), _c('li', [_vm._v(\"change port in \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"serial\")]), _vm._v(\"-> \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"port\")]), _vm._v(\" to \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/dev/stick_connection_place>\")]), _vm._v(\". In example \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"/dev/ttyUSB0\")]), _vm._v(\".\")])]), _c('p', [_vm._v(\"Adjusted configuration file should look like:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-shell\"\n    }\n  }, [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"#\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" Home Assistant integration (MQTT discovery)\")]), _vm._v(\"\\nhomeassistant: true\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"\\n#\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" allow new devices to join\")]), _vm._v(\"\\npermit_join: true\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"\\n#\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" MQTT settings\")]), _vm._v(\"\\nmqtt:\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"  #\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" MQTT base topic \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-keyword\"\n    }\n  }, [_vm._v(\"for\")]), _vm._v(\" zigbee2mqtt MQTT messages\")]), _vm._v(\"\\n  base_topic: zigbee2mqtt\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"  #\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" MQTT server URL\")]), _vm._v(\"\\n  server: 'mqtt://localhost'\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"  #\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" MQTT server authentication, uncomment \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-keyword\"\n    }\n  }, [_vm._v(\"if\")]), _vm._v(\" required:\")]), _vm._v(\"\\n  user: <YOUR_USERNAME>\\n  password: <YOUR_PASSWORD>\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"\\n#\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" Serial settings\")]), _vm._v(\"\\nserial:\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"  #\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" Location of CC2531 USB sniffer\")]), _vm._v(\"\\n  port: /dev/<YOUR_PORT> # /dev/ttyUSB0 for example\")])]), _c('robo-wiki-note', {\n    attrs: {\n      \"type\": \"warning\"\n    }\n  }, [_c('p', [_vm._v(\"  If you already have an active Zigbee2MQTT stick or a similar device in your home, \\n  and you are now configuring another stick, then they will conflict with each other. \")])]), _c('p', [_vm._v(\"To solve this problem you need change channel on the new device. For this add the following strings to the end of configuration file:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-shell\"\n    }\n  }, [_vm._v(\"advanced:\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"  #\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)\")]), _vm._v(\"\\n\"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-meta\"\n    }\n  }, [_vm._v(\"  #\")]), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"bash\"\n    }\n  }, [_vm._v(\" (default: 11)\")]), _vm._v(\"\\n  channel: 15\")])]), _c('p', [_vm._v(\"Now you can run zigbee2mqtt:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-built_in\"\n    }\n  }, [_vm._v(\"cd\")]), _vm._v(\" /opt/zigbee2mqtt\\nnpm start\")])]), _c('p', [_vm._v(\"If started successfully, you will see something like:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-shell\"\n    }\n  }, [_vm._v(\"Building Zigbee2MQTT... (initial build), finished\\nZigbee2MQTT:info  2022-07-29 14:36:36: Logging to console and directory: '/opt/zigbee2mqtt/data/log/2022-07-29.14-36-36' filename: log.txt\\nZigbee2MQTT:info  2022-07-29 14:36:36: Starting Zigbee2MQTT version 1.26.0 (commit #bc4ffc0)\\nZigbee2MQTT:info  2022-07-29 14:36:36: Starting zigbee-herdsman (0.14.40)\\nZigbee2MQTT:info  2022-07-29 14:36:49: zigbee-herdsman started (resumed)\\nZigbee2MQTT:info  2022-07-29 14:36:49: Coordinator firmware version: '{\\\"meta\\\":{\\\"maintrel\\\":1,\\\"majorrel\\\":2,\\\"minorrel\\\":7,\\\"product\\\":1,\\\"revision\\\":20211219,\\\"transportrev\\\":2},\\\"type\\\":\\\"zStack3x0\\\"}'\\nZigbee2MQTT:info  2022-07-29 14:36:49: Currently 0 devices are joined:\\nZigbee2MQTT:warn  2022-07-29 14:36:49: `permit_join` set to  `true` in configuration.yaml.\\nZigbee2MQTT:warn  2022-07-29 14:36:49: Allowing new devices to join.\\nZigbee2MQTT:warn  2022-07-29 14:36:49: Set `permit_join` to `false` once you joined all devices.\\nZigbee2MQTT:info  2022-07-29 14:36:49: Zigbee: allowing new devices to join.\\nZigbee2MQTT:info  2022-07-29 14:36:49: Connecting to MQTT server at mqtt://localhost\\nZigbee2MQTT:info  2022-07-29 14:36:49: Connected to MQTT server\\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/state', payload 'online'\\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/config', payload '{\\\"commit\\\":\\\"bc4ffc0\\\",\\\"coordinator\\\":{\\\"meta\\\":{\\\"maintrel\\\":1,\\\"majorrel\\\":2,\\\"minorrel\\\":7,\\\"product\\\":1,\\\"revision\\\":20211219,\\\"transportrev\\\":2},\\\"type\\\":\\\"zStack3x0\\\"},\\\"log_level\\\":\\\"info\\\",\\\"network\\\":{\\\"channel\\\":11,\\\"extendedPanID\\\":\\\"0x00124b0020cd133d\\\",\\\"panID\\\":6754},\\\"permit_join\\\":true,\\\"version\\\":\\\"1.26.0\\\"}'\\nZigbee2MQTT:info  2022-07-29 14:36:49: MQTT publish: topic 'zigbee2mqtt/bridge/state', payload 'online\")])]), _c('h2', {\n    attrs: {\n      \"id\": \"pairing-device\"\n    }\n  }, [_c('a', {\n    attrs: {\n      \"href\": \"#pairing-device\",\n      \"aria-hidden\": \"true\"\n    }\n  }, [_vm._v(\"#\")]), _vm._v(\"Pairing Device\")]), _c('p', [_vm._v(\"The most common way to switch a device to connect mode is to hold its power button. For lamps one may switch them on|off\\nfor 5 times. The zigbee2MQTT should be launched. When a device connects, you should see a message like:\")]), _c('pre', [_c('code', {\n    pre: true\n  }, [_vm._v(\"Zigbee2MQTT:info  2022-07-29 14:44:39: Successfully interviewed '0x00158d0003eeeacf', device has successfully been paired\\n\")])]), _c('p', [_vm._v(\"And a lot of additional data about this sensor. Remember ID of the sensor - in this example \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"0x00158d0003eeeacf\")]), _vm._v(\".\")]), _c('p', [_vm._v(\"Now you should see this sensor with ID in your Home Assistant WebUI. Go to \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"settings\")]), _vm._v(\" -> \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Devices & Services\")]), _vm._v(\" -> \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"Devices\")]), _vm._v(\":\")]), _c('robo-wiki-picture', {\n    attrs: {\n      \"src\": \"home-assistant/mqtt-devices.jpg\"\n    }\n  }), _c('p', [_vm._v(\"After adding all the sensors, you stop program with \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"ctrl+C\")]), _vm._v(\".\")]), _c('blockquote', [_c('p', [_vm._v(\"After adding all the sensors, you can open configuration file again to set and set \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"permit_join: false\")]), _vm._v(\", if you don’t want to add any more devices.\")])]), _c('p', [_vm._v(\"To make the Zigbee2MQTT run after reboot, make a service. Create the file:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_vm._v(\"sudo nano /etc/systemd/system/zigbee2mqtt.service\")])]), _c('p', [_vm._v(\"Add the following to it:\")]), _c('pre', [_c('code', {\n    pre: true\n  }, [_vm._v(\"[Unit]\\nDescription=zigbee2mqtt\\nAfter=network.target\\n\\n[Service]\\nExecStart=/usr/bin/npm start\\nWorkingDirectory=/opt/zigbee2mqtt\\nStandardOutput=inherit\\nStandardError=inherit\\nRestart=always\\nUser=ubuntu\\n\\n[Install]\\nWantedBy=multi-user.target\\n\")])]), _c('p', [_vm._v(\"Verify that the configuration works:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_vm._v(\"sudo systemctl start zigbee2mqtt\")])]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_vm._v(\"systemctl status zigbee2mqtt.service\")])]), _c('p', [_vm._v(\"Output should look like:\")]), _c('pre', [_c('code', {\n    pre: true\n  }, [_vm._v(\"pi@raspberry:/opt/zigbee2mqtt $ systemctl status zigbee2mqtt.service\\n● zigbee2mqtt.service - zigbee2mqtt\\n   Loaded: loaded (/etc/systemd/system/zigbee2mqtt.service; disabled; vendor preset: enabled)\\n   Active: active (running) since Thu 2018-06-07 20:27:22 BST; 3s ago\\n Main PID: 665 (npm)\\n   CGroup: /system.slice/zigbee2mqtt.service\\n           ├─665 npm\\n           ├─678 sh -c node index.js\\n           └─679 node index.js\\n\\nJun 07 20:27:22 raspberry systemd[1]: Started zigbee2mqtt.\\nJun 07 20:27:23 raspberry npm[665]: > zigbee2mqtt@1.6.0 start /opt/zigbee2mqtt\\nJun 07 20:27:23 raspberry npm[665]: > node index.js\\nJun 07 20:27:24 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Logging to directory: '/opt/zigbee2mqtt/data/log/2019-11-09.14-04-01'\\nJun 07 20:27:25 raspberry npm[665]: Zigbee2MQTT:info  2019-11-09T13:04:01: Starting Zigbee2MQTT version 1.6.0 (commit #720e393)\\n\")])]), _c('p', [_vm._v(\"Now that everything works, you can use \"), _c('code', {\n    pre: true\n  }, [_vm._v(\"systemctl\")]), _vm._v(\" to start Zigbee2MQTT automatically on boot, this can be done by executing:\")]), _c('pre', [_c('code', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs language-bash\"\n    }\n  }, [_vm._v(\"sudo systemctl \"), _c('span', {\n    pre: true,\n    attrs: {\n      \"class\": \"hljs-built_in\"\n    }\n  }, [_vm._v(\"enable\")]), _vm._v(\" zigbee2mqtt.service\")])]), _c('p', [_vm._v(\"That's all. Proceed to \"), _c('a', {\n    attrs: {\n      \"href\": \"/docs/sub-activate/\"\n    }\n  }, [_vm._v(\"\\\"IOT subscription setup\\\"\")]), _vm._v(\" to create Robonomics Parachain accounts and \\nactivate subscription to use Robonomics integration.\")])], 1);\n};\nvar staticRenderFns = [];\n\n\n//# sourceURL=webpack:///./docs/en/zigbee-to-mqtt.md?./node_modules/cache-loader/dist/cjs.js?%7B%22cacheDirectory%22:%22node_modules/.cache/gridsome%22,%22cacheIdentifier%22:%2217c86829-vue-loader-template%22%7D!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/babel-loader/lib??ref--1-1!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "jLso":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--15-0!./node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./docs/en/zigbee-to-mqtt.md?vue&type=custom&index=0&blockType=vue-remark-import ***!
  \****************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _home_runner_work_robonomics_wiki_robonomics_wiki_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@gridsome/vue-remark/src/VueRemarkRoot.js */ \"UQSp\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"Kw5r\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_1__[\"default\"].config.optionMergeStrategies;\nvar imported = {\n  VueRemarkRoot: _home_runner_work_robonomics_wiki_robonomics_wiki_node_modules_gridsome_vue_remark_src_VueRemarkRoot_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (Component) {\n  var components = Component.options.components = Component.options.components || {};\n  var computed = Component.options.computed = Component.options.computed || {};\n  Object.keys(imported).forEach(function (key) {\n    if (_typeof(imported[key]) === 'object' && typeof imported[key].render === 'function') {\n      components[key] = imported[key];\n    } else if (typeof imported[key] === 'function' && typeof imported[key].options.render === 'function') {\n      components[key] = imported[key];\n    } else {\n      computed[key] = function () {\n        return imported[key];\n      };\n    }\n  });\n});\n\n//# sourceURL=webpack:///./docs/en/zigbee-to-mqtt.md?./node_modules/babel-loader/lib??ref--15-0!./node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ }),

/***/ "kPNA":
/*!***********************************!*\
  !*** ./docs/en/zigbee-to-mqtt.md ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _zigbee_to_mqtt_md_vue_type_template_id_8659ab58___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./zigbee-to-mqtt.md?vue&type=template&id=8659ab58& */ \"bK9C\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"KHd+\");\n/* harmony import */ var _zigbee_to_mqtt_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./zigbee-to-mqtt.md?vue&type=custom&index=0&blockType=vue-remark-import */ \"3fsO\");\n/* harmony import */ var _zigbee_to_mqtt_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./zigbee-to-mqtt.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter */ \"QIjt\");\n\nvar script = {}\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  script,\n  _zigbee_to_mqtt_md_vue_type_template_id_8659ab58___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _zigbee_to_mqtt_md_vue_type_template_id_8659ab58___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\n\nif (typeof _zigbee_to_mqtt_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"] === 'function') Object(_zigbee_to_mqtt_md_vue_type_custom_index_0_blockType_vue_remark_import__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(component)\n\nif (typeof _zigbee_to_mqtt_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"] === 'function') Object(_zigbee_to_mqtt_md_vue_type_custom_index_1_blockType_vue_remark_frontmatter__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(component)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack:///./docs/en/zigbee-to-mqtt.md?");

/***/ }),

/***/ "yFm6":
/*!*********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--16-0!./node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1!./docs/en/zigbee-to-mqtt.md?vue&type=custom&index=1&blockType=vue-remark-frontmatter ***!
  \*********************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return initFrontMatter; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"Kw5r\");\n\nvar strats = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].config.optionMergeStrategies;\nvar key = '__vueRemarkFrontMatter';\nvar data = {\n  \"excerpt\": null,\n  \"title\": \"Zigbee2MQTT\",\n  \"contributors\": [\"LoSk-p\", \"dergudzon\", \"Leemo94\", \"PaTara43\"],\n  \"translated\": true,\n  \"tools\": [\"Zigbee2MQTT 1.28.2\"]\n};\nfunction initFrontMatter(Component) {\n  if (Component.options[key]) {\n    Component.options[key] = data;\n  }\n  vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].util.defineReactive(Component.options, key, data);\n  Component.options.computed = strats.computed({\n    $frontmatter: function $frontmatter() {\n      return Component.options[key];\n    }\n  }, Component.options.computed);\n}\n\n//# sourceURL=webpack:///./docs/en/zigbee-to-mqtt.md?./node_modules/babel-loader/lib??ref--16-0!./node_modules/vue-loader/lib??ref--17-0!./node_modules/@gridsome/vue-remark/lib/loader.js??ref--17-1");

/***/ })

}]);